<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title></title>
        <subtitle>漏洞不在机器，漏洞在人</subtitle>
        <icon>https://mangpumo.github.io/images/favicon.ico</icon>
        <link>https://MangPumo.github.io</link>
        <author>
          <name>Mang Pumo</name>
        </author>
        <description>欢迎来到 Mang Pumo 的个人博客!</description>
        <language>zh-CN</language>
        <pubDate>Thu, 27 Oct 2022 21:26:45 +0800</pubDate>
        <lastBuildDate>Thu, 27 Oct 2022 21:26:45 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/10/27/XTUOJ-1214A-BIV/</guid>
            <title>XTUOJ_1214A+BIV</title>
            <link>https://mangpumo.github.io/2022/10/27/XTUOJ-1214A-BIV/</link>
            <pubDate>Thu, 27 Oct 2022 21:26:45 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;ab-iv&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ab-iv&#34;&gt;#&lt;/a&gt; A+B IV&lt;/h1&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目描述&#34;&gt;#&lt;/a&gt; 题目描述&lt;/h2&gt;
&lt;p&gt;小明喜欢做 a+b 的算术，但是他经常忘记把末位对齐，再进行加，所以，经常会算错。 比如 12+13，他把 12 左移了 1 位，结果变成了 133。 小明已经算了一些等式，请计算一下他到底移动了多少位。&lt;/p&gt;
&lt;h2 id=&#34;输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入&#34;&gt;#&lt;/a&gt; 输入&lt;/h2&gt;
&lt;p&gt;第一行是一个整数 K，表示样例的个数。 以后每行一个样例，形如 a+b=c, 1≤a,b≤1e4;0≤c≤1e9。&lt;/p&gt;
&lt;h2 id=&#34;输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出&#34;&gt;#&lt;/a&gt; 输出&lt;/h2&gt;
&lt;p&gt;每行输出一个样例的结果，以 b 为标准，a 如果往左移 n 位，输出 n，如果往右移 n 位，输出 - n。 测试数据保证一定有解，如果存在多个解，输出左移的结果。&lt;/p&gt;
&lt;h2 id=&#34;样例输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输入&#34;&gt;#&lt;/a&gt; 样例输入&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12+13=1213&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12+13=1312&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12+13=25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12+13=12013&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12+13=133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12+13=142&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;样例输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输出&#34;&gt;#&lt;/a&gt; 样例输出&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int K;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scanf(&amp;quot;%d&amp;quot;,&amp;amp;K);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	while(K--)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int a,b,c,time=0,flag=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		scanf(&amp;quot;%d+%d=%d&amp;quot;,&amp;amp;a,&amp;amp;b,&amp;amp;c);//注意输入格式 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if((a+b)==c)//判断是否相等 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		    printf(&amp;quot;0\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			for(int n=1;n&amp;lt;=1000000000;n=n*10)//情况1，变得是A &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				if(a*n+b==c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				    flag=1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				    break;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		        time++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			if(flag==0)//标记判断 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				time = 0;//重置次数 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				for(int n=1;n&amp;lt;=1000000000;n=n*10)//情况2 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				    if(a+b*n==c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				        break;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		            time--;//输出负数方便 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			printf(&amp;quot;%d\n&amp;quot;,time);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/10/27/XTUOJ-1308%E6%AF%94%E8%B5%9B/</guid>
            <title>XTUOJ_1308比赛</title>
            <link>https://mangpumo.github.io/2022/10/27/XTUOJ-1308%E6%AF%94%E8%B5%9B/</link>
            <pubDate>Thu, 27 Oct 2022 21:26:24 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;比赛&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#比赛&#34;&gt;#&lt;/a&gt; 比赛&lt;/h1&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目描述&#34;&gt;#&lt;/a&gt; 题目描述&lt;/h2&gt;
&lt;p&gt;有 n 个人要进行比赛，比赛规则如下：&lt;/p&gt;
&lt;p&gt;1. 假设每轮比赛的人是 m，取最大的 k，k=2t 且 k≤m。这 k 个人每 2 人举行一场比赛，胜利者进入一下轮，失败者被淘汰。&lt;br&gt;
2. 余下的 m-k 个人，不进行比赛，直接进入下一轮&lt;br&gt;
 3. 直到决出冠军，比赛结束。&lt;br&gt;
比如有 5 个人参加比赛，第一轮举办 2 场，剩余 3 人进入第二轮，第二轮 1 场，剩余 2 人进入第三轮，第三轮举办 1 场决出冠军，所以一共要办 4 场比赛。 请问一共要举行几轮多少场比赛？&lt;/p&gt;
&lt;h2 id=&#34;输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入&#34;&gt;#&lt;/a&gt; 输入&lt;/h2&gt;
&lt;p&gt;第一行是一个整数 K，表示样例的个数。 以后每行一个样例，为 n (1≤n≤1000000000)&lt;/p&gt;
&lt;h2 id=&#34;输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出&#34;&gt;#&lt;/a&gt; 输出&lt;/h2&gt;
&lt;p&gt;每行输出两个整数，轮数和比赛场数，中间用一个空格隔开。&lt;/p&gt;
&lt;h2 id=&#34;样例输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输入&#34;&gt;#&lt;/a&gt; 样例输入&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;样例输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输出&#34;&gt;#&lt;/a&gt; 样例输出&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;0 0 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3 4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int K;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scanf(&amp;quot;%d&amp;quot;,&amp;amp;K);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	while(K--)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int m,count1=0,count2=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		scanf(&amp;quot;%d&amp;quot;,&amp;amp;m);//输入人数 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//int k = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		while(m&amp;gt;1)//开始比赛 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			int k = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			while(k&amp;lt;m)//不能用if!!!!!!!!!!!! &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;//分组比赛 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    k *= 2;//场数为二的倍数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			while(k&amp;gt;m)//if&amp;amp;&amp;amp;while均可 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    k /= 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    m -= k/2;//每轮剩余人数 （去掉淘汰人数） &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    count1 += k/2;//场数 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    count2 ++;//轮数 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    /*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			int k = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            while(k &amp;lt; m) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                k *= 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(k &amp;gt; m) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                k /= 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            m -= k/2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            count1 += k/2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            count2++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		printf(&amp;quot;%d %d\n&amp;quot;,count2,count1);//先轮数后场数 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/10/27/XTUOJ-1138%E7%88%B1%E4%BD%A0%E4%B8%80%E7%94%9F%E4%B8%80%E4%B8%96/</guid>
            <title>XTUOJ_1138爱你一生一世</title>
            <link>https://mangpumo.github.io/2022/10/27/XTUOJ-1138%E7%88%B1%E4%BD%A0%E4%B8%80%E7%94%9F%E4%B8%80%E4%B8%96/</link>
            <pubDate>Thu, 27 Oct 2022 15:16:02 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;爱你一生一世&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#爱你一生一世&#34;&gt;#&lt;/a&gt; 爱你一生一世&lt;/h1&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目描述&#34;&gt;#&lt;/a&gt; 题目描述&lt;/h2&gt;
&lt;p&gt;在 2013 年 1 月 4 日，这个 “爱你一生一世” 的特别日子，男生都想向自己的喜欢的女生表达爱意。 你准备在该死的 C 语言考试后，去向她（或者他？）告白。告白怎么能缺了礼物了？ 经过前期的情报收集，你了解到她喜欢的一些礼物，但是可能因为消息的不准确，其中有些 礼物并不是她喜欢。为了保险，你准备从其中挑选两件不同的礼物，请问至少有一件礼物她 会喜欢的概率。&lt;/p&gt;
&lt;h2 id=&#34;输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入&#34;&gt;#&lt;/a&gt; 输入&lt;/h2&gt;
&lt;p&gt;第一行是一个整数 K，表示样例的个数。 以后每行两个整数 N (2≤N≤10,000), 表示礼物的个数和 M (0 ≤ M ≤ N)，表示不喜欢的礼物个数。&lt;/p&gt;
&lt;h2 id=&#34;输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出&#34;&gt;#&lt;/a&gt; 输出&lt;/h2&gt;
&lt;p&gt;输出每个样例的结果，如果概率是 0 或者 1，输出 0，1，其他情况输出分数形式 a/b, 保证 a 和 b 互质。&lt;/p&gt;
&lt;h2 id=&#34;样例输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输入&#34;&gt;#&lt;/a&gt; 样例输入&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4 4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;样例输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输出&#34;&gt;#&lt;/a&gt; 样例输出&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5/6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int gcd(int a,int b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if(b&amp;gt;a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		temp = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		a = b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		b = temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if(a%b==0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return gcd(b,a%b);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int K;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scanf(&amp;quot;%d&amp;quot;,&amp;amp;K);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	while(K--)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int n,m,fz,fm,qwe;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		scanf(&amp;quot;%d %d&amp;quot;,&amp;amp;n,&amp;amp;m);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if(m==n)//概率为0 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		    printf(&amp;quot;0\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		else if(m == 1||m == 0)//概率为1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		    printf(&amp;quot;1\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		else//概率为分数 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		    fz = n*(n-1)-m*(m-1);//排列组合公式 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		    fm = n*(n-1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		    qwe = gcd(fz,fm);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		    printf(&amp;quot;%d/%d\n&amp;quot;,fz/qwe,fm/qwe);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/10/27/XTUOJ-1223RepeatOne/</guid>
            <title>XTUOJ_1223RepeatOne</title>
            <link>https://mangpumo.github.io/2022/10/27/XTUOJ-1223RepeatOne/</link>
            <pubDate>Thu, 27 Oct 2022 15:15:32 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;repeat-one&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#repeat-one&#34;&gt;#&lt;/a&gt; Repeat One&lt;/h1&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目描述&#34;&gt;#&lt;/a&gt; 题目描述&lt;/h2&gt;
&lt;p&gt;求由最小的一个 N，N 个数码 1 组成的数能被 M 整除？ 比如 M=3 时，111 能被 3 整除。M=2 时，则不存在这样的 N。&lt;/p&gt;
&lt;h2 id=&#34;输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入&#34;&gt;#&lt;/a&gt; 输入&lt;/h2&gt;
&lt;p&gt;第一行是一个整数 K (K≤1,000), 表示样例的个数。 以后每行一个整数 M (1≤M≤1,000,000)&lt;/p&gt;
&lt;h2 id=&#34;输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出&#34;&gt;#&lt;/a&gt; 输出&lt;/h2&gt;
&lt;p&gt;每行输出一个样例的结果，如果不存在这样的 N，输出 0。&lt;/p&gt;
&lt;h2 id=&#34;样例输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输入&#34;&gt;#&lt;/a&gt; 样例输入&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;999989&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;样例输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输出&#34;&gt;#&lt;/a&gt; 样例输出&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;473670&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int K;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scanf(&amp;quot;%d&amp;quot;,&amp;amp;K);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	while(K--)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int m,temp,ans=0,count=0;//不要忘记初始化 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		scanf(&amp;quot;%d&amp;quot;,&amp;amp;m);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		temp = m%10;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if(temp==0||temp==2||temp==4||temp==6||temp==8||temp==5)//一定不会被整除 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			printf(&amp;quot;0\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			do//必须写do while &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				ans = (ans*10+1)%m;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			while(ans != 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			printf(&amp;quot;%d\n&amp;quot;,count);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/10/27/XTUOJ-1137%E5%AD%97%E6%AF%8D%E5%9C%A3%E8%AF%9E%E6%A0%91/</guid>
            <title>XTUOJ_1137字母圣诞树</title>
            <link>https://mangpumo.github.io/2022/10/27/XTUOJ-1137%E5%AD%97%E6%AF%8D%E5%9C%A3%E8%AF%9E%E6%A0%91/</link>
            <pubDate>Thu, 27 Oct 2022 13:01:49 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;字母圣诞树&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字母圣诞树&#34;&gt;#&lt;/a&gt; 字母圣诞树&lt;/h1&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目描述&#34;&gt;#&lt;/a&gt; 题目描述&lt;/h2&gt;
&lt;p&gt;打印一个字母圣诞树。&lt;/p&gt;
&lt;h2 id=&#34;输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入&#34;&gt;#&lt;/a&gt; 输入&lt;/h2&gt;
&lt;p&gt;第一行是一个整数 K，表示样例的个数。以后每个样例是一个大写英文字母，占一行。&lt;/p&gt;
&lt;h2 id=&#34;输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出&#34;&gt;#&lt;/a&gt; 输出&lt;/h2&gt;
&lt;p&gt;输出对应的字母圣诞树，每行末尾没有空格，每个圣诞树的最后一行前无空格。&lt;/p&gt;
&lt;h2 id=&#34;样例输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输入&#34;&gt;#&lt;/a&gt; 样例输入&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;B&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;C&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;D&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;E&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;样例输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输出&#34;&gt;#&lt;/a&gt; 样例输出&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;AAA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; AAA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  B&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;BBBBB&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  AAA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   B&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; BBBBB&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   C&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;CCCCCCC&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   AAA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    B&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  BBBBB&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    C&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; CCCCCCC&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    D&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DDDDDDDDD&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    AAA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     B&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   BBBBB&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     C&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  CCCCCCC&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     D&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; DDDDDDDDD&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     E&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EEEEEEEEEEE&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int K;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int i,j;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scanf(&amp;quot;%d&amp;quot;,&amp;amp;K);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	while(K--)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		char eng;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		scanf(&amp;quot; %c&amp;quot;,&amp;amp;eng);//注意输入 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int len = eng-&amp;#x27;A&amp;#x27;+1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for(i=0;i&amp;lt;len;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			for(j=0;j&amp;lt;eng-&amp;#x27;A&amp;#x27;+1;j++) //单独一行空格长度固定，即总长度 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    printf(&amp;quot; &amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    printf(&amp;quot;%c\n&amp;quot;,i+65);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			for(j=0;j&amp;lt;eng-&amp;#x27;A&amp;#x27;-i;j++)//同上一题，递减 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    printf(&amp;quot; &amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			for(j=0;j&amp;lt;2*i+3;j++)//注意规律，2*（n+1）+1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    printf(&amp;quot;%c&amp;quot;,i+65);//输出 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    //printf(&amp;quot; &amp;quot;)； &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    printf(&amp;quot;\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/10/27/XTUOJ-1078%E5%AD%97%E6%AF%8D%E4%B8%89%E8%A7%92%E5%BD%A2/</guid>
            <title>XTUOJ_1078字母三角形</title>
            <link>https://mangpumo.github.io/2022/10/27/XTUOJ-1078%E5%AD%97%E6%AF%8D%E4%B8%89%E8%A7%92%E5%BD%A2/</link>
            <pubDate>Thu, 27 Oct 2022 13:00:06 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;字母三角形&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字母三角形&#34;&gt;#&lt;/a&gt; 字母三角形&lt;/h1&gt;
&lt;h2 id=&#34;description&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#description&#34;&gt;#&lt;/a&gt; Description&lt;/h2&gt;
&lt;p&gt;输出形如&lt;br&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ABCDEDCBA  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ABCDCBA  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ABCBA  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   ABA  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    A  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;的字母三角形。&lt;/p&gt;
&lt;p&gt;输入有多个样例，每个样例是一行，每行是一个大写字母。当输入字符是‘#’时结束。样例前需要输出 “case 样例号:”。如示例所示。&lt;/p&gt;
&lt;h2 id=&#34;sample-input&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sample-input&#34;&gt;#&lt;/a&gt; Sample Input&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;C&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;D&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;sample-output&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sample-output&#34;&gt;#&lt;/a&gt; Sample Output&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;case 1:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ABCBA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ABA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;case 2:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ABCDCBA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ABCBA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ABA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   A&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;	//因为多样例的问题，缩进有问题 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int cot = 1;//不可以放到循环里再声明 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//printf(&amp;quot;case %d:\n&amp;quot;,cot++);错误示范 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int i,j,k,m,len;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		char eng;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		while(scanf(&amp;quot; %c&amp;quot;,&amp;amp;eng) != EOF&amp;amp;&amp;amp; eng != &amp;#x27;#&amp;#x27;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		printf(&amp;quot;case %d:\n&amp;quot;,cot++);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		    len = eng-&amp;#x27;A&amp;#x27;+1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		    for(i=0;i&amp;lt;len;i++)//控制行数 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    for(j=len-i;j&amp;lt;len;j++)//空格数行数相反 （总长-目前行与总长比较） &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			        printf(&amp;quot; &amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    for(j=0;j&amp;lt;len-i;j++)//递减，输出正序字母（没什么说的，注意递减） &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			        printf(&amp;quot;%c&amp;quot;,j+65);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    for(j=len-1-i;j&amp;gt;0;j--)//递减，输出逆序字母，比正序少一个，所以多-1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			        printf(&amp;quot;%c&amp;quot;,j+64);//此处+64而非+65；因为个数少了一个。 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    printf(&amp;quot;\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/10/26/C%E8%AF%AD%E8%A8%80-%E5%85%A8%E6%8E%92%E5%88%97%E6%9E%9A%E4%B8%BE/</guid>
            <title>C语言_全排列枚举</title>
            <link>https://mangpumo.github.io/2022/10/26/C%E8%AF%AD%E8%A8%80-%E5%85%A8%E6%8E%92%E5%88%97%E6%9E%9A%E4%B8%BE/</link>
            <pubDate>Wed, 26 Oct 2022 23:38:31 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;全排列枚举&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#全排列枚举&#34;&gt;#&lt;/a&gt; 全排列枚举&lt;/h1&gt;
&lt;h2 id=&#34;description&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#description&#34;&gt;#&lt;/a&gt; Description&lt;/h2&gt;
&lt;p&gt;给定一个由不同的小写字母组成的字符串，输出这个字符串的所有全排列。 我们假设对于小写字母有’a’ &amp;lt; ‘b’ &amp;lt; … &amp;lt; ‘y’ &amp;lt; ‘z’，而且给定的字符串中的字母已经按照从小到大的顺序排列。&lt;/p&gt;
&lt;h2 id=&#34;input&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#input&#34;&gt;#&lt;/a&gt; Input&lt;/h2&gt;
&lt;p&gt;输入只有一行，是一个由不同的小写字母组成的字符串，已知字符串的长度在 1 到 6 之间。&lt;/p&gt;
&lt;h2 id=&#34;output&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#output&#34;&gt;#&lt;/a&gt; Output&lt;/h2&gt;
&lt;p&gt;输出这个字符串的所有排列方式，每行一个排列。要求字母序比较小的排列在前面。字母序如下定义：&lt;br&gt;
已知 S = s1s2…sk , T = t1t2…tk，则 S &amp;lt;T 等价于，存在 p (1 &amp;lt;= p &amp;lt;= k)，使得 s1 = t1, s2 = t2, …, sp - 1 = tp - 1, sp &amp;lt; tp 成立。&lt;/p&gt;
&lt;h2 id=&#34;sample-input&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sample-input&#34;&gt;#&lt;/a&gt; Sample Input&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;abc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;sample-output&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sample-output&#34;&gt;#&lt;/a&gt; Sample Output&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;abc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;acb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bac&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bca&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cab&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cba&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void qsort(int s);//递归排序 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void sort(char str[],int n);//冒泡排序 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bool ls[15];int n;//设定bool类型的数组，0对应该字母没有用到，1表示已经用了 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;char str[15],temp[15];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; scanf(&amp;quot;%s&amp;quot;,str);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; n=strlen(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; sort(str,n);//对随机输入的字符串进行排序，因为递归的时候不会按字母序大小输出，所以先排好序 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; qsort(0);//递归，并且输出 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void qsort(int s)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; if(s==n)&amp;#123;  //所有的字母用完即可输出 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  temp[s]=&amp;#x27;\0&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printf(&amp;quot;%s\n&amp;quot;,temp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; int i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; for( i=0;i&amp;lt;n;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  if(ls[i]==0) //用bool类型对应字母的状态，0表示字母没有被用到，即可以使用 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   ls[i]=1; //使用之后立刻改变状态，1表示字母已经被使用 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   temp[s]=str[i]; //使用字母，将该字母排序到temp里 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   qsort(s+1);  //在当前状态下继续向下递归，直到输出 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   ls[i]=0; //回到初始状态，比如开头是a字母的已经排完，现在用b来开头，此时a字母又可以继续使用 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void sort(char str[],int n)//冒泡排序，从小到大排 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; char tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; for(int i=1;i&amp;lt;n;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  for(int j=0;j&amp;lt;n-i;j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   if(str[j]&amp;gt;str[j+1])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tmp=str[j];str[j]=str[j+1];str[j+1]=tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/10/26/XTUOJ-1088N/</guid>
            <title>XTUOJ_1088N!</title>
            <link>https://mangpumo.github.io/2022/10/26/XTUOJ-1088N/</link>
            <pubDate>Wed, 26 Oct 2022 23:19:38 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;n&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#n&#34;&gt;#&lt;/a&gt; N!&lt;/h1&gt;
&lt;h2 id=&#34;description&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#description&#34;&gt;#&lt;/a&gt; Description&lt;/h2&gt;
&lt;p&gt;请求 N！（N&amp;lt;=10000），输出结果对 10007 取余&lt;br&gt;
输入&lt;br&gt;
每行一个整数 n，遇到 - 1 结束。&lt;br&gt;
输出&lt;br&gt;
每行一个整数，为对应 n 的运算结果。&lt;/p&gt;
&lt;h2 id=&#34;sample-input&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sample-input&#34;&gt;#&lt;/a&gt; Sample Input&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;sample-output&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sample-output&#34;&gt;#&lt;/a&gt; Sample Output&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int N;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    long long int ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(scanf(&amp;quot;%d&amp;quot;,&amp;amp;N)&amp;amp;&amp;amp;N != -1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(long long int i = 1;i&amp;lt;=N;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ans = (ans*i)%10007;  //取模&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        printf(&amp;quot;%I64d\n&amp;quot;,ans);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ans = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/10/26/XTUOJ-1075%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0/</guid>
            <title>XTUOJ_1075最小公倍数</title>
            <link>https://mangpumo.github.io/2022/10/26/XTUOJ-1075%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0/</link>
            <pubDate>Wed, 26 Oct 2022 23:12:57 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;求最小公倍数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#求最小公倍数&#34;&gt;#&lt;/a&gt; 求最小公倍数&lt;/h1&gt;
&lt;h2 id=&#34;description&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#description&#34;&gt;#&lt;/a&gt; Description&lt;/h2&gt;
&lt;p&gt;有多个测试用例，每行两个正整数 x,y，保证 x*y 不超过 2^31-1。如果 x 与 y 都为 0，则输入结束。&lt;/p&gt;
&lt;p&gt;每行输出一个测试用例的结果，即 x 与 y 的最小公倍数。（最后一行有回车）&lt;/p&gt;
&lt;h2 id=&#34;sample-input&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sample-input&#34;&gt;#&lt;/a&gt; Sample Input&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;4 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;sample-output&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sample-output&#34;&gt;#&lt;/a&gt; Sample Output&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int gcd(int a,int b)//递归 ,注意返回值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(b==0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return gcd(b,a%b);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     long long int a,b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     long long int temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     while(scanf(&amp;quot;%I64d %I64d&amp;quot;,&amp;amp;a,&amp;amp;b)!=EOF&amp;amp;&amp;amp;a != 0&amp;amp;&amp;amp;b != 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         long long int prime = gcd(a,b);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         long long int ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         long long int s;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         s = a*b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         ans = s/prime;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         printf(&amp;quot;%I64d\n&amp;quot;,ans);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/10/22/XTUOJ-1342%E4%B8%89%E8%A7%92%E5%BD%A2/</guid>
            <title>XTUOJ_1342三角形</title>
            <link>https://mangpumo.github.io/2022/10/22/XTUOJ-1342%E4%B8%89%E8%A7%92%E5%BD%A2/</link>
            <pubDate>Sat, 22 Oct 2022 16:25:01 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;三角形&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三角形&#34;&gt;#&lt;/a&gt; 三角形&lt;/h1&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目描述&#34;&gt;#&lt;/a&gt; 题目描述&lt;/h2&gt;
&lt;p&gt;已知两个三角形的三条边的长度，请问它们是否相似？&lt;/p&gt;
&lt;h2 id=&#34;输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入&#34;&gt;#&lt;/a&gt; 输入&lt;/h2&gt;
&lt;p&gt;第一行是一个整数 T (1≤T≤1000)，表示样例的个数。 每个样例占两行，每行为三个整数 a,b,c1≤a,b,c≤1000, 表示一个三角形的边长。 输入数据保证三条边一定能构成三角形。&lt;/p&gt;
&lt;h2 id=&#34;输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出&#34;&gt;#&lt;/a&gt; 输出&lt;/h2&gt;
&lt;p&gt;依次输出每个样例的结果，如果相似，输出 &amp;quot;Yes&amp;quot;，否则输出 &amp;quot;No&amp;quot;。&lt;/p&gt;
&lt;h2 id=&#34;样例输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输入&#34;&gt;#&lt;/a&gt; 样例输入&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3 4 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3 3 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3 4 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6 8 10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;样例输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输出&#34;&gt;#&lt;/a&gt; 样例输出&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;No&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Yes&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int K;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int a,b,c,x,y,z;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int m[3],n[3],i,j,t;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scanf(&amp;quot;%d&amp;quot;,&amp;amp;K);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	while(K--)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		scanf(&amp;quot;%d %d %d %d %d %d&amp;quot;,&amp;amp;a,&amp;amp;b,&amp;amp;c,&amp;amp;x,&amp;amp;y,&amp;amp;z);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		n[0]=a;n[1]=b;n[2]=c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        m[0]=x;m[1]=y;m[2]=z;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(i=0;i&amp;lt;3;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        	for(j=i;j&amp;lt;3;j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        	    if(n[i]&amp;gt;n[j])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			        t = n[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			        n[i] = n[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			        n[j] = t;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		 for(i=0;i&amp;lt;3;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        	for(j=i;j&amp;lt;3;j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        	    if(m[i]&amp;gt;m[j])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			        t = m[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			        m[i] = m[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			        m[j] = t;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if((n[0]*1.0/m[0])==(n[1]*1.0/m[1])&amp;amp;&amp;amp;(n[0]*1.0/m[0])==(n[2]*1.0/m[2]))//比例不一定为整数 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		printf(&amp;quot;Yes\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		printf(&amp;quot;No\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/10/22/XTUOJ-1259AliceAndBob/</guid>
            <title>XTUOJ_1259AliceAndBob</title>
            <link>https://mangpumo.github.io/2022/10/22/XTUOJ-1259AliceAndBob/</link>
            <pubDate>Sat, 22 Oct 2022 15:32:07 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;alice-and-bob&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#alice-and-bob&#34;&gt;#&lt;/a&gt; Alice and Bob&lt;/h1&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目描述&#34;&gt;#&lt;/a&gt; 题目描述&lt;/h2&gt;
&lt;p&gt;Alice 喜欢 n 位数，Bob 喜欢能被 m 整除的数，请问被 Alice 和 Bob 都喜欢的数有多少个？&lt;/p&gt;
&lt;h2 id=&#34;输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入&#34;&gt;#&lt;/a&gt; 输入&lt;/h2&gt;
&lt;p&gt;第一行是一个整数 K (K≤10000)，表示样例的个数。&lt;br&gt;
每个样例是一行，两个整数 n (1≤n≤18),m (2≤m≤1000000)。&lt;/p&gt;
&lt;h2 id=&#34;输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出&#34;&gt;#&lt;/a&gt; 输出&lt;/h2&gt;
&lt;p&gt;每行输出一个样例的结果。&lt;/p&gt;
&lt;h2 id=&#34;样例输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输入&#34;&gt;#&lt;/a&gt; 样例输入&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3 10000&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;样例输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输出&#34;&gt;#&lt;/a&gt; 样例输出&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;450&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;300&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int n,m,count;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int K=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    scanf(&amp;quot;%d&amp;quot;,&amp;amp;K);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //while(K--)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for (int i=1;i&amp;lt;=K;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scanf(&amp;quot;%d %d&amp;quot;,&amp;amp;n,&amp;amp;m);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(n == 1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            count = 9/m;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            printf(&amp;quot;%d\n&amp;quot;,count+1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            long long a1 = pow(10,n)-1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            long long a2 = pow(10,n-1)-1;//很奇怪，如果先求a2会WA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            long long count1 = a1/m-a2/m;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            printf(&amp;quot;%I64d\n&amp;quot;,count1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/10/21/C%E8%AF%AD%E8%A8%80-%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/</guid>
            <title>C语言_进制转换</title>
            <link>https://mangpumo.github.io/2022/10/21/C%E8%AF%AD%E8%A8%80-%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/</link>
            <pubDate>Fri, 21 Oct 2022 15:26:57 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;进制转换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#进制转换&#34;&gt;#&lt;/a&gt; 进制转换&lt;/h1&gt;
&lt;h2 id=&#34;任意进制转十进制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#任意进制转十进制&#34;&gt;#&lt;/a&gt; 任意进制转十进制&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int x,p;   //x输入数字  p该数的进制数  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scanf(&amp;quot;%d&amp;quot;,&amp;amp;x);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scanf(&amp;quot;%d&amp;quot;,&amp;amp;p);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int y=0,product=1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	while(x!=0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		y=y+(x%10)*product;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		x=x/10;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		product=product*p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	printf(&amp;quot;%d&amp;quot;,y);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;十进制转任意进制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#十进制转任意进制&#34;&gt;#&lt;/a&gt; 十进制转任意进制&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;注意：这里只能用 do...while（原因：如果输入的是 0，那么我们希望 a [0]=0）&lt;/strong&gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int x,p; //x为十进制数，p为目标进制大小 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scanf(&amp;quot;%d&amp;quot;,&amp;amp;x);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scanf(&amp;quot;%d&amp;quot;,&amp;amp;p);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int a[100]; //存放余数 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int count=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	do&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		a[count++]=x%p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		x=x/p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;while(x!=0);//当商不为0时进行循环 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	for(int i=count-1;i&amp;gt;=0;i--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		printf(&amp;quot;%d&amp;quot;,a[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;二进制转十六进制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二进制转十六进制&#34;&gt;#&lt;/a&gt; 二进制转十六进制&lt;/h2&gt;
&lt;p&gt;主要思路：确定十六进制数组大小 -&amp;gt; 确定二进制数数组大小 -&amp;gt; 二进制每过 4 位存入十六进制 1 位&lt;/p&gt;
&lt;p&gt;思路：输入的二进制数可能能不是 4 的整数倍，那么我们该如何处理呢？我们知道二进制不够 4 位，用 0 占位。于是我先将输入的二进制数除以 10000 取余 (看 4 位)，这样就确定十六进制数组的大小，反过 * 4 来就知道了二进制数的大小。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//输入2进制数 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scanf(&amp;quot;%d&amp;quot;,&amp;amp;x); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//确定：16进制数组大小size与2进制数组大小size*4.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int X=x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int size=0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	while(true)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if(X%10000!=0)&amp;#123; //采取看4位二进制的方法 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			size++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			X=X/10000;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			break;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	char tt[size];   //16进制数数组 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int t[size*4]; //2进制数数组 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      //存入 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int sum=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int count=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	for(int i=0;i&amp;lt;sizeof(t)/sizeof(int);i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		t[i]=x%10;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		x=x/10;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		sum=sum+t[i]*pow(2,count);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if(count%4==0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			if(sum&amp;gt;=10)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				tt[--size]=65+(sum-10);  //字符&amp;#x27;A&amp;#x27;的ascii码为65 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				tt[--size]=&amp;#x27;0&amp;#x27;+sum;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			count=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			sum=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	for(int i=0;i&amp;lt;sizeof(tt);i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		printf(&amp;quot;%c&amp;quot;,tt[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;十进制转十六进制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#十进制转十六进制&#34;&gt;#&lt;/a&gt; 十进制转十六进制&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int a = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int arr[32] = &amp;#123; 0 &amp;#125;;//将转换后的十六进制数放进数组arr。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int y = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scanf(&amp;quot;%d&amp;quot;, &amp;amp;a);//获取一个十进制数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	while (a != 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		y++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		arr[y] = a % 16;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		a = a / 16;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if (arr[y] &amp;gt; 9)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			arr[y] = &amp;#x27;A&amp;#x27; + (arr[y] - 10);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			arr[y] = &amp;#x27;0&amp;#x27; + arr[y];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	for (int i = y; i &amp;gt; 0; i--)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		printf(&amp;quot;%c&amp;quot;, arr[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//存放在数组中的十六进制数是反着的，打印的时候可以直接倒过来打印，打印出来的就是十六进制数了。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;十六进制转十进制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#十六进制转十进制&#34;&gt;#&lt;/a&gt; 十六进制转十进制&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;math.h&amp;gt;//千万别忘了引这个库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	char a[20];//输入十六进制数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int b[20] = &amp;#123; 0 &amp;#125;;//将十六进制数转成int类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int i, j, sum=0;//这里的sum别忘了初始化。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int c = 0;//最终的十进制数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	gets(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//将其从char类型转成int类型，并存入数组b[]中。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	while (a[sum] != &amp;#x27;\0&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if ((a[sum] &amp;gt;= &amp;#x27;a&amp;#x27;) &amp;amp;&amp;amp; (a[sum] &amp;lt;= &amp;#x27;f&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			b[sum] = a[sum] - &amp;#x27;a&amp;#x27; + 10;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			sum++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			continue;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if ((a[sum] &amp;gt;= &amp;#x27;A&amp;#x27;) &amp;amp;&amp;amp; (a[sum] &amp;lt;= &amp;#x27;F&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			b[sum] = a[sum] - &amp;#x27;A&amp;#x27; + 10;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			sum++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			continue;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			b[sum] = a[sum] - &amp;#x27;0&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			sum++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   //将每一位都转成16进制&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	for(i = 0; i &amp;lt; sum; i++)十进制转十六进制和十六进制转十进制是互逆的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		b[sum - 1 - i] = b[sum - 1 - i] * pow(16, i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//直接累加&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	for (j = 0;j&amp;lt;sum;j++) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		c = c + b[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	printf(&amp;quot;%d&amp;quot;, c);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/10/21/KALI-%E5%88%A9%E7%94%A8%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0DDOS-ATTACK/</guid>
            <title>KALI_利用脚本实现DDOS-ATTACK</title>
            <link>https://mangpumo.github.io/2022/10/21/KALI-%E5%88%A9%E7%94%A8%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0DDOS-ATTACK/</link>
            <pubDate>Fri, 21 Oct 2022 14:30:12 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;kali-linux利用脚本实现ddos-attack&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#kali-linux利用脚本实现ddos-attack&#34;&gt;#&lt;/a&gt; KALI LINUX 利用脚本实现 DDOS-ATTACK&lt;/h1&gt;
&lt;h2 id=&#34;环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#环境&#34;&gt;#&lt;/a&gt; 环境&lt;/h2&gt;
&lt;p&gt;kali-everything 2022 镜像文件&lt;br&gt;
 VMware Workstation Pro&lt;/p&gt;
&lt;h2 id=&#34;步骤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#步骤&#34;&gt;#&lt;/a&gt; 步骤&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;下载配置文件（HA-MRX 大佬的脚本）（目前在用）&lt;br&gt;
&lt;em&gt;其他脚本在此暂不提及。&lt;/em&gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git clone https://github.com/Elsa-zlt/DDos-Attack&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;进入 root 模式&lt;br&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo -i&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
 输入账号密码，密码默认不显示。&lt;/li&gt;
&lt;li&gt;前往 DDos-Attack 文件夹&lt;br&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cd DDos-Attack&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;修改（设置）对 ddos-attack.py 文件执行的权限&lt;br&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;chmod +x ddos-attack.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;执行 ddos-attack.py 程序&lt;br&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Python ddos-attack.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;执行攻击&lt;br&gt;
&lt;img data-src=&#34;https://img-blog.csdnimg.cn/be24cb11083f4979a7841b2d4322f952.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6ZKf6Imv5aCC55qE5a2m5Lmg56yU6K6w,size_15,color_FFFFFF,t_70,g_se,x_16&#34; alt&gt;&lt;br&gt;
如若成功此处会提示输入 IP 地址。&lt;br&gt;
&lt;em&gt;打开一个命令行窗口，ping 一下目标网址获得 IP 地址&lt;/em&gt;&lt;br&gt;
点击回车&lt;br&gt;
 Port 输入线程数（推荐 80）&lt;br&gt;
原因：此次攻击并没有利用肉鸡（貌似），线程数值越高，耗能也越大，效果也会越好，但线程数如果超过电脑可承受范围，会导致进程卡死。&lt;br&gt;
回车运行，按下 ctrl C 退出。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;已知报错&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#已知报错&#34;&gt;#&lt;/a&gt; 已知报错&lt;/h2&gt;
&lt;p&gt;无法出现上述页面&lt;br&gt;
大佬脚本比较旧，python 版本过高，需要切换到 2.X&lt;/p&gt;
&lt;p&gt;命令行窗口输入：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;update-alternatives --config python&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20190621114056591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L09hdmluY2k=,size_16,color_FFFFFF,t_70&#34; alt&gt;&lt;br&gt;
 输入想切换版本前面的序号 回车，即可实现版本切换√&lt;/p&gt;
&lt;h2 id=&#34;注意&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注意&#34;&gt;#&lt;/a&gt; 注意&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;攻击网址别瞎 XX 乱搞，多想一想&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;攻击网址别瞎 XX 乱搞，多想一想&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;攻击网址别瞎 XX 乱搞，多想一想&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/10/21/XTUOJ-1255%E5%8B%BE%E8%82%A1%E6%95%B0/</guid>
            <title>XTUOJ_1255勾股数</title>
            <link>https://mangpumo.github.io/2022/10/21/XTUOJ-1255%E5%8B%BE%E8%82%A1%E6%95%B0/</link>
            <pubDate>Fri, 21 Oct 2022 14:24:09 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;勾股数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#勾股数&#34;&gt;#&lt;/a&gt; 勾股数&lt;/h1&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目描述&#34;&gt;#&lt;/a&gt; 题目描述&lt;/h2&gt;
&lt;p&gt;勾股数是指满足 a2+b2=c2 的正整数，比如最有名的 “勾三股四弦五”。&lt;br&gt;
现在给你两个正整数，请问是否存在另外一个正整数，使其成为 “勾股数”？&lt;/p&gt;
&lt;h2 id=&#34;输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入&#34;&gt;#&lt;/a&gt; 输入&lt;/h2&gt;
&lt;p&gt;第一行是一个整数 K，表示样例的个数。 以后每行一个样例，为两个整数 x,y,(1≤x,y≤10000)。&lt;/p&gt;
&lt;h2 id=&#34;输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出&#34;&gt;#&lt;/a&gt; 输出&lt;/h2&gt;
&lt;p&gt;每行输出一个样例的结果。如果不能构成勾股数，输出 “None”，如果存在多个，输出最小的那个。&lt;/p&gt;
&lt;h2 id=&#34;样例输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输入&#34;&gt;#&lt;/a&gt; 样例输入&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;3 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12 13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;样例输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输出&#34;&gt;#&lt;/a&gt; 样例输出&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;5 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;None &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int K;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scanf(&amp;quot;%d&amp;quot;,&amp;amp;K);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	while(K--)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int a,b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		scanf(&amp;quot;%d %d&amp;quot;,&amp;amp;a,&amp;amp;b);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int a1,b1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if(a&amp;gt;b)//a1&amp;gt;b1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		    a1 = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		    b1 = b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			a1 = b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		    b1 = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int c1,c2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		c1 = (int)sqrt(a1*a1-b1*b1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		c2 = (int)sqrt(a1*a1+b1*b1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if(a1*a1-b1*b1==c1*c1&amp;amp;&amp;amp;c1&amp;gt;0)//c1&amp;gt;0防止a,b相等 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		printf(&amp;quot;%d\n&amp;quot;,c1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		else if(a1*a1+b1*b1==c2*c2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		printf(&amp;quot;%d\n&amp;quot;,c2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		printf(&amp;quot;None\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/10/21/XTUOJ-1113%E5%8C%BA%E9%97%B4%E7%9B%B8%E4%BA%A4/</guid>
            <title>XTUOJ_1113区间相交</title>
            <link>https://mangpumo.github.io/2022/10/21/XTUOJ-1113%E5%8C%BA%E9%97%B4%E7%9B%B8%E4%BA%A4/</link>
            <pubDate>Fri, 21 Oct 2022 13:07:15 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;区间相交&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#区间相交&#34;&gt;#&lt;/a&gt; 区间相交&lt;/h1&gt;
&lt;h2 id=&#34;description&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#description&#34;&gt;#&lt;/a&gt; Description&lt;/h2&gt;
&lt;p&gt;给你两个闭区间，请判断这两个区间是否相交。&lt;/p&gt;
&lt;h2 id=&#34;输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入&#34;&gt;#&lt;/a&gt; 输入&lt;/h2&gt;
&lt;p&gt;有多组样例，第一行是一个整数 N (1&amp;lt;=N&amp;lt;=100)，表示有多少个样例。每个样例占两行，每行是两个整数，X，Y (0&amp;lt;=X&amp;lt;=Y&amp;lt;=1000)，表示闭区间 [X,Y]。&lt;/p&gt;
&lt;h2 id=&#34;输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出&#34;&gt;#&lt;/a&gt; 输出&lt;/h2&gt;
&lt;p&gt;每行输出一个样例的结果，如果相交，那么输出 “Yes”，否则输出 “No”。&lt;/p&gt;
&lt;h2 id=&#34;sample-input&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sample-input&#34;&gt;#&lt;/a&gt; Sample Input&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4 7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6 7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;sample-output&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sample-output&#34;&gt;#&lt;/a&gt; Sample Output&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;No&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int N;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scanf(&amp;quot;%d&amp;quot;,&amp;amp;N);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	while(N--)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int count = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			int x1,y1,x2,y2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			scanf(&amp;quot;%d %d %d %d&amp;quot;,&amp;amp;x1,&amp;amp;y1,&amp;amp;x2,&amp;amp;y2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			if((x2&amp;gt;=x1&amp;amp;&amp;amp;x2&amp;lt;=y1)||(y2&amp;gt;=x1&amp;amp;&amp;amp;y2&amp;lt;=y1)||(x1&amp;gt;=x2&amp;amp;&amp;amp;x1&amp;lt;=y2)||(y1&amp;gt;=x2&amp;amp;&amp;amp;y1&amp;lt;=y2))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                printf(&amp;quot;Yes\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                printf(&amp;quot;No\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/10/21/XTUOJ-1437%E6%AF%94%E4%BE%8B/</guid>
            <title>XTUOJ_1437比例</title>
            <link>https://mangpumo.github.io/2022/10/21/XTUOJ-1437%E6%AF%94%E4%BE%8B/</link>
            <pubDate>Fri, 21 Oct 2022 12:35:29 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;比例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#比例&#34;&gt;#&lt;/a&gt; 比例&lt;/h1&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目描述&#34;&gt;#&lt;/a&gt; 题目描述&lt;/h2&gt;
&lt;p&gt;...... 图片存储问题，图片见下网址&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzIwMi4xOTcuMjI0LjU5L2V4YW0vaW5kZXgucGhwL3Byb2JsZW0vZXhhbV9yZWFkL2lkLzE0MzcvZXhhbV9pZC8zODQ=&#34;&gt; http://202.197.224.59/exam/index.php/problem/exam_read/id/1437/exam_id/384&lt;/span&gt;&lt;br&gt;
 已知 BD:DA=a:b, AE:EC=c:d, FC:FB=e:f，求 DG:GF。&lt;/p&gt;
&lt;h2 id=&#34;输入格式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入格式&#34;&gt;#&lt;/a&gt; 输入格式&lt;/h2&gt;
&lt;p&gt;第一行是一个整数 T (1≤T≤1000)，表示样例的个数。&lt;/p&gt;
&lt;p&gt;以后每行 6 个整数，依次为 a,b,c,d,e,f (1≤a,b,c,d,e,f≤1000)。&lt;/p&gt;
&lt;h2 id=&#34;输出格式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出格式&#34;&gt;#&lt;/a&gt; 输出格式&lt;/h2&gt;
&lt;p&gt;依次每行输出一个样例的结果，为两个整数 x 和 y，两者之间有一个空格，x 和 y 互质。&lt;/p&gt;
&lt;h2 id=&#34;样例输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输入&#34;&gt;#&lt;/a&gt; 样例输入&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4 1 2 1 1 2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;样例输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输出&#34;&gt;#&lt;/a&gt; 样例输出&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;12 5 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int gcd(int x,int y)//公因数 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(y==0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return gcd(y,x%y);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	int T;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	scanf(&amp;quot;%d&amp;quot;,&amp;amp;T);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	while(T--)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 		int a,b,c,d,e,f;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 		scanf(&amp;quot;%d %d %d %d %d %d&amp;quot;,&amp;amp;a,&amp;amp;b,&amp;amp;c,&amp;amp;d,&amp;amp;e,&amp;amp;f);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 		int gy,DG,GF,x,y;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 		gy = gcd((a*c*(e+f)),(d*f*(a+b)));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 		DG = (a*c*(e+f));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 		GF = (d*f*(a+b));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 		x = DG/gy;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 		y = GF/gy;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 		printf(&amp;quot;%d %d\n&amp;quot;,x,y);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/10/21/XTUOJ-1211A+BI/</guid>
            <title>XTUOJ_1211A+BI</title>
            <link>https://mangpumo.github.io/2022/10/21/XTUOJ-1211A+BI/</link>
            <pubDate>Fri, 21 Oct 2022 11:32:08 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;ab-i&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ab-i&#34;&gt;#&lt;/a&gt; A+B I&lt;/h1&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目描述&#34;&gt;#&lt;/a&gt; 题目描述&lt;/h2&gt;
&lt;p&gt;小明在做算术题，他计算了一些 a+b 的等式，请判断一下他是否算对了？&lt;/p&gt;
&lt;h2 id=&#34;输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入&#34;&gt;#&lt;/a&gt; 输入&lt;/h2&gt;
&lt;p&gt;第一行是一个整数 K，表示样例的个数。 每个样例占一行，形如 a+b=c, 其中 0≤a,b,c≤1,000&lt;/p&gt;
&lt;h2 id=&#34;输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出&#34;&gt;#&lt;/a&gt; 输出&lt;/h2&gt;
&lt;p&gt;每行输出一个样例的判断结果，算对了输出 “Yes”，否则输出 “No”。（引号不需要输出）&lt;/p&gt;
&lt;h2 id=&#34;样例输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输入&#34;&gt;#&lt;/a&gt; 样例输入&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1+2=3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2+3=4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;样例输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输出&#34;&gt;#&lt;/a&gt; 样例输出&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;No&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int K;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scanf(&amp;quot;%d&amp;quot;,&amp;amp;K);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	while(K--)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int a,b,c,ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		scanf(&amp;quot;%d+%d=%d&amp;quot;,&amp;amp;a,&amp;amp;b,&amp;amp;c);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ans = a+b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if(ans==c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		    printf(&amp;quot;Yes\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		printf(&amp;quot;No\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/10/21/XTUOJ-1405%E4%B8%96%E7%95%8C%E6%9D%AF/</guid>
            <title>XTUOJ_1405世界杯</title>
            <link>https://mangpumo.github.io/2022/10/21/XTUOJ-1405%E4%B8%96%E7%95%8C%E6%9D%AF/</link>
            <pubDate>Fri, 21 Oct 2022 11:20:56 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;world-cup&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#world-cup&#34;&gt;#&lt;/a&gt; World Cup&lt;/h1&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目描述&#34;&gt;#&lt;/a&gt; 题目描述&lt;/h2&gt;
&lt;p&gt;世界杯来了！！！自然，足球博彩也变得炙手可热。现在有 n 家博彩公司针对比赛的胜负平给出不同的赔率（比如，赔率为 1 赔 1.5，即如果下注 1 块钱，猜对了会获得 1.5 元，盈利 0.5 元），请问是否有一种策略可以保证一定赢钱？&lt;/p&gt;
&lt;h2 id=&#34;输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入&#34;&gt;#&lt;/a&gt; 输入&lt;/h2&gt;
&lt;p&gt;第一行是一个整数 T (1≤T≤1000)，表示样例的个数。 每个样例的第一行是一个整数 n (1≤n≤10)，表示博彩公司的数量。 以后的每行包括三个浮点数，w,d,l (1.0&amp;lt;w,d,l≤100.0)，分别表示比赛主队胜平负的赔率。&lt;/p&gt;
&lt;h2 id=&#34;输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出&#34;&gt;#&lt;/a&gt; 输出&lt;/h2&gt;
&lt;p&gt;每行输出一个样例的结果，如果存在必赢的策略，输出 &amp;quot;Yes&amp;quot;；否则输出 &amp;quot;No&amp;quot;。&lt;/p&gt;
&lt;h2 id=&#34;样例输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输入&#34;&gt;#&lt;/a&gt; 样例输入&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1.3 4.8 10.5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1.4 4.0 9.7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1.3 5.6 9.8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1.45 5.0 8.9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;样例输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输出&#34;&gt;#&lt;/a&gt; 样例输出&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;No&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Yes&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;
using namespace std;
int main()
&amp;#123;
	int T;
	double w,d,l;
	double x=0,y=0,z=0;
	
	scanf(&amp;quot;%d&amp;quot;,&amp;amp;T);
	while(T--)
	&amp;#123;
		int K;
		scanf(&amp;quot;%d&amp;quot;,&amp;amp;K);
		while(K--)
		&amp;#123;
			scanf(&amp;quot;%lf %lf %lf&amp;quot;,&amp;amp;w,&amp;amp;d,&amp;amp;l);
		    if(x&amp;lt;=w)
		    x = w;
		    if(y&amp;lt;=d)
		    y = d;
		    if(z&amp;lt;=l)
		    z = l;
		&amp;#125;
		x = 1/x;
		y = 1/y;
		z = 1/z;
		if(x+y+z&amp;lt;=1)
		    printf(&amp;quot;Yes\n&amp;quot;);
		else
		    printf(&amp;quot;No\n&amp;quot;);
		    x=0;
		    y=0;
		    z=0;
	&amp;#125;
&amp;#125;&lt;/code&gt;&lt;/pre&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/10/20/C%E8%AF%AD%E8%A8%80-string-h%E5%A4%B4%E6%96%87%E4%BB%B6%E5%87%BD%E6%95%B0/</guid>
            <title>C语言_string.h头文件函数</title>
            <link>https://mangpumo.github.io/2022/10/20/C%E8%AF%AD%E8%A8%80-string-h%E5%A4%B4%E6%96%87%E4%BB%B6%E5%87%BD%E6%95%B0/</link>
            <pubDate>Thu, 20 Oct 2022 19:17:35 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;stringh头文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#stringh头文件&#34;&gt;#&lt;/a&gt; string.h 头文件&lt;/h1&gt;
&lt;h2 id=&#34;strdup&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#strdup&#34;&gt;#&lt;/a&gt; strdup&lt;/h2&gt;
&lt;p&gt;函数原型:  char *strdup (const char *s)&lt;br&gt;
 函数功能：字符串拷贝，目的空间由该函数分配&lt;br&gt;
函数返回：指向拷贝后的字符串指针&lt;br&gt;
参数说明:  src - 待拷贝的源字符串&lt;br&gt;
所属文件:  &amp;lt;string.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;string.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char *dup_str, *string=&amp;quot;abcde&amp;quot;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  dup_str=strdup(string); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printf(&amp;quot;%s&amp;quot;, dup_str); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  free(dup_str); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;strcpy&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#strcpy&#34;&gt;#&lt;/a&gt; strcpy&lt;/h2&gt;
&lt;p&gt;函数原型:  char* strcpy (char* str1,char* str2);&lt;br&gt;
 函数功能：把 str2 指向的字符串拷贝到 str1 中去&lt;br&gt;
函数返回：返回 str1, 即指向 str1 的指针&lt;br&gt;
参数说明:&lt;br&gt;
 所属文件:  &amp;lt;string.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;string.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char string[10]; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char *str1=&amp;quot;abcdefghi&amp;quot;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  strcpy(string,str1); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printf(&amp;quot;the string is:%s\n&amp;quot;,string); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;strncpy&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#strncpy&#34;&gt;#&lt;/a&gt; strncpy&lt;/h2&gt;
&lt;p&gt;函数原型:  char *strncpy (char *dest, const char *src，intcount)&lt;br&gt;
 函数功能：将字符串 src 中的 count 个字符拷贝到字符串 dest 中去&lt;br&gt;
函数返回：指向 dest 的指针&lt;br&gt;
参数说明:  dest - 目的字符串，src - 源字符串，count - 拷贝的字符个数&lt;br&gt;
所属文件:  &amp;lt;string.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;string.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   char*src = &amp;quot;bbbbbbbbbbbbbbbbbbbb&amp;quot;;//20 &amp;#x27;b&amp;#x27;s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   char dest[50] =&amp;quot;aaaaaaaaaaaaaaaaaaaa&amp;quot;;//20 &amp;#x27;a&amp;#x27;s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   puts(dest);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   strncpy(dest, src, 10);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   puts(dest);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   return0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
&lt;strong&gt; 输出：&lt;/strong&gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/*******************************************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;aaaaaaaaaaaaaaaaaaaa&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bbbbbbbbbbaaaaaaaaaa&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*******************************************/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
&lt;strong&gt; 注意：&lt;/strong&gt;&lt;br&gt;
strncpy 只复制指定长度的字符，不会自动在末尾加 &#39;\0&#39;。若指定长度超过源字符串长度，不够的部分补‘\0’.&lt;/p&gt;
&lt;h2 id=&#34;stacat&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#stacat&#34;&gt;#&lt;/a&gt; stacat&lt;/h2&gt;
&lt;p&gt;函数原型:  char* strcat (char * str1,char * str2);&lt;br&gt;
 函数功能：把字符串 str2 接到 str1 后面，str1 最后的 &#39;\0&#39; 被取消&lt;br&gt;
函数返回:  str1&lt;br&gt;
 参数说明:&lt;br&gt;
 所属文件:  &amp;lt;string.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char buffer[80];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  strcpy(buffer,&amp;quot;Hello &amp;quot;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  strcat(buffer,&amp;quot;world&amp;quot;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printf(&amp;quot;%s\n&amp;quot;,buffer); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;strncat&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#strncat&#34;&gt;#&lt;/a&gt; strncat&lt;/h2&gt;
&lt;p&gt;函数原型:  char *strncat (char *dest, const char *src, size_t maxlen)&lt;br&gt;
 函数功能：将字符串 src 中前 maxlen 个字符连接到 dest 中&lt;br&gt;
函数返回:&lt;br&gt;
 参数说明:&lt;br&gt;
 所属文件:  &amp;lt;string.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;char buffer[80];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  strcpy(buffer,&amp;quot;Hello &amp;quot;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  strncat(buffer,&amp;quot;world&amp;quot;,8); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printf(&amp;quot;%s\n&amp;quot;,buffer); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  strncat(buffer,&amp;quot;*************&amp;quot;,4); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printf(&amp;quot;%s\n&amp;quot;,buffer); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
&lt;strong&gt; 注意:&lt;/strong&gt;&lt;br&gt;
 与 strncpy 不同的是，strncat 会自动在末尾加‘\0’，若指定长度超过源字符串长度，则只复制源字符串长度即停止.&lt;/p&gt;
&lt;h2 id=&#34;strcmp&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#strcmp&#34;&gt;#&lt;/a&gt; strcmp&lt;/h2&gt;
&lt;p&gt;函数原型:  int strcmp (char * str1,char * str2);&lt;br&gt;
 函数功能：比较两个字符串 str1,str2.&lt;br&gt;
 函数返回:  str1&amp;lt;str2, 返回负数；str1=str2, 返回 0; str1&amp;gt;str2, 返回正数.&lt;br&gt;
 参数说明:&lt;br&gt;
 所属文件:  &amp;lt;string.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;string.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char *buf1=&amp;quot;aaa&amp;quot;, *buf2=&amp;quot;bbb&amp;quot;,*buf3=&amp;quot;ccc&amp;quot;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  int ptr; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ptr=strcmp(buf2, buf1); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  if(ptr&amp;gt;0) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    printf(&amp;quot;buffer 2 is greater thanbuffer 1\n&amp;quot;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  else &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    printf(&amp;quot;buffer 2 is less thanbuffer 1\n&amp;quot;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ptr=strcmp(buf2, buf3); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  if(ptr&amp;gt;0) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    printf(&amp;quot;buffer 2 is greater thanbuffer 3\n&amp;quot;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  else &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    printf(&amp;quot;buffer 2 is less thanbuffer 3\n&amp;quot;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;strncmp&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#strncmp&#34;&gt;#&lt;/a&gt; strncmp&lt;/h2&gt;
&lt;p&gt;函数原型:  int strncmp (char *str1,char *str2,int count)&lt;br&gt;
 函数功能：对 str1 和 str2 中的前 count 个字符按字典顺序比较&lt;br&gt;
函数返回：小于 0：str1&amp;lt;str2，等于 0：str1=str2，大于 0：str1&amp;gt;str2&lt;br&gt;
 参数说明:  str1,str2 - 待比较的字符串，count - 比较的长度&lt;br&gt;
所属文件:  &amp;lt;string.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;string.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   char str1[] =&amp;quot;aabbc&amp;quot;;//&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   char str2[] = &amp;quot;abbcd&amp;quot;;//&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   //为使测试程序更简练，此处假定了strncmp只返回-1,0,1三个数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   char res_info[] = &amp;#123;&amp;#x27;&amp;lt;&amp;#x27;,&amp;#x27;=&amp;#x27;,&amp;#x27;&amp;gt;&amp;#x27;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   int res;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   //前1个字符比较&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   res = strncmp(str1, str2, 1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   printf(&amp;quot;1：str1%c str2\n&amp;quot;, res_info[res+1]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //前3个字符比较&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   res = strncmp(str1, str2, 3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   printf(&amp;quot;3：str1%c str2\n&amp;quot;, res_info[res+1]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
&lt;strong&gt; 输出:&lt;/strong&gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/****************************************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1：str1= str2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3：str1&amp;lt; str2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*****************************************/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;strpbrk&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#strpbrk&#34;&gt;#&lt;/a&gt; strpbrk&lt;/h2&gt;
&lt;p&gt;函数原型:  char *strpbrk (const char *s1, const char *s2)&lt;br&gt;
 函数功能：得到 s1 中第一个 “同时也出现在 s2 中” 字符的位置指针&lt;br&gt;
函数返回：位置指针&lt;br&gt;
参数说明:&lt;br&gt;
 所属文件:  &amp;lt;string.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;string.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   char *p=&amp;quot;Find all vowels&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   p=strpbrk(p+1,&amp;quot;aeiouAEIOU&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   while(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      printf(&amp;quot;%s\n&amp;quot;,p);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      p=strpbrk(p+1,&amp;quot;aeiouAEIOU&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
&lt;strong&gt; 输出：&lt;/strong&gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/**************************************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ind all vowels&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;all vowels&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;owels&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;els&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;**************************************/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;strcspn&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#strcspn&#34;&gt;#&lt;/a&gt; strcspn&lt;/h2&gt;
&lt;p&gt;函数原型:  int strcspn (const char *s1, const char *s2)&lt;br&gt;
 函数功能：统计 s1 中从头开始直到第一个 “来自 s2 中的字符” 出现的长度&lt;br&gt;
函数返回：长度&lt;br&gt;
参数说明:&lt;br&gt;
 所属文件:  &amp;lt;string.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; printf(&amp;quot;%d\n&amp;quot;,strcspn(&amp;quot;abcbcadef&amp;quot;,&amp;quot;cba&amp;quot;)); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; printf(&amp;quot;%d\n&amp;quot;,strcspn(&amp;quot;xxxbcadef&amp;quot;,&amp;quot;cba&amp;quot;)); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; printf(&amp;quot;%d\n&amp;quot;,strcspn(&amp;quot;123456789&amp;quot;,&amp;quot;cba&amp;quot;)); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
&lt;strong&gt; 输出：&lt;/strong&gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/************************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;************************/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;strspn&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#strspn&#34;&gt;#&lt;/a&gt; strspn&lt;/h2&gt;
&lt;p&gt;函数原型:  int strspn (const char *s1, const char *s2)&lt;br&gt;
 函数功能：统计 s1 中从头开始直到第一个 “不来自 s2 中的字符” 出现的长度&lt;br&gt;
函数返回：位置指针&lt;br&gt;
参数说明:&lt;br&gt;
 所属文件:  &amp;lt;string.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;string.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;alloc.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   printf(&amp;quot;%d\n&amp;quot;,strspn(&amp;quot;abcbcadef&amp;quot;,&amp;quot;cba&amp;quot;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   printf(&amp;quot;%d\n&amp;quot;,strspn(&amp;quot;xxxbcadef&amp;quot;,&amp;quot;cba&amp;quot;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   printf(&amp;quot;%d\n&amp;quot;,strspn(&amp;quot;123456789&amp;quot;,&amp;quot;cba&amp;quot;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
&lt;strong&gt; 输出：&lt;/strong&gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/************************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;************************/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;strchr&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#strchr&#34;&gt;#&lt;/a&gt; strchr&lt;/h2&gt;
&lt;p&gt;函数原型:  char* strchr (char* str,char ch);&lt;br&gt;
 函数功能：找出 str 指向的字符串中第一次出现字符 ch 的位置&lt;br&gt;
函数返回：返回指向该位置的指针，如找不到，则返回空指针&lt;br&gt;
参数说明:  str - 待搜索的字符串，ch - 查找的字符&lt;br&gt;
所属文件:  &amp;lt;string.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;string.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   char *str = &amp;quot;This is a string!&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   char ch;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   char *p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   while(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      printf(&amp;quot;Please input a char:&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ch = getchar();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      p = strchr(str, ch);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      if(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         printf(&amp;quot;%c is the %d character of\&amp;quot;%s\&amp;quot;\n&amp;quot;,ch, (int)(p-str+1),str);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         printf(&amp;quot;Not found!\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      printf(&amp;quot;Press ESC to quit!\n\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      if(27 == getch())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         break;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      fflush(stdin);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
&lt;strong&gt; 运行结果：&lt;/strong&gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/********************************************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Please input achar:i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;i is the 3character of &amp;quot;This is a string!&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Press ESC to quit!&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Please input achar:l&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Not found!&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Press ESC to quit!&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Please input achar:s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s is the 4character of &amp;quot;This is a string!&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Press ESC to quit!&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;**********************************************/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;strrchr&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#strrchr&#34;&gt;#&lt;/a&gt; strrchr&lt;/h2&gt;
&lt;p&gt;函数原型:  char *strrchr (const char *s, int c)&lt;br&gt;
 函数功能：得到字符串 s 中最后一个含有 c 字符的位置指针&lt;br&gt;
函数返回：位置指针&lt;br&gt;
参数说明:&lt;br&gt;
 所属文件:  &amp;lt;string.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;string.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  charstring[15]; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char*ptr,c=&amp;#x27;r&amp;#x27;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; strcpy(string,&amp;quot;This is a string&amp;quot;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ptr=strrchr(string,c); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  if (ptr) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   printf(&amp;quot;The character %c is at position:%d&amp;quot;,c,ptr-string); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  else &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   printf(&amp;quot;The character was not found&amp;quot;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;strstr&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#strstr&#34;&gt;#&lt;/a&gt; strstr&lt;/h2&gt;
&lt;p&gt;函数原型:  char* strstr (char* str1,char* str2);&lt;br&gt;
 函数功能：找出 str2 字符串在 str1 字符串中第一次出现的位置 (不包括 str2 的串结束符)&lt;br&gt;
 函数返回：返回该位置的指针，如找不到，返回空指针&lt;br&gt;
参数说明:&lt;br&gt;
 所属文件:  &amp;lt;string.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;string.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char*str1=&amp;quot;Open Watcom C/C++&amp;quot;,*str2=&amp;quot;Watcom&amp;quot;,*ptr; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ptr=strstr(str1,str2); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; printf(&amp;quot;The substring is:%s\n&amp;quot;,ptr); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
&lt;strong&gt; 输出：&lt;/strong&gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;The substringis:Watcom C/C++&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;strrev&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#strrev&#34;&gt;#&lt;/a&gt; strrev&lt;/h2&gt;
&lt;p&gt;函数原型:  char *strrev (char *s)&lt;br&gt;
 函数功能：将字符串中的所有字符颠倒次序排列&lt;br&gt;
函数返回：指向 s 的指针&lt;br&gt;
参数说明:&lt;br&gt;
 所属文件:  &amp;lt;string.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;string.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char forward[]=&amp;quot;string&amp;quot;; //原文中定义为char*是不对的，指向代码段的指针内容是不可变的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; printf(&amp;quot;Before strrev():%s&amp;quot;,forward); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; strrev(forward); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printf(&amp;quot;Afterstrrev(): %s&amp;quot;,forward); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
&lt;strong&gt; 输出：&lt;/strong&gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/************************************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Beforestrrev():string&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;After strrev():gnirts&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;************************************/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;strnset&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#strnset&#34;&gt;#&lt;/a&gt; strnset&lt;/h2&gt;
&lt;p&gt;函数原型:  char *strnset (char *s, int ch, size_t n)&lt;br&gt;
 函数功能：将字符串 s 中前 n 个字符设置为 ch 的值&lt;br&gt;
函数返回：指向 s 的指针&lt;br&gt;
参数说明:&lt;br&gt;
 所属文件:  &amp;lt;string.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;string.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   charstring[]=&amp;quot;aaaaaaaaaaaaaaaaaaaaaaa&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   char letter=&amp;#x27;x&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   printf(&amp;quot;string before strnset:%s\n&amp;quot;,string);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   strnset(string,letter,10);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   printf(&amp;quot;string after strnset:  %s\n&amp;quot;,string);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
&lt;strong&gt; 输出：&lt;/strong&gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/*************************************************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;string beforestrnset: aaaaaaaaaaaaaaaaaaaaaaa&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;string afterstrnset:  xxxxxxxxxxaaaaaaaaaaaaa&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*************************************************/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;strset&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#strset&#34;&gt;#&lt;/a&gt; strset&lt;/h2&gt;
&lt;p&gt;函数原型:  char *strset (char *s, int ch)&lt;br&gt;
 函数功能：将字符串 s 中所有字符设置为 ch 的值&lt;br&gt;
函数返回：指向 s 的指针&lt;br&gt;
参数说明:&lt;br&gt;
 所属文件:  &amp;lt;string.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;string.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  charstring[10]=&amp;quot;123456789&amp;quot;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  charsymbol=&amp;#x27;c&amp;#x27;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; printf(&amp;quot;Before strset(): %s&amp;quot;, string); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; strset(string, symbol); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; printf(&amp;quot;After strset(): %s&amp;quot;, string); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;strtok&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#strtok&#34;&gt;#&lt;/a&gt; strtok&lt;/h2&gt;
&lt;p&gt;函数原型:  char *strtok (char *s1, const char *s2)&lt;br&gt;
 函数功能：分解 s1 字符串为用特定分隔符分隔的多个字符串 (一般用于将英文句分解为单词)&lt;br&gt;
 函数返回：字符串 s1 中首次出现 s2 中的字符前的子字符串指针&lt;/p&gt;
&lt;p&gt;参数说明:  s2 一般设置为 s1 中的分隔字符&lt;br&gt;
&lt;strong&gt;规定进行子调用时（即分割 s1 的第二、三及后续子串）第一参数必须是 NULL&lt;/strong&gt;&lt;br&gt;
 在每一次匹配成功后，将 s1 中分割出的子串位置替换为 NULL (摘下链中第一个环)，因此 s1 被破坏了&lt;/p&gt;
&lt;p&gt;函数会记忆指针位置以供下一次调用&lt;br&gt;
所属文件:  &amp;lt;string.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;string.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char *p; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char*buffer; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char*delims=&amp;#123; &amp;quot; .,&amp;quot; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; buffer=strdup(&amp;quot;Find words, all of them.&amp;quot;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; printf(&amp;quot;%s\n&amp;quot;,buffer); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; p=strtok(buffer,delims); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; while(p!=NULL)&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   printf(&amp;quot;word: %s\n&amp;quot;,p); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   p=strtok(NULL,delims); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; printf(&amp;quot;%s\n&amp;quot;,buffer); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;//根据测试，可以随时给strtok的第一个参数输入一个新的字符串，开始新字符串的分隔&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
&lt;strong&gt;PS：根据测试，可以随时给 strtok 的第一个参数输入一个新的字符串，开始新字符串的分隔&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;strupr&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#strupr&#34;&gt;#&lt;/a&gt; strupr&lt;/h2&gt;
&lt;p&gt;函数原型:  char *strupr (char *s)&lt;br&gt;
 函数功能：将字符串 s 中的字符变为大写&lt;br&gt;
函数返回:&lt;br&gt;
 参数说明:&lt;br&gt;
 所属文件:  &amp;lt;string.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;string.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char string[]=&amp;quot;abcdefghijklmnopqrstuvwxyz&amp;quot;,*ptr; //会影响原字符串的内存，用char[]来声明&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ptr=strupr(string); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printf(&amp;quot;%s&amp;quot;,ptr); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;strlwr&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#strlwr&#34;&gt;#&lt;/a&gt; strlwr&lt;/h2&gt;
&lt;p&gt;函数原型:  char *strlwr (char *s)&lt;br&gt;
 函数功能：将字符串中的字符变为小写字符&lt;br&gt;
函数返回：指向 s 的指针&lt;br&gt;
参数说明:&lt;br&gt;
 所属文件:  &amp;lt;string.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;string.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char str[]=&amp;quot;HOW TO SAY?&amp;quot;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printf(&amp;quot;%s&amp;quot;,strlwr(str)); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;strerror&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#strerror&#34;&gt;#&lt;/a&gt; strerror&lt;/h2&gt;
&lt;p&gt;函数原型:  char *strerror (int errnum)&lt;br&gt;
 函数功能：得到错误信息的内容信息&lt;br&gt;
函数返回：错误提示信息字符串指针&lt;br&gt;
参数说明:  errnum - 错误编号&lt;br&gt;
所属文件:  &amp;lt;string.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;errno.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char *buffer; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  buffer=strerror(errno); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printf(&amp;quot;Error: %s&amp;quot;,buffer); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;memcpy&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#memcpy&#34;&gt;#&lt;/a&gt; memcpy&lt;/h2&gt;
&lt;p&gt;函数原型:  void *memcpy (void *dest, const void *src, size_t n)&lt;br&gt;
 函数功能：字符串拷贝&lt;br&gt;
函数返回：指向 dest 的指针&lt;br&gt;
参数说明:  src - 源字符串，n - 拷贝的最大长度&lt;br&gt;
所属文件:  &amp;lt;string.h&amp;gt;,&amp;lt;mem.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;string.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char src[]=&amp;quot;******************************&amp;quot;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char dest[]=&amp;quot;abcdefghijlkmnopqrstuvwxyz0123456709&amp;quot;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char *ptr; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printf(&amp;quot;destination before memcpy:%s\n&amp;quot;,dest); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ptr=memcpy(dest,src,strlen(src)); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  if (ptr) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    printf(&amp;quot;destination after memcpy:%s\n&amp;quot;,dest); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  else &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    printf(&amp;quot;memcpy failed&amp;quot;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
&lt;strong&gt; 输出：&lt;/strong&gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/*************************************************************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;destination before memcpy:abcdefghijlkmnopqrstuvwxyz0123456709&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;destination after memcpy:******************************456709&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;**************************************************************/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;memeccpy&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#memeccpy&#34;&gt;#&lt;/a&gt; memeccpy&lt;/h2&gt;
&lt;p&gt;函数原型:  void *memccpy (void *dest, const void *src, int c, size_t n)&lt;br&gt;
 函数功能：字符串拷贝，到指定长度或遇到指定字符时停止拷贝&lt;br&gt;
函数返回:&lt;br&gt;
 参数说明:  src - 源字符串指针，c - 中止拷贝检查字符，n - 长度，dest - 拷贝底目的字符串指针&lt;br&gt;
所属文件:  &amp;lt;string.h&amp;gt;,&amp;lt;mem.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;string.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char *src=&amp;quot;This is the source string&amp;quot;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char dest[50]; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char *ptr; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ptr=memccpy(dest,src,&amp;#x27;c&amp;#x27;,strlen(src)); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  if (ptr) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *ptr=&amp;#x27;\0&amp;#x27;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    printf(&amp;quot;The character wasfound:%s&amp;quot;,dest); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  else &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    printf(&amp;quot;The character wasn&amp;#x27;tfound&amp;quot;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
&lt;strong&gt; 输出：&lt;/strong&gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/*****************************************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;The character was found:This is the sourc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*****************************************/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;memchr&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#memchr&#34;&gt;#&lt;/a&gt; memchr&lt;/h2&gt;
&lt;p&gt;函数原型:  void *memchr (const void *s, int c, size_t n)&lt;br&gt;
 函数功能：在字符串中第开始 n 个字符中寻找某个字符 c 的位置&lt;br&gt;
函数返回：返回 c 的位置指针，返回 NULL 时表示未找到&lt;br&gt;
参数说明:  s - 要搜索的字符串，c - 要寻找的字符，n - 指定长度&lt;br&gt;
所属文件:  &amp;lt;string.h&amp;gt;,&amp;lt;mem.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;string.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char str[17]; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char *ptr; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  strcpy(str,&amp;quot;This is a string&amp;quot;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ptr=memchr(str,&amp;#x27;r&amp;#x27;,strlen(str)); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  if (ptr) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printf(&amp;quot;The character &amp;#x27;r&amp;#x27; is at position:%d&amp;quot;,ptr-str); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  else &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printf(&amp;quot;The character was not found&amp;quot;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;memecmp&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#memecmp&#34;&gt;#&lt;/a&gt; memecmp&lt;/h2&gt;
&lt;p&gt;函数原型:  int memcmp (const void *s1, const void *s2,size_t n)&lt;br&gt;
 函数功能：按字典顺序比较两个串 s1 和 s2 的前 n 个字节&lt;br&gt;
函数返回:  &amp;lt;0,=0,&amp;gt;0 分别表示 s1&amp;lt;,=,&amp;gt;s2&lt;br&gt;
 参数说明:  s1,s2 - 要比较的字符串，n - 比较的长度&lt;br&gt;
所属文件:  &amp;lt;string.h&amp;gt;,&amp;lt;mem.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;string.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char *buf1=&amp;quot;ABCDE123&amp;quot;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char *buf2=&amp;quot;abcde456&amp;quot;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  int stat;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  stat=memcmp(buf1,buf2,5);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printf(&amp;quot;The strings to position 5 are&amp;quot;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  if(stat) printf(&amp;quot;not &amp;quot;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printf(&amp;quot;the same\n&amp;quot;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 0;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;memicmp&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#memicmp&#34;&gt;#&lt;/a&gt; memicmp&lt;/h2&gt;
&lt;p&gt;函数原型:  int memicmp (const void *s1, const void *s2, size_t n)&lt;br&gt;
 函数功能：按字典顺序、不考虑字母大小写对字符串 s1,s2 前 n 个字符比较&lt;br&gt;
函数返回:  &amp;lt;0,=0,&amp;gt;0 分别表示 s1&amp;lt;,=,&amp;gt;s2&lt;br&gt;
 参数说明:  s1,s2 - 要比较的字符串，n - 比较的长度&lt;br&gt;
所属文件:  &amp;lt;string.h&amp;gt;,&amp;lt;mem.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;string.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char *buf1=&amp;quot;ABCDE123&amp;quot;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char *buf2=&amp;quot;abcde456&amp;quot;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  int stat; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  stat=memicmp(buf1,buf2,5); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printf(&amp;quot;The strings to position 5 are&amp;quot;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  if(stat) printf(&amp;quot;not&amp;quot;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printf(&amp;quot;the same&amp;quot;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
&lt;strong&gt; 输出：&lt;/strong&gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/**************************************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;The strings to position 5 are the same&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;***************************************/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;memmove&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#memmove&#34;&gt;#&lt;/a&gt; memmove&lt;/h2&gt;
&lt;p&gt;函数原型:  void *memmove (void *dest, const void *src, size_t n)&lt;br&gt;
 函数功能：字符串拷贝&lt;br&gt;
函数返回：指向 dest 的指针&lt;br&gt;
参数说明:  src - 源字符串，n - 拷贝的最大长度&lt;br&gt;
所属文件:  &amp;lt;string.h&amp;gt;,&amp;lt;mem.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;string.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  chardest[40]=&amp;quot;abcdefghijklmnopqrstuvwxyz0123456789&amp;quot;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printf(&amp;quot;destination prior tomemmove:%s\n&amp;quot;,dest); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  memmove(dest+1,dest,35); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printf(&amp;quot;destination aftermemmove:%s&amp;quot;,dest); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
&lt;strong&gt;PS：与 memcpy 不同的是，memmove 可以处理目的字符串与源字符串地址空间出现重叠的情况，可保证待复制的内容不被破坏。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;memset&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#memset&#34;&gt;#&lt;/a&gt; memset&lt;/h2&gt;
&lt;p&gt;函数原型:   void *memset (void *s, int c, size_t n)&lt;br&gt;
 函数功能：字符串中的 n 个字节内容设置为 c&lt;br&gt;
 函数返回:&lt;br&gt;
 参数说明:   s - 要设置的字符串，c - 设置的内容，n - 长度&lt;br&gt;
所属文件:   &amp;lt;string.h&amp;gt;,&amp;lt;mem.h&amp;gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;mem.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  charbuffer[]=&amp;quot;Hello world&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; printf(&amp;quot;Buffer before memset:%s/n&amp;quot;,buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; memset(buffer,&amp;#x27;*&amp;#x27;,strlen(buffer)-1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; printf(&amp;quot;Buffer after memset:%s&amp;quot;,buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/10/20/C%E8%AF%AD%E8%A8%80_%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E7%9A%84%E5%AE%9A%E4%B9%89%E3%80%81%E5%88%9D%E5%A7%8B%E5%8C%96%E5%92%8C%E8%BE%93%E5%87%BA/</guid>
            <title>C语言_二维数组的定义、初始化和输出</title>
            <link>https://mangpumo.github.io/2022/10/20/C%E8%AF%AD%E8%A8%80_%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E7%9A%84%E5%AE%9A%E4%B9%89%E3%80%81%E5%88%9D%E5%A7%8B%E5%8C%96%E5%92%8C%E8%BE%93%E5%87%BA/</link>
            <pubDate>Thu, 20 Oct 2022 14:38:38 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;二维数组的定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二维数组的定义&#34;&gt;#&lt;/a&gt; 二维数组的定义&lt;/h1&gt;
&lt;p&gt;二维数组定义的一般形式为：&lt;br&gt;
&lt;strong&gt;类型说明符 数组名 [常量表达式][ 常量表达式];&lt;/strong&gt;&lt;br&gt;
eg： int a[3][4]；&lt;/p&gt;
&lt;p&gt;表示定义了一个 3×4，即 3 行 4 列总共有 12 个元素的数组 a。这 12 个元素的名字依次是：a [0][0]、a [0][1]、a [0][2]、a [0][3]；a [1][0]、a [1][1]、a [1][2]、a [1][3]；a [2][0]、a [2][1]、a [2][2]、a [2][3]。&lt;/p&gt;
&lt;p&gt;与一维数组一样，行序号和列序号的下标都是从 0 开始的。元素 a [i][j] 表示第 i+1 行、第 j+1 列的元素。数组 int a [m][n] 最大范围处的元素是 a [m–1][n–1]。所以在引用数组元素时应该注意，下标值应在定义的数组大小的范围内。&lt;/p&gt;
&lt;p&gt;此外，与一维数组一样，定义数组时用到的 “数组名 [常量表达式][常量表达式]” 和引用数组元素时用到的 “数组名 [下标][下标]” 是有区别的。前者是定义一个数组，以及该数组的维数和各维的大小。而后者仅仅是元素的下标，像坐标一样，对应一个具体的元素。&lt;/p&gt;
&lt;p&gt;C 语言对二维数组采用这样的定义方式，使得二维数组可被看作一种特殊的一维数组，即它的元素为一维数组。比如 “int a [3][4]；” 可以看作有三个元素，每个元素都为一个长度为 4 的一维数组。而且 a [0]、a [2]、a [3] 分别是这三个一维数组的数组名。下面来验证一下看看是不是这么回事儿:&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main(void)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int a[3][4] = &amp;#123;&amp;#123;1, 2, 3, 4&amp;#125;, &amp;#123;5, 6, 7, 8&amp;#125;, &amp;#123;9, 10, 11, 12&amp;#125;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    printf(&amp;quot;%d\n&amp;quot;, sizeof(a[0]));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
 输出结果为：&lt;br&gt;
&lt;strong&gt;16&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可见 a [0] 确实是第一行一维数组的数组名，其他同理。&lt;/p&gt;
&lt;p&gt;在 C 语言中，二维数组中元素排列的顺序是按行存放的，即在内存中先顺序存放第一行的元素，再存放第二行的元素，这样依次存放。&lt;/p&gt;
&lt;h1 id=&#34;二维数组的初始化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二维数组的初始化&#34;&gt;#&lt;/a&gt; 二维数组的初始化&lt;/h1&gt;
&lt;p&gt;可以用下面的方法对二维数组进行初始化。&lt;/p&gt;
&lt;h2 id=&#34;1-分行给二维数组赋初值比如上面程序的赋值方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-分行给二维数组赋初值比如上面程序的赋值方法&#34;&gt;#&lt;/a&gt; 1) 分行给二维数组赋初值，比如上面程序的赋值方法：&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int a[3][4] = &amp;#123;&amp;#123;1, 2, 3, 4&amp;#125;, &amp;#123;5, 6, 7, 8&amp;#125;, &amp;#123;9, 10, 11, 12&amp;#125;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
 这种赋初值的方法比较直观，将第一个花括号内的数据赋给第一行的元素、第二个花括号内的数据赋给第二行的元素…… 即每行看作一个元素，按行赋初值。&lt;/p&gt;
&lt;h2 id=&#34;2-也可以将所有数据写在一个花括号内按数组排列的顺序对各元素赋初值&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-也可以将所有数据写在一个花括号内按数组排列的顺序对各元素赋初值&#34;&gt;#&lt;/a&gt; 2) 也可以将所有数据写在一个花括号内，按数组排列的顺序对各元素赋初值。&lt;/h2&gt;
&lt;p&gt;比如：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int a[3][4] = &amp;#123;1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
 效果与第 1 种是一样的。但第 1 种方法更好，一行对一行，界限清楚。第 2 种方法如果数据多，写成一大片，容易遗漏，也不易检查。&lt;/p&gt;
&lt;h2 id=&#34;3-也可以只对部分元素赋初值&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-也可以只对部分元素赋初值&#34;&gt;#&lt;/a&gt; 3) 也可以只对部分元素赋初值。&lt;/h2&gt;
&lt;p&gt;比如：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int a[3][4] = &amp;#123;&amp;#123;1, 2&amp;#125;, &amp;#123;5&amp;#125;, &amp;#123;9&amp;#125;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
 它的作用是对第一行的前两个元素赋值、第二行和第三行的第一个元素赋值。其余元素自动为 0。初始化后数组各元素为：&lt;br&gt;
1    2    0    0&lt;br&gt;
5    0    0    0&lt;br&gt;
9    0    0    0&lt;/p&gt;
&lt;h2 id=&#34;4-如果在定义数组时就对全部元素赋初值即完全初始化则第一维的长度可以不指定但第二维的长度不能省&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-如果在定义数组时就对全部元素赋初值即完全初始化则第一维的长度可以不指定但第二维的长度不能省&#34;&gt;#&lt;/a&gt; 4) 如果在定义数组时就对全部元素赋初值，即完全初始化，则第一维的长度可以不指定，但第二维的长度不能省。&lt;/h2&gt;
&lt;p&gt;比如：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int a[3][4] = &amp;#123;1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
 等价于：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int a[][4] = &amp;#123;1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
 系统会根据数据总数和第二维的长度算出第一维的长度。但这种省略的写法几乎不用，因为可读性差。&lt;/p&gt;
&lt;h2 id=&#34;5-int-a340&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-int-a340&#34;&gt;#&lt;/a&gt; 5) int a[3][4]={0}；&lt;/h2&gt;
&lt;p&gt;二维数组 “清零”，里面每一个元素都是零。&lt;/p&gt;
&lt;h1 id=&#34;二维数组如何输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二维数组如何输出&#34;&gt;#&lt;/a&gt; 二维数组如何输出&lt;/h1&gt;
&lt;p&gt;二维数组有行和列，那么如何输出里面的元素呢？在讲述一维数组的时候说过，“数组的元素只能一个一个输出”，二维数组也不例外。在一维数组中是用一个 for 循环进行输出，而二维数组元素的输出要使用两个 for 循环嵌套。&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main(void)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int a[3][4] = &amp;#123;&amp;#123;1, 2, 3, 4&amp;#125;, &amp;#123;5, 6, 7, 8&amp;#125;, &amp;#123;9, 10, 11, 12&amp;#125;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int i;  //行循环变量&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int j;  //列循环变量&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for (i=0; i&amp;lt;3; ++i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for (j=0; j&amp;lt;4; ++j)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            printf(&amp;quot;%-2d\x20&amp;quot;, a[i][j]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        printf(&amp;quot;\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
 输出结果是：&lt;br&gt;
1  2  3  4&lt;br&gt;
5  6  7  8&lt;br&gt;
9  10 11 12&lt;br&gt;
 提示：“printf（&amp;quot;%-2d\x20&amp;quot;，a [i][j]）；” 中的 “%-2d”，其中 “-” 表示左对齐，如果不写 “-” 则默认表示右对齐；“2” 表示这个元素输出时占两个空格的空间，所以连同后面的 \x20 则每个元素输出时都占三个空格的空间。&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
