<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title></title>
        <subtitle>翩若浮云着霓裳，落幕鬓边皆染霜</subtitle>
        <icon>https://mangpumo.github.io/images/favicon.ico</icon>
        <link>https://MangPumo.github.io</link>
        <author>
          <name>Mang Pumo</name>
        </author>
        <description>欢迎来到 Mang Pumo 的个人博客!</description>
        <language>zh-CN</language>
        <pubDate>Thu, 08 Dec 2022 23:32:43 +0800</pubDate>
        <lastBuildDate>Thu, 08 Dec 2022 23:32:43 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/12/08/%E5%93%88%E5%B8%8C%E8%A1%A8-%E6%9C%89%E6%95%88%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D/</guid>
            <title>哈希表_有效的字母异位</title>
            <link>https://mangpumo.github.io/2022/12/08/%E5%93%88%E5%B8%8C%E8%A1%A8-%E6%9C%89%E6%95%88%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D/</link>
            <pubDate>Thu, 08 Dec 2022 23:32:43 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;有效的字母异位&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#有效的字母异位&#34;&gt;#&lt;/a&gt; 有效的字母异位&lt;/h1&gt;
&lt;h2 id=&#34;例题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#例题&#34;&gt;#&lt;/a&gt; 例题&lt;/h2&gt;
&lt;p&gt;LEETCODE 242. 有效的字母异位&lt;/p&gt;
&lt;h2 id=&#34;通过的代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#通过的代码&#34;&gt;#&lt;/a&gt; 通过的代码&lt;/h2&gt;
&lt;p&gt;算法：哈希表&lt;br&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;bool isAnagram(char * s, char * t)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int i, x[26] = &amp;#123; 0 &amp;#125;, y[26] = &amp;#123; 0 &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	for (i = 0; s[i] != &amp;#x27;\0&amp;#x27;; i++)	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        x[s[i] - &amp;#x27;a&amp;#x27;]++;	//建立 s 的字符表 x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	for (i = 0; t[i] != &amp;#x27;\0&amp;#x27;; i++)	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        y[t[i] - &amp;#x27;a&amp;#x27;]++;	//建立 t 的字符表 y&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	for (i = 0; i &amp;lt; 26; i++)							//比较两字符表是否相同&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if (x[i] != y[i])	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return true;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;bool isAnagram(char * s, char * t)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int s1 = strlen(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int t1 = strlen(t);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int record[26] = &amp;#123;0&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(s1 != t1)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(int i=0; i&amp;lt;s1; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            record[s[i]-&amp;#x27;a&amp;#x27;]++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(int i=0; i&amp;lt;t1; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            record[t[i]-&amp;#x27;a&amp;#x27;]--;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(int i=0; i&amp;lt;26; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(record[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return true;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;未通过样例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#未通过样例&#34;&gt;#&lt;/a&gt; 未通过样例&lt;/h2&gt;
&lt;p&gt;希望大佬帮我 DEBUG 一下！！感谢&lt;br&gt;
联系方式：&lt;/p&gt;
&lt;p&gt;QQ 363790477&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;bool isAnagram(char * s, char * t)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int s1 = sizeof(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int t1 = sizeof(t);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int record[26] = &amp;#123;0&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(s1 != t1)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(int i=0; s[i] != &amp;#x27;\0&amp;#x27;; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        record[s[i]-&amp;#x27;a&amp;#x27;]++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        record[t[i]-&amp;#x27;a&amp;#x27;]--;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(int i=0; i&amp;lt;26; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(record[i] != 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return true;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84%E7%AE%97%E6%B3%95%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0ING%EF%BC%89/</guid>
            <title>数组算法（持续更新ING）</title>
            <link>https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84%E7%AE%97%E6%B3%95%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0ING%EF%BC%89/</link>
            <pubDate>Thu, 08 Dec 2022 21:49:19 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;数组算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数组算法&#34;&gt;#&lt;/a&gt; 数组算法&lt;/h1&gt;
&lt;h2 id=&#34;二分法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二分法&#34;&gt;#&lt;/a&gt; 二分法&lt;/h2&gt;
&lt;h2 id=&#34;双指针法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#双指针法&#34;&gt;#&lt;/a&gt; 双指针法&lt;/h2&gt;
&lt;h3 id=&#34;快慢指针法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#快慢指针法&#34;&gt;#&lt;/a&gt; 快慢指针法&lt;/h3&gt;
&lt;h2 id=&#34;滑动窗口&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#滑动窗口&#34;&gt;#&lt;/a&gt; 滑动窗口&lt;/h2&gt;
&lt;h2 id=&#34;模拟&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模拟&#34;&gt;#&lt;/a&gt; 模拟&lt;/h2&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5II/</guid>
            <title>数组_螺旋矩阵II</title>
            <link>https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5II/</link>
            <pubDate>Thu, 08 Dec 2022 21:42:37 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;螺旋矩阵ii&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#螺旋矩阵ii&#34;&gt;#&lt;/a&gt; 螺旋矩阵 II&lt;/h1&gt;
&lt;h2 id=&#34;例题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#例题&#34;&gt;#&lt;/a&gt; 例题&lt;/h2&gt;
&lt;p&gt;LEETCODE 59. 螺旋矩阵 II&lt;/p&gt;
&lt;h2 id=&#34;思路&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#思路&#34;&gt;#&lt;/a&gt; 思路&lt;/h2&gt;
&lt;p&gt;没有算法，模拟，看对代码和下标的掌握程度。&lt;/p&gt;
&lt;h2 id=&#34;leetcode-过体代码copy的还是看不懂他的数组返回方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#leetcode-过体代码copy的还是看不懂他的数组返回方式&#34;&gt;#&lt;/a&gt; LEETCODE 过体代码（COPY 的，还是看不懂他的数组返回方式）&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * Return an array of arrays of size *returnSize.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * The sizes of the arrays are returned as *returnColumnSizes array.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int** generateMatrix(int n, int* returnSize, int** returnColumnSizes)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //初始化返回的结果数组的大小&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *returnSize = n;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *returnColumnSizes = (int*)malloc(sizeof(int) * n);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //初始化返回结果数组ans&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int** ans = (int**)malloc(sizeof(int*) * n);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(i = 0; i &amp;lt; n; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ans[i] = (int*)malloc(sizeof(int) * n);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        (*returnColumnSizes)[i] = n;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //设置每次循环的起始位置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int startX = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int startY = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //设置二维数组的中间值，若n为奇数。需要最后在中间填入数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int mid = n / 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //循环圈数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int loop = n / 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //偏移数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int offset = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //当前要添加的元素&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int count = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(loop) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int i = startX;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int j = startY;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //模拟上侧从左到右&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(; j &amp;lt; startY + n - offset; j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            ans[startX][j] = count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //模拟右侧从上到下&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(; i &amp;lt; startX + n - offset; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            ans[i][j] = count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //模拟下侧从右到左&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(; j &amp;gt; startY; j--) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            ans[i][j] = count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //模拟左侧从下到上&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(; i &amp;gt; startX; i--) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            ans[i][j] = count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //偏移值每次加2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        offset+=2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //遍历起始位置每次+1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        startX++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        startY++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        loop--;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //若n为奇数需要单独给矩阵中间赋值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(n%2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ans[mid][mid] = count;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;gcc编译的代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gcc编译的代码&#34;&gt;#&lt;/a&gt; GCC 编译的代码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int n;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scanf(&amp;quot;%d&amp;quot;,&amp;amp;n);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int a[n][n];//数组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int startx = 0,starty = 0;//每一圈循环的开始位置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int offset = 1;//控制边界长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int mid = n/2;//确定数组中间值的位置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int loop = n/2;//确定循环次数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int count = 1;//每次需要填充的数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int i,j;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	while(loop--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		i = startx;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		j = starty;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//从上层从左到右&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for(j = starty; j &amp;lt; n+starty-offset; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			a[i][j] = count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//从右侧从上到下&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for(i = startx; i &amp;lt; n+startx-offset; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			a[i][j] = count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//从下层从右到左&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for(; j &amp;gt; starty; j--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			a[i][j] = count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//从左侧从下到上&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for(; i &amp;gt; startx; i--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			a[i][j] = count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//如果是奇数，需要把中间补上&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if(n%2 == 1)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			a[mid][mid] = count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		offset += 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		startx++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		starty++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//打印出来看一下&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	for(i=0; i&amp;lt;n; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for(j=0; j&amp;lt;n; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			printf(&amp;quot;%d &amp;quot;,a[i][j]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		printf(&amp;quot;\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE/</guid>
            <title>数组_搜索插入位置</title>
            <link>https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE/</link>
            <pubDate>Thu, 08 Dec 2022 11:10:32 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;搜索插入位置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#搜索插入位置&#34;&gt;#&lt;/a&gt; 搜索插入位置&lt;/h1&gt;
&lt;h2 id=&#34;例题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#例题&#34;&gt;#&lt;/a&gt; 例题&lt;/h2&gt;
&lt;p&gt;LEETCODE 35. 搜索插入位置&lt;/p&gt;
&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;不想多说，暴力不一定时间复杂度低，二分不一定更高效。&lt;/p&gt;
&lt;h2 id=&#34;暴力法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#暴力法&#34;&gt;#&lt;/a&gt; 暴力法&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int searchInsert(int* nums, int numsSize, int target)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(int i=0; i&amp;lt;numsSize; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//谁说暴力不好用的？&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(nums[i] &amp;gt;= target)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return numsSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;二分法闭区间&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二分法闭区间&#34;&gt;#&lt;/a&gt; 二分法（闭区间）&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int searchInsert(int* nums, int numsSize, int target)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int left = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int right = numsSize - 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int middle;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(left &amp;lt;= right)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        middle = left + (right-left)/2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//与之前一样的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(nums[middle] &amp;lt; target)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            left = middle + 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; else if (nums[middle] &amp;gt; target)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            right = middle - 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; else if (nums[middle] == target)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return middle;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return right+1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//如果没有就在查找区间末加上一个&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9/</guid>
            <title>数组_有序数组的平方</title>
            <link>https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9/</link>
            <pubDate>Thu, 08 Dec 2022 10:23:05 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;有序数组的平方&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#有序数组的平方&#34;&gt;#&lt;/a&gt; 有序数组的平方&lt;/h1&gt;
&lt;h2 id=&#34;例题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#例题&#34;&gt;#&lt;/a&gt; 例题&lt;/h2&gt;
&lt;p&gt;LEETCODE 977. 有序数组的平方&lt;/p&gt;
&lt;h2 id=&#34;双指针法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#双指针法&#34;&gt;#&lt;/a&gt; 双指针法&lt;/h2&gt;
&lt;p&gt;因为不太明白它是如何提交数组的，所以在这里 copy 了别人的代码，仅供参考。&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int* sortedSquares(int* nums, int numsSize, int* returnSize)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //返回的数组大小就是原数组大小&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *returnSize = numsSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //创建两个指针，right指向数组最后一位元素，left指向数组第一位元素&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int right = numsSize - 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int left = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //最后要返回的结果数组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int* ans = (int*)malloc(sizeof(int) * numsSize);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int index;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(index = numsSize - 1; index &amp;gt;= 0; index--) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //左指针指向元素的平方&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int lSquare = nums[left] * nums[left];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //右指针指向元素的平方&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int rSquare = nums[right] * nums[right];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //若左指针指向元素平方比右指针指向元素平方大，将左指针指向元素平方放入结果数组。左指针右移一位&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(lSquare &amp;gt; rSquare) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            ans[index] = lSquare;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            left++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //若右指针指向元素平方比左指针指向元素平方大，将右指针指向元素平方放入结果数组。右指针左移一位&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            ans[index] = rSquare;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            right--;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //返回结果数组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/</guid>
            <title>数组_长度最小的子数组</title>
            <link>https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/</link>
            <pubDate>Thu, 08 Dec 2022 09:34:12 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;长度最小的数组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#长度最小的数组&#34;&gt;#&lt;/a&gt; 长度最小的数组&lt;/h1&gt;
&lt;h2 id=&#34;例题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#例题&#34;&gt;#&lt;/a&gt; 例题&lt;/h2&gt;
&lt;p&gt;LEETCODE 209. 长度最小的数组&lt;/p&gt;
&lt;h2 id=&#34;暴力算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#暴力算法&#34;&gt;#&lt;/a&gt; 暴力算法&lt;/h2&gt;
&lt;p&gt;这道题目暴力解法当然是 两个 for 循环，然后不断的寻找符合条件的子序列.&lt;/p&gt;
&lt;p&gt;代码如下：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int minSubArrayLen(int target, int* nums, int numsSize)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int result = INT32_MAX;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int sum = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int len = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(int i=0; i&amp;lt;numsSize; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sum = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(int j=i; j&amp;lt;numsSize; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            sum += nums[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(sum &amp;gt;= target)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                len = j-i+1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                result = result &amp;lt; len ? result : len;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                break;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return result &amp;lt; INT32_MAX ? result : 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;滑动窗口&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#滑动窗口&#34;&gt;#&lt;/a&gt; 滑动窗口&lt;/h2&gt;
&lt;p&gt;接下来就开始介绍数组操作中另一个重要的方法：&lt;strong&gt;滑动窗口&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;所谓滑动窗口，就是&lt;strong&gt;不断的调节子序列的起始位置和终止位置&lt;/strong&gt;，从而得出我们要想的结果。&lt;/p&gt;
&lt;p&gt;在暴力解法中，是一个 for 循环滑动窗口的起始位置，一个 for 循环为滑动窗口的终止位置，用两个 for 循环 完成了一个不断搜索区间的过程。&lt;/p&gt;
&lt;p&gt;那么滑动窗口如何用一个 for 循环来完成这个操作呢。&lt;/p&gt;
&lt;p&gt;首先要思考 如果用一个 for 循环，那么应该表示 滑动窗口的起始位置，还是终止位置。&lt;/p&gt;
&lt;p&gt;如果只用一个 for 循环来表示 滑动窗口的起始位置，那么如何遍历剩下的终止位置？&lt;/p&gt;
&lt;p&gt;此时难免再次陷入 暴力解法的怪圈。&lt;/p&gt;
&lt;p&gt;所以 只用一个 for 循环，那么这个循环的索引，一定是表示 滑动窗口的终止位置。&lt;/p&gt;
&lt;p&gt;在本题中实现滑动窗口，主要确定如下三点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;窗口内是什么？&lt;/li&gt;
&lt;li&gt;如何移动窗口的起始位置？&lt;/li&gt;
&lt;li&gt;如何移动窗口的结束位置？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;窗口就是 满足其和 ≥ s 的长度最小的 连续 子数组。&lt;/p&gt;
&lt;p&gt;窗口的起始位置如何移动：如果当前窗口的值大于 s 了，窗口就要向前移动了（也就是该缩小了）。&lt;/p&gt;
&lt;p&gt;窗口的结束位置如何移动：窗口的结束位置就是遍历数组的指针，也就是 for 循环里的索引。&lt;/p&gt;
&lt;p&gt;解题的关键在于 窗口的起始位置如何移动。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;滑动窗口的精妙之处在于根据当前子序列和大小的情况，不断调节子序列的起始位置。从而将 O (n^2) 暴力解法降为 O (n)。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;代码如下：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int minSubArrayLen(int target, int* nums, int numsSize)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int result = INT32_MAX;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int i = 0;//滑动窗口起始位置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int sum = 0;//滑动窗口内元素总和&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int len = 0;//滑动窗口的长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(int j=0; j&amp;lt;numsSize; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sum += nums[j];//累加并与target比较&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        while(sum &amp;gt;= target)&amp;#123;//不能用IF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            len = j-i+1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            result = result &amp;lt; len ? result : len;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            sum -= nums[i++];//滑动窗口向后移动减去初始位置的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return result &amp;lt; INT32_MAX ? result : 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/</guid>
            <title>数组_移除元素</title>
            <link>https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/</link>
            <pubDate>Thu, 08 Dec 2022 09:31:54 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;移除元素&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#移除元素&#34;&gt;#&lt;/a&gt; 移除元素&lt;/h1&gt;
&lt;h2 id=&#34;例题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#例题&#34;&gt;#&lt;/a&gt; 例题&lt;/h2&gt;
&lt;p&gt;LEETCODE 27. 移除元素&lt;/p&gt;
&lt;h2 id=&#34;暴力算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#暴力算法&#34;&gt;#&lt;/a&gt; 暴力算法&lt;/h2&gt;
&lt;p&gt;这个题目暴力的解法就是两层 for 循环，一个 for 循环遍历数组元素 ，第二个 for 循环更新数组。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int removeElement(int* nums, int numsSize, int val)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int i,j;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int n = numsSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(i=0; i&amp;lt;numsSize; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(nums[i] == val)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            for(j=i+1; j&amp;lt;numsSize; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                nums[j-1] == nums[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        i--;//每次去除VAL后，数组下标都会前移&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        n--;//长度也在减小&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    printf(&amp;quot;%d&amp;quot;,n);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;双指针法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#双指针法&#34;&gt;#&lt;/a&gt; 双指针法&lt;/h2&gt;
&lt;p&gt;双指针法（快慢指针法）： &lt;strong&gt;通过一个快指针和慢指针在一个 for 循环下完成两个 for 循环的工作。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;定义快慢指针&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;快指针：寻找新数组的元素 ，新数组就是不含有目标元素的数组&lt;/li&gt;
&lt;li&gt;慢指针：指向更新 新数组下标的位置&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;优点：&lt;br&gt;
减少复杂度，优化代码。&lt;/p&gt;
&lt;p&gt;代码如下：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int removeElement(int* nums, int numsSize, int val)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int fast = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int slow = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(; fast&amp;lt;numsSize; fast++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(nums[fast] != val)&amp;#123;//如果元素不是VAL，下标为slow的元素等于快指针处的元素&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            nums[slow++] = nums[fast];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;//如果相等则跳过，此时slow未递增；快指针依旧在往前进&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return slow;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/12/07/%E6%95%B0%E7%BB%84-%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</guid>
            <title>数组_二分查找</title>
            <link>https://mangpumo.github.io/2022/12/07/%E6%95%B0%E7%BB%84-%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</link>
            <pubDate>Wed, 07 Dec 2022 23:37:29 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;二分查找&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二分查找&#34;&gt;#&lt;/a&gt; 二分查找&lt;/h1&gt;
&lt;h2 id=&#34;例题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#例题&#34;&gt;#&lt;/a&gt; 例题&lt;/h2&gt;
&lt;p&gt;LEETCODE 704. 二分查找&lt;/p&gt;
&lt;h2 id=&#34;二分第一种写法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二分第一种写法&#34;&gt;#&lt;/a&gt; 二分第一种写法&lt;/h2&gt;
&lt;p&gt;第一种写法，我们定义 target 是在一个在左闭右闭的区间里，&lt;strong&gt;也就是 [left, right]&lt;/strong&gt; （&lt;strong&gt;这个很重要非常重要&lt;/strong&gt;）。&lt;br&gt;
区间的定义这就决定了二分法的代码应该如何写，&lt;strong&gt;因为定义 * target&lt;/strong&gt; 在 **[left, right]&lt;strong&gt; 区间&lt;/strong&gt;，所以有如下两点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;while (left &amp;lt;= right) 要使用 &amp;lt;= ，因为 left == right 是有意义的，所以使用 &amp;lt;=&lt;/li&gt;
&lt;li&gt;if (nums [middle] &amp;gt; target) right 要赋值为 middle - 1，因为当前这个 nums [middle] 一定不是 target，那么接下来要查找的左区间结束下标位置就是 middle - 1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;代码如下：&lt;/strong&gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int search(int* nums, int numsSize, int target)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int left = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int right = numsSize-1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //当left==right，区间[left, right]依然有效，所以用 &amp;lt;=&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(left &amp;lt;= right)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	//防止两个int相加造成溢出，等同于相加除2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int middle = left+(right-left)/2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(nums[middle] &amp;gt; target)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            right = middle-1;//middle一定不是要找的数，所以找他前面一位&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;else if(nums[middle] &amp;lt; target)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            left = middle+1;//同上&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;else&amp;#123;//nums[middle] == target&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return middle;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;   //未找到下标，返回-1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return -1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;二分第二种写法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二分第二种写法&#34;&gt;#&lt;/a&gt; 二分第二种写法&lt;/h2&gt;
&lt;p&gt;如果说定义 target 是在一个在左闭右开的区间里，也就是 [left, right) ，那么二分法的边界处理方式则截然不同。&lt;/p&gt;
&lt;p&gt;有如下两点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;while (left &amp;lt; right)，这里使用 &amp;lt; , 因为 left == right 在区间 [left, right) 是没有意义的&lt;/li&gt;
&lt;li&gt;if (nums [middle] &amp;gt; target) right 更新为 middle，因为当前 nums [middle] 不等于 target，去左区间继续寻找，而寻找区间是左闭右开区间，所以 right 更新为 middle，即：下一个查询区间不会去比较 nums [middle]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在数组：1,2,3,4,7,9,10 中查找元素 2，如图所示：&lt;strong&gt;（注意和方法一的区别）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;代码如下：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int search(int* nums, int numsSize, int target)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int left = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int right = numsSize;//看不同&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(left &amp;lt; right)&amp;#123;//定义target在左闭右开的区间里，即：[left, right)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	//==时无意义，会越界&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int middle = left+(right-left)/2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(nums[middle] &amp;gt; target)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            right = middle;//开区间，不会取到middle&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;else if(nums[middle] &amp;lt; target)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            left = middle+1;//前闭，所以会取到middle+1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;else&amp;#123;// nums[middle] == target&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return middle;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;	//未找到下标，返回-1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return -1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/12/07/%E6%9D%82%E8%B0%88-%E7%A9%BA%E9%97%B4%E6%8D%A2%E6%97%B6%E9%97%B4/</guid>
            <title>杂谈_空间换时间</title>
            <link>https://mangpumo.github.io/2022/12/07/%E6%9D%82%E8%B0%88-%E7%A9%BA%E9%97%B4%E6%8D%A2%E6%97%B6%E9%97%B4/</link>
            <pubDate>Wed, 07 Dec 2022 22:23:08 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;空间换时间样例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#空间换时间样例&#34;&gt;#&lt;/a&gt; 空间换时间样例&lt;/h1&gt;
&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;比较懒，不想写太多，就整一个样例，统计字母串里出现次数最多的字母&lt;/p&gt;
&lt;h2 id=&#34;优化前&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#优化前&#34;&gt;#&lt;/a&gt; 优化前&lt;/h2&gt;
&lt;p&gt;两层循环遍历字母串数组，统计出现最多次数字母的次数；&lt;br&gt;
暴力算法就是两层循环枚举出现次数最多的字母；&lt;br&gt;
显然时间复杂度太高，运算时间过长非常容易超时；&lt;br&gt;
所以这里我们用空间换时间使用一个统计次数的数组，只需要遍历一次就可以了，时间复杂度只用 O (n)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;代码如下&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/**找一串字母出现次数最多的字母**/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int max=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	char ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int record[26] = &amp;#123;0&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	char arr[1000];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	gets(arr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int n = strlen(arr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	for(int i=0; i&amp;lt;n; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		record[arr[i]-&amp;#x27;a&amp;#x27;]++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	for(int i=0; i&amp;lt;26; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if(record[i] &amp;gt; max)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			max = record[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			ans = i+&amp;#x27;a&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	printf(&amp;quot;%c %d\n&amp;quot;,ans,max);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/12/06/XTUOJ-1114%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%86%E5%BA%8F/</guid>
            <title>XTUOJ_1114字符串逆序</title>
            <link>https://mangpumo.github.io/2022/12/06/XTUOJ-1114%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%86%E5%BA%8F/</link>
            <pubDate>Tue, 06 Dec 2022 23:28:04 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;字符串逆序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字符串逆序&#34;&gt;#&lt;/a&gt; 字符串逆序&lt;/h1&gt;
&lt;h2 id=&#34;description&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#description&#34;&gt;#&lt;/a&gt; Description&lt;/h2&gt;
&lt;p&gt;给你一个字符串，请将其第 K 个字符开始的长度为 L 的子串进行逆序。&lt;/p&gt;
&lt;h2 id=&#34;输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入&#34;&gt;#&lt;/a&gt; 输入&lt;/h2&gt;
&lt;p&gt;有多组样例，第一行是一个整数，表示有多少个样例。每个样例占两行，第一行是个字符串，字符串全部由英文小写字符组成，长度不超过 200。第二行是两个整数 K 和 L，K 从 1 开始计数，K+L-1 不会超过字符串长度。&lt;/p&gt;
&lt;h2 id=&#34;输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出&#34;&gt;#&lt;/a&gt; 输出&lt;/h2&gt;
&lt;p&gt;每行输出一个字符串逆序以后的字符串结果。&lt;/p&gt;
&lt;h2 id=&#34;sample-input&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sample-input&#34;&gt;#&lt;/a&gt; Sample Input&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;abcabc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;abcabc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2 5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;sample-output&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sample-output&#34;&gt;#&lt;/a&gt; Sample Output&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;bacabc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;acbacb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int n;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    char str[203];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    scanf(&amp;quot;%d&amp;quot;,&amp;amp;n);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(n--)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scanf(&amp;quot; %s&amp;quot;,&amp;amp;str);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int k,l;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scanf(&amp;quot;%d %d&amp;quot;,&amp;amp;k,&amp;amp;l);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int len = strlen(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(i=0;i&amp;lt;k-1;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            printf(&amp;quot;%c&amp;quot;,str[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(i=k+l-2;i&amp;gt;=k-1;i--)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            printf(&amp;quot;%c&amp;quot;,str[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(i=k+l-1;i&amp;lt;len;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            printf(&amp;quot;%c&amp;quot;,str[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        printf(&amp;quot;\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/12/06/XTUOJ-1109%E5%85%B1%E5%90%8C%E7%9A%84%E5%89%8D%E7%BC%80/</guid>
            <title>XTUOJ_1109共同的前缀</title>
            <link>https://mangpumo.github.io/2022/12/06/XTUOJ-1109%E5%85%B1%E5%90%8C%E7%9A%84%E5%89%8D%E7%BC%80/</link>
            <pubDate>Tue, 06 Dec 2022 23:20:26 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;共同的前缀&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#共同的前缀&#34;&gt;#&lt;/a&gt; 共同的前缀&lt;/h1&gt;
&lt;h2 id=&#34;description&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#description&#34;&gt;#&lt;/a&gt; Description&lt;/h2&gt;
&lt;p&gt;给你 K 个字符串，请求出它们的最长公共前缀。 输入 第一行是一个整数 N，表示测试样例的个数。 每个测试样例的第一行是一个整数 K（2 &amp;lt;= k &amp;lt;= 20），表示有多少个字符串；以后每行是一个字符串，每个字符串的长度不超过 200 个字符。 输出 每行输出一个样例的结果。先输出 “Case #:”，其中’#’为样例的序号（从 1 开始），冒号为英文冒号，后接一个空格；然后是对应样例的结果。如果没有公共前缀，则无需输出前缀，但 Case 信息仍需要输出。&lt;/p&gt;
&lt;h2 id=&#34;sample-input&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sample-input&#34;&gt;#&lt;/a&gt; Sample Input&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ACD&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ACDEF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ACDFE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ABC&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;BCD&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;sample-output&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sample-output&#34;&gt;#&lt;/a&gt; Sample Output&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Case 1: ACD&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Case 2: &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int top;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    scanf(&amp;quot;%d&amp;quot;, &amp;amp;top);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    char original[202] = &amp;#123; 0 &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    char alphabet[202] = &amp;#123; 0 &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    char same[202] = &amp;#123; 0 &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int cnt = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while (top--) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int length;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scanf(&amp;quot;%d&amp;quot;, &amp;amp;length);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scanf(&amp;quot;%s&amp;quot;, &amp;amp;original, 200);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        length -= 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int resemble = 200;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scanf(&amp;quot;%s&amp;quot;, &amp;amp;alphabet, 200);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for (int i = 0; i &amp;lt; 200; i++) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if (original[i] != alphabet[i]) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                resemble = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                break;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            else &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                same[i] = alphabet[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        memset(alphabet, 0, sizeof(char));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        while (length--) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            scanf(&amp;quot;%s&amp;quot;, &amp;amp;alphabet, 200);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            for (int i = 0; i &amp;lt;= resemble; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if (same[i] != alphabet[i]) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    resemble = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    break;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            memset(alphabet, 0, sizeof(char));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        printf(&amp;quot;Case %d: &amp;quot;, cnt++);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for (int i = 0; i &amp;lt; resemble; i++) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(same[i] != 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            printf(&amp;quot;%c&amp;quot;, same[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        printf(&amp;quot;\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/12/06/XTUOJ-1108A-B/</guid>
            <title>XTUOJ_1108A+B</title>
            <link>https://mangpumo.github.io/2022/12/06/XTUOJ-1108A-B/</link>
            <pubDate>Tue, 06 Dec 2022 23:16:18 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;ab&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ab&#34;&gt;#&lt;/a&gt; a+b&lt;/h1&gt;
&lt;h2 id=&#34;description&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#description&#34;&gt;#&lt;/a&gt; Description&lt;/h2&gt;
&lt;p&gt;请计算 a+b，但 a 和 b 是按不同的进制给出的。进制最小为 2 进制，最大为 62 进制，其中使用 A-Z 依次表示 10 到 35，a-z 表示 36-61。请写出 a+b 的结果，结果按十进制输出。 输入 第一行是一个整数 N，表示有多少个测试样例，以后每行是一个样例，每行是 4 个部分，分别为 a 的值，a 的进制，b 的值，b 的进制。其中值都是用一个字符串表示，进制都是一个整数。4 个部分之间用一个空格隔开，保证输入的合法，a、b 和 a+b 的值都在 - 2&lt;sup&gt;31 到 2&lt;/sup&gt;31-1 之间。 输出 每行输出一个样例的结果。&lt;/p&gt;
&lt;h2 id=&#34;sample-input&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sample-input&#34;&gt;#&lt;/a&gt; Sample Input&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1000 2 1F 16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-1 10 20 3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;sample-output&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sample-output&#34;&gt;#&lt;/a&gt; Sample Output&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int n,a,i,min = 201,j,temp,zdy = 1,num;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    char str[22][202];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    scanf(&amp;quot;%d&amp;quot;,&amp;amp;n);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(n--)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        min = 201;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scanf(&amp;quot;%d&amp;quot;,&amp;amp;a);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        num = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(i = 0;i &amp;lt; a;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            scanf(&amp;quot;%s&amp;quot;,str[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        printf(&amp;quot;Case %d: &amp;quot;,zdy);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        zdy++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(i=0;i&amp;lt;a;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               if(strlen(str[i])&amp;lt; min)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                min = strlen(str[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(j = 0;j &amp;lt; min;j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            for(i = 0;i &amp;lt; a-1;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if(str[i][j]==str[i+1][j])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    continue;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    num = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    break;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(num==0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   printf(&amp;quot;%c&amp;quot;,str[0][j]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        printf(&amp;quot;\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/12/02/XTUOJ-1105%E5%88%86%E6%95%B0%E5%8A%A0%E5%87%8F%E6%B3%95/</guid>
            <title>XTUOJ_1105分数加减法</title>
            <link>https://mangpumo.github.io/2022/12/02/XTUOJ-1105%E5%88%86%E6%95%B0%E5%8A%A0%E5%87%8F%E6%B3%95/</link>
            <pubDate>Fri, 02 Dec 2022 12:39:39 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;分数加减法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分数加减法&#34;&gt;#&lt;/a&gt; 分数加减法&lt;/h1&gt;
&lt;h2 id=&#34;description&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#description&#34;&gt;#&lt;/a&gt; Description&lt;/h2&gt;
&lt;p&gt;给你两个分数，请计算两者和及差。 输入 第一行是一个整数 K，表示样例的个数。以后每行一个样例，每行 4 个正整数，a、b、c、d，即计算分数 a/b 与 c/d 的和、差。4 个整数都不超过 10,000。 输出 每行输出一个样例的结果，先输出和，后输出差。如果结果的值为整数，那么只需要输出整数，如果结果的值为分数，需要输出 x/y 的形式，并保证 x,y 互质。&lt;/p&gt;
&lt;h2 id=&#34;sample-input&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sample-input&#34;&gt;#&lt;/a&gt; Sample Input&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 2 1 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2 3 1 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 8 5 8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;sample-output&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sample-output&#34;&gt;#&lt;/a&gt; Sample Output&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 1/3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3/4 -1/2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int gcd(int a,int b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(a%b == 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return gcd(b,a%b);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int K;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    scanf(&amp;quot;%d&amp;quot;,&amp;amp;K);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(K--)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int a1,a2,b1,b2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int fm=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int k=1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int gys=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int fzh=0,fzc=0,m,n;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scanf(&amp;quot;%d %d %d %d&amp;quot;,&amp;amp;a1,&amp;amp;a2,&amp;amp;b1,&amp;amp;b2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        fm = a2*b2;//通分&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        fzh = a1*b2+b1*a2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        fzc = a1*b2-b1*a2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(fzh%fm == 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;//整数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            printf(&amp;quot;%d &amp;quot;,fzh/fm);    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;//约分&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            n = fzh;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            m = fm;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            gys = gcd(n,m);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            fzh /= gys;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            fm /= gys;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            printf(&amp;quot;%d/%d &amp;quot;,fzh,fm);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(fzc &amp;lt; 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;//方便公约数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            k = -1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            fzc = -fzc;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        fm = a2*b2;//在上一步已经变化了，这里需要重新赋值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(fzc%fm == 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            fzc = k*fzc;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            printf(&amp;quot;%d\n&amp;quot;,fzc/fm);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            n = fzc;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            m = fm;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            gys = gcd(n,m);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            fzc = k*fzc;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            fzc /= gys;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            fm /= gys;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            printf(&amp;quot;%d/%d\n&amp;quot;,fzc,fm);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/11/26/XTUOJ-1331%E5%AF%86%E7%A0%81/</guid>
            <title>XTUOJ_1331密码</title>
            <link>https://mangpumo.github.io/2022/11/26/XTUOJ-1331%E5%AF%86%E7%A0%81/</link>
            <pubDate>Sat, 26 Nov 2022 09:49:49 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;password&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#password&#34;&gt;#&lt;/a&gt; Password&lt;/h1&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目描述&#34;&gt;#&lt;/a&gt; 题目描述&lt;/h2&gt;
&lt;p&gt;Eric 喜欢使用数字 1,2,3,4 作为密码，而且他有个怪癖，相邻数字不能相同，且相差不能超过 2。当然只用数字做密码，会比较弱，Eric 想知道当长度为 n 时，这样的密码有多少种？&lt;/p&gt;
&lt;h2 id=&#34;输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入&#34;&gt;#&lt;/a&gt; 输入&lt;/h2&gt;
&lt;p&gt;第一行是一个整数 T (1≤T≤45), 表示样例的个数。 每行一个样例，为整数 n (1≤T≤45)。&lt;/p&gt;
&lt;h2 id=&#34;输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出&#34;&gt;#&lt;/a&gt; 输出&lt;/h2&gt;
&lt;p&gt;每行输出一个样例的结果。&lt;/p&gt;
&lt;h2 id=&#34;样例输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输入&#34;&gt;#&lt;/a&gt; 样例输入&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;样例输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输出&#34;&gt;#&lt;/a&gt; 样例输出&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h.&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__int64 arr[46];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    arr[1] = 4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    arr[2] = 10;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __int64 a=2,b=3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(int i=3;i&amp;lt;=45;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;    //打表，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __int64 temp1,temp2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    temp1 = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    temp2 = b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    arr[i] = temp2*2*2+(temp1*2+temp2)*2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a = temp2*2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b = temp1*2+temp2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int K,m;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    scanf(&amp;quot;%d&amp;quot;,&amp;amp;K);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(K--)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scanf(&amp;quot;%d&amp;quot;,&amp;amp;m);//不要乱加空格&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        printf(&amp;quot;%I64d\n&amp;quot;,arr[m]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/11/26/XTUOJ-1194Recipient/</guid>
            <title>XTUOJ_1194Recipient</title>
            <link>https://mangpumo.github.io/2022/11/26/XTUOJ-1194Recipient/</link>
            <pubDate>Sat, 26 Nov 2022 09:43:11 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;recipient&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#recipient&#34;&gt;#&lt;/a&gt; Recipient&lt;/h1&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目描述&#34;&gt;#&lt;/a&gt; 题目描述&lt;/h2&gt;
&lt;p&gt;快递小哥每天都辛苦的送快递，今天他需要送 N 份快递给 N 个收件人，第 i 份快递需要送给第 i 个收件人。 请问其中发生恰好 K 个送错了的情况数是多少？&lt;/p&gt;
&lt;h2 id=&#34;输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入&#34;&gt;#&lt;/a&gt; 输入&lt;/h2&gt;
&lt;p&gt;存在多样例。 每行输入两个整数 N 和 K，1≤N≤1000,0≤K≤N。 如果两个都为 0，则表示输入结束，这个样例不需要处理。&lt;/p&gt;
&lt;h2 id=&#34;输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出&#34;&gt;#&lt;/a&gt; 输出&lt;/h2&gt;
&lt;p&gt;每行输出一个样例的结果，因为数值会比较大，所有结果需要对 10^9+7 取模。&lt;/p&gt;
&lt;h2 id=&#34;样例输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输入&#34;&gt;#&lt;/a&gt; 样例输入&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1000 1000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;样例输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输出&#34;&gt;#&lt;/a&gt; 样例输出&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37043040&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const int mo = 1000000007;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//#define ll __int64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__int64 d[1001];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__int64 c[1001][1001];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//务必注意数据类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //求错排&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d[2] = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int i,j;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(i=3; i&amp;lt;1001; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;//芝士一个公式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        d[i] = (i-1)*(d[i-1]+d[i-2])%mo;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //求组合数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(i=1; i&amp;lt;1001; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        c[i][0] = c[i][i] = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(i=2; i&amp;lt;1001;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(j=1; j&amp;lt;i; j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            c[i][j] = (c[i-1][j-1]+c[i-1][j])%mo;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            //芝士公式，杨辉三角&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int N,K;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __int64 ans;//注意数据类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(scanf(&amp;quot;%d %d&amp;quot;,&amp;amp;N,&amp;amp;K) != EOF&amp;amp;&amp;amp;N+K != 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;//N和K都为0退出&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(K == 0)//if(!K)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            printf(&amp;quot;1\n&amp;quot;);//特殊情况特殊考虑&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            ans = (d[K]*c[N][K])%mo;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            printf(&amp;quot;%I64d\n&amp;quot;,ans);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/11/26/XTUOJ-1238BinaryString/</guid>
            <title>XTUOJ_1238BinaryString</title>
            <link>https://mangpumo.github.io/2022/11/26/XTUOJ-1238BinaryString/</link>
            <pubDate>Sat, 26 Nov 2022 09:34:54 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;binary-string&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#binary-string&#34;&gt;#&lt;/a&gt; Binary String&lt;/h1&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目描述&#34;&gt;#&lt;/a&gt; 题目描述&lt;/h2&gt;
&lt;p&gt;求 n 位 01 串含连续至少 2 个 1 的串的个数。&lt;/p&gt;
&lt;h2 id=&#34;输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入&#34;&gt;#&lt;/a&gt; 输入&lt;/h2&gt;
&lt;p&gt;第一行是一个整数 K（K≤10000），表示样例的个数。 每行样例是一个整数 n (1≤1000000)。&lt;/p&gt;
&lt;h2 id=&#34;输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出&#34;&gt;#&lt;/a&gt; 输出&lt;/h2&gt;
&lt;p&gt;每行输出一个样例的结果，因为数目可能很大，请对 10^9+7 取模。&lt;/p&gt;
&lt;h2 id=&#34;样例输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输入&#34;&gt;#&lt;/a&gt; 样例输入&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1000000&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;样例输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输出&#34;&gt;#&lt;/a&gt; 样例输出&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;782550144&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const int mo = 1000000007;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int a[1000001];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int K;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    scanf(&amp;quot;%d&amp;quot;,&amp;amp;K);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a[1] = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a[2] = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int i,k=1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(i=3; i&amp;lt;=1000000; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        k *= 2;//规律&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(k&amp;gt;mo)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            k %= mo;//数据可能很大，注意取模&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        a[i] = ((a[i-1]+a[i-2])%mo+k)%mo;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;    //随时注意取模&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(K--)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int n;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scanf(&amp;quot;%d&amp;quot;,&amp;amp;n);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        printf(&amp;quot;%d\n&amp;quot;,a[n]);//下标对应的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/11/26/XTUOJ-1270%E6%95%B0%E4%BD%8D%E4%B8%8D%E5%90%8C%E7%9A%84%E6%95%B0/</guid>
            <title>XTUOJ_1270数位不同的数</title>
            <link>https://mangpumo.github.io/2022/11/26/XTUOJ-1270%E6%95%B0%E4%BD%8D%E4%B8%8D%E5%90%8C%E7%9A%84%E6%95%B0/</link>
            <pubDate>Sat, 26 Nov 2022 09:27:55 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;数位不同的数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数位不同的数&#34;&gt;#&lt;/a&gt; 数位不同的数&lt;/h1&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目描述&#34;&gt;#&lt;/a&gt; 题目描述&lt;/h2&gt;
&lt;p&gt;数位不同的数是指所有数位上的数码都不一样的数，比如 “123” 三个数码 1,2,3，都不一样，所以是数位不同的数；但是 “1232” 中有两个相同的数码 2，所以不是。请写一个程序，计算第几个符合条件的数是什么？&lt;/p&gt;
&lt;h2 id=&#34;输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入&#34;&gt;#&lt;/a&gt; 输入&lt;/h2&gt;
&lt;p&gt;每行输入一个整数 n (1≤n≤8877691)。&lt;/p&gt;
&lt;h2 id=&#34;输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出&#34;&gt;#&lt;/a&gt; 输出&lt;/h2&gt;
&lt;p&gt;每行输出一个整数，为对应样例的结果。&lt;/p&gt;
&lt;h2 id=&#34;样例输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输入&#34;&gt;#&lt;/a&gt; 样例输入&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8877691&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;样例输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输出&#34;&gt;#&lt;/a&gt; 样例输出&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9876543210&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h.&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;typedef __int64 ll;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ll sq[8877700];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int mark[10];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int temp[32];//答案暂存器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int count=2;//表[1]为0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//dfs首位为0会直接跳过，但是01存在。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void dfs(int deep,int maxdeep)//深度优先搜索&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;//经常用于搜索可行解&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(deep == maxdeep)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;//当深度到最深时存储答案并跳出&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ll output = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(int i=0; i&amp;lt;deep; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;//temp存放每一位数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            output *= 10;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            output += temp[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sq[count] = output;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return;//返回函数调用处&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(int i=0; i&amp;lt;=9; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;//判断数字是否被用过&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(mark[i] != 1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;//不等于1，说明没被用过&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(deep == 0&amp;amp;&amp;amp;i ==0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;//首位为0直接跳过&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                continue;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            mark[i] = 1;//标记该数字已经被用过&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            temp[deep] = i;//存储目标数字的这一位&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            dfs(deep+1,maxdeep);//继续深度搜索&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            mark[i] = 0;//用过后擦除，使判断继续&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/11/26/XTUOJ-12570%E5%92%8C1/</guid>
            <title>XTUOJ_12570和1</title>
            <link>https://mangpumo.github.io/2022/11/26/XTUOJ-12570%E5%92%8C1/</link>
            <pubDate>Sat, 26 Nov 2022 09:23:45 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;0和1&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#0和1&#34;&gt;#&lt;/a&gt; 0 和 1&lt;/h1&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目描述&#34;&gt;#&lt;/a&gt; 题目描述&lt;/h2&gt;
&lt;p&gt;一个 01 字符串，长度是 n，其中 1 比 0 多 m 个，请问不同的排列方案数有多少个？&lt;/p&gt;
&lt;h2 id=&#34;输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入&#34;&gt;#&lt;/a&gt; 输入&lt;/h2&gt;
&lt;p&gt;第一行是一个整数 K，表示样例的个数。 以后每行两个整数 n 和 m，1≤n≤33,0≤m≤n。&lt;/p&gt;
&lt;h2 id=&#34;输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出&#34;&gt;#&lt;/a&gt; 输出&lt;/h2&gt;
&lt;p&gt;每行输出一个样例的结果。&lt;/p&gt;
&lt;h2 id=&#34;样例输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输入&#34;&gt;#&lt;/a&gt; 样例输入&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;样例输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输出&#34;&gt;#&lt;/a&gt; 样例输出&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;线索&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#线索&#34;&gt;#&lt;/a&gt; 线索&lt;/h2&gt;
&lt;p&gt;第一个样例为 &amp;quot;01&amp;quot; 和 &amp;quot;10&amp;quot;；第二、三个样例不存在这样的串；第四个样例为 &amp;quot;011&amp;quot;,&amp;quot;101&amp;quot;,&amp;quot;110&amp;quot;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//组合数公式：C(n,m) = C(n-1,m-1)+C(n,m-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//C(0,i)=C(i,i)=0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//阶乘：C(n,m) = m!/(n!*(m-n)!)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;double fact(int a)//求阶乘函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(a == 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return a*fact(a-1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int K;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    scanf(&amp;quot;%d&amp;quot;,&amp;amp;K);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(K--)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int n,m,n1,m1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        double ans = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scanf(&amp;quot;%d %d&amp;quot;,&amp;amp;n,&amp;amp;m);//1比0多m个，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //0有(m+n)/2个，1有(n-m)/2个；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        n1 = (m+n)/2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        m1 = (n-m)/2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if((n1+m1) == n)//判断存不存在这样的串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;//阶乘公式：C(n,m) = m!/(n!*(m-n)!)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            ans = fact(n)/(fact(n1)*fact(m1));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        printf(&amp;quot;%.0lf\n&amp;quot;,ans);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/11/26/XTUOJ-1090%E7%BB%84%E5%90%88%E6%95%B0/</guid>
            <title>XTUOJ_1090组合数</title>
            <link>https://mangpumo.github.io/2022/11/26/XTUOJ-1090%E7%BB%84%E5%90%88%E6%95%B0/</link>
            <pubDate>Sat, 26 Nov 2022 09:17:55 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;组合数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#组合数&#34;&gt;#&lt;/a&gt; 组合数&lt;/h1&gt;
&lt;h2 id=&#34;description&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#description&#34;&gt;#&lt;/a&gt; Description&lt;/h2&gt;
&lt;p&gt;2&lt;sup&gt;n=C (n,0)+C (n,1)+…+C (n,n)。其中&lt;/sup&gt;表示幂，C (n,x) 表示组合数，即 C (n,x)=n!/（(n-x)!x!）。现在给你 n（0&amp;lt;=n&amp;lt;=33），要你输出 2^n 的组合数之和的表达式&lt;/p&gt;
&lt;h2 id=&#34;输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入&#34;&gt;#&lt;/a&gt; 输入&lt;/h2&gt;
&lt;p&gt;每行一个整数 n，如果 n 为负数则输入结束。&lt;/p&gt;
&lt;h2 id=&#34;输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出&#34;&gt;#&lt;/a&gt; 输出&lt;/h2&gt;
&lt;p&gt;每行输出一个表达式，表达式格式形似为 2^n=C (n,0)+C (n,1)+…+C (n,n)。&lt;/p&gt;
&lt;h2 id=&#34;sample-input&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sample-input&#34;&gt;#&lt;/a&gt; Sample Input&lt;/h2&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;-1&lt;/p&gt;
&lt;h2 id=&#34;sample-output&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sample-output&#34;&gt;#&lt;/a&gt; Sample Output&lt;/h2&gt;
&lt;p&gt;2^2=1+2+1&lt;/p&gt;
&lt;p&gt;2^3=1+3+3+1&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int n;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int i,j;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int tri[40][40];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    memset(tri,0,sizeof(tri));//务必初始化，否则结果乱码。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tri[0][0] = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(i=1;i&amp;lt;=33;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;//杨辉三角打表算组合数。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tri[i][0] = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tri[i][i] = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(j=1;j&amp;lt;=i;j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            tri[i][j] = tri[i-1][j]+tri[i-1][j-1]; //杨辉三角规律&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(scanf(&amp;quot;%d&amp;quot;,&amp;amp;n) != EOF &amp;amp;&amp;amp; n&amp;gt;=0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        printf(&amp;quot;2^%d=1&amp;quot;,n);//为了输出+1，提前输出一个1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(j=1;j&amp;lt;=n;j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            printf(&amp;quot;+%d&amp;quot;,tri[n][j]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        printf(&amp;quot;\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2022/11/26/XTUOJ-1297Homework/</guid>
            <title>XTUOJ_1297Homework</title>
            <link>https://mangpumo.github.io/2022/11/26/XTUOJ-1297Homework/</link>
            <pubDate>Sat, 26 Nov 2022 09:10:28 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;homework&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#homework&#34;&gt;#&lt;/a&gt; Homework&lt;/h1&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目描述&#34;&gt;#&lt;/a&gt; 题目描述&lt;/h2&gt;
&lt;p&gt;鉴于很多同学 Ctrl+A,Ctrl+C,Ctrl+V 的问题，Eric 想重新计算一下作业成绩，成绩计算的规则如下：&lt;/p&gt;
&lt;p&gt;1. 每道题按正确提交的先后顺序给分，第 1-12 名 32，13-24 名 16 分，25-48 名 8 分，49-96 名 4 分，97-192 名 2 分，其余 1 分。&lt;br&gt;
2. 学生所有题目的分数累加和为其积分。&lt;br&gt;
3. 作业成绩 = round (100+log (1+(本人积分−最高积分)/ 最高积分)×10)，其中 round 为四舍五入取整，log 以自然对数为底。&lt;br&gt;
Eric 已经通过查询数据库得到每个人每道题的排名情况，请写一个程序帮 Eric 算一下所有人的作业成绩。&lt;/p&gt;
&lt;h2 id=&#34;输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入&#34;&gt;#&lt;/a&gt; 输入&lt;/h2&gt;
&lt;p&gt;输入包含若干行，每行是三个部分，题目号，学号，排名。&lt;br&gt;
学生人数不超过 500，题目数量不超过 200。&lt;/p&gt;
&lt;h2 id=&#34;输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出&#34;&gt;#&lt;/a&gt; 输出&lt;/h2&gt;
&lt;p&gt;输出学号和成绩，按成绩逆序，学号，并按作业成绩逆序，学号正序排列显示。&lt;/p&gt;
&lt;h2 id=&#34;样例输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输入&#34;&gt;#&lt;/a&gt; 样例输入&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551111 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551101 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551119 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551115 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551110 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551114 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551128 7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551118 8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551102 9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551130 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551139 11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551135 12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551120 13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551129 14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551104 15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551112 16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551116 17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551138 18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551103 19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551131 20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551132 21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551106 22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551136 23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551124 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551126 25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551113 26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551109 27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551117 28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551125 29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551127 30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551123 31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551133 32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551134 33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551121 34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551122 35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1054 2015551137 36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;样例输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例输出&#34;&gt;#&lt;/a&gt; 样例输出&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;2015551101 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551102 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551110 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551111 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551114 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551115 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551118 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551119 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551128 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551130 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551135 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551139 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551103 93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551104 93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551106 93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551112 93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551116 93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551120 93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551124 93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551129 93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551131 93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551132 93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551136 93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551138 93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551109 86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551113 86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551117 86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551121 86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551122 86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551123 86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551125 86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551126 86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551127 86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551133 86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551134 86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2015551137 86&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考源码&#34;&gt;#&lt;/a&gt; 参考源码&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__int64 a[501];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int b[501];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//数组a存学号，数组b存排名，通过下标联系&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int trans(int x)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;//积分转换函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(x&amp;gt;=1&amp;amp;&amp;amp;x&amp;lt;=12)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        x = 32;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else if(x&amp;gt;=13&amp;amp;&amp;amp;x&amp;lt;=24)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        x = 16;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else if(x&amp;gt;=25&amp;amp;&amp;amp;x&amp;lt;=48)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        x = 8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else if(x&amp;gt;=49&amp;amp;&amp;amp;x&amp;lt;=96)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        x = 4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else if(x&amp;gt;=97&amp;amp;&amp;amp;x&amp;lt;=192)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        x = 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else if(x&amp;gt;=193)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        x = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int swap(int x,int y)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;//交换位置函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    temp = a[x];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a[x] = a[y];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a[y] = temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    temp = b[x];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b[x] = b[y];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b[y] = temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    memset(a,0,sizeof(a));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    memset(b,0,sizeof(b));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int n;//题号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int rank;//排名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int flag = 1;//学号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int i,j,k;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(scanf(&amp;quot;%d %I64d %d&amp;quot;,&amp;amp;n,&amp;amp;a[flag],&amp;amp;rank) != EOF)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(i=0; i&amp;lt;flag; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(a[i] == a[flag])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                break;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //排名转换为积分&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        b[i] += trans(rank);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(i == flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            flag++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int num,judge=1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    num = flag-1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(judge)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;//冒泡将积分排序&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        judge = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(i=1;i&amp;lt;num;i++)//注意i的初始值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(b[i]&amp;lt;b[i+1])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                swap(i,i+1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                judge = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    double q,w;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    q = b[1];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(i=1; i&amp;lt;=num; i++)//没有=会变得不幸，（最后一位会只有积分值）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        w = log(b[i]/q)*10+100.5;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        b[i] = w;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(i = 1; i&amp;lt;num; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        k = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        while(b[i] == b[i+1])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        judge = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        while(judge)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            judge = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            for(j=k;j&amp;lt;i;j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if(a[j]&amp;gt;a[j+1])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    swap(j,j+1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    judge = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(i=1;i&amp;lt;=num;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        printf(&amp;quot;%I64d %d\n&amp;quot;,a[i],b[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
