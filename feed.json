{
    "version": "https://jsonfeed.org/version/1",
    "title": null,
    "subtitle": "祝眉目舒展，顺问冬安",
    "icon": "https://mangpumo.github.io/images/favicon.ico",
    "description": "欢迎来到 Mang Pumo 的个人博客!",
    "home_page_url": "https://MangPumo.github.io",
    "items": [
        {
            "id": "https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9/",
            "url": "https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9/",
            "title": "数组_有序数组的平方",
            "date_published": "2022-12-08T02:23:05.000Z",
            "content_html": "<h1 id=\"有序数组的平方\"><a href=\"#有序数组的平方\" class=\"headerlink\" title=\"有序数组的平方\"></a>有序数组的平方</h1><h2 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h2><p>LEETCODE 977.有序数组的平方</p>\n<h2 id=\"双指针法\"><a href=\"#双指针法\" class=\"headerlink\" title=\"双指针法\"></a>双指针法</h2><p>因为不太明白它是如何提交数组的，所以在这里copy了别人的代码，仅供参考。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int* sortedSquares(int* nums, int numsSize, int* returnSize)&#123;</span><br><span class=\"line\">    //返回的数组大小就是原数组大小</span><br><span class=\"line\">    *returnSize = numsSize;</span><br><span class=\"line\">    //创建两个指针，right指向数组最后一位元素，left指向数组第一位元素</span><br><span class=\"line\">    int right = numsSize - 1;</span><br><span class=\"line\">    int left = 0;</span><br><span class=\"line\"></span><br><span class=\"line\">    //最后要返回的结果数组</span><br><span class=\"line\">    int* ans = (int*)malloc(sizeof(int) * numsSize);</span><br><span class=\"line\">    int index;</span><br><span class=\"line\">    for(index = numsSize - 1; index &gt;= 0; index--) &#123;</span><br><span class=\"line\">        //左指针指向元素的平方</span><br><span class=\"line\">        int lSquare = nums[left] * nums[left];</span><br><span class=\"line\">        //右指针指向元素的平方</span><br><span class=\"line\">        int rSquare = nums[right] * nums[right];</span><br><span class=\"line\">        //若左指针指向元素平方比右指针指向元素平方大，将左指针指向元素平方放入结果数组。左指针右移一位</span><br><span class=\"line\">        if(lSquare &gt; rSquare) &#123;</span><br><span class=\"line\">            ans[index] = lSquare;</span><br><span class=\"line\">            left++;</span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">        //若右指针指向元素平方比左指针指向元素平方大，将右指针指向元素平方放入结果数组。右指针左移一位</span><br><span class=\"line\">        else &#123;</span><br><span class=\"line\">            ans[index] = rSquare;</span><br><span class=\"line\">            right--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //返回结果数组</span><br><span class=\"line\">    return ans;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/",
            "url": "https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/",
            "title": "数组_长度最小的子数组",
            "date_published": "2022-12-08T01:34:12.000Z",
            "content_html": "<h1 id=\"长度最小的数组\"><a href=\"#长度最小的数组\" class=\"headerlink\" title=\"长度最小的数组\"></a>长度最小的数组</h1><h2 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h2><p>LEETCODE 209.长度最小的数组</p>\n<h2 id=\"暴力算法\"><a href=\"#暴力算法\" class=\"headerlink\" title=\"暴力算法\"></a>暴力算法</h2><p>这道题目暴力解法当然是 两个for循环，然后不断的寻找符合条件的子序列.</p>\n<p>代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int minSubArrayLen(int target, int* nums, int numsSize)&#123;</span><br><span class=\"line\">    int result = INT32_MAX;</span><br><span class=\"line\">    int sum = 0;</span><br><span class=\"line\">    int len = 0;</span><br><span class=\"line\">    for(int i=0; i&lt;numsSize; i++)&#123;</span><br><span class=\"line\">        sum = 0;</span><br><span class=\"line\">        for(int j=i; j&lt;numsSize; j++)&#123;</span><br><span class=\"line\">            sum += nums[j];</span><br><span class=\"line\">            if(sum &gt;= target)&#123;</span><br><span class=\"line\">                len = j-i+1;</span><br><span class=\"line\">                result = result &lt; len ? result : len;</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return result &lt; INT32_MAX ? result : 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"滑动窗口\"><a href=\"#滑动窗口\" class=\"headerlink\" title=\"滑动窗口\"></a>滑动窗口</h2><p>接下来就开始介绍数组操作中另一个重要的方法：<strong>滑动窗口</strong>。</p>\n<p>所谓滑动窗口，就是<strong>不断的调节子序列的起始位置和终止位置</strong>，从而得出我们要想的结果。</p>\n<p>在暴力解法中，是一个for循环滑动窗口的起始位置，一个for循环为滑动窗口的终止位置，用两个for循环 完成了一个不断搜索区间的过程。</p>\n<p>那么滑动窗口如何用一个for循环来完成这个操作呢。</p>\n<p>首先要思考 如果用一个for循环，那么应该表示 滑动窗口的起始位置，还是终止位置。</p>\n<p>如果只用一个for循环来表示 滑动窗口的起始位置，那么如何遍历剩下的终止位置？</p>\n<p>此时难免再次陷入 暴力解法的怪圈。</p>\n<p>所以 只用一个for循环，那么这个循环的索引，一定是表示 滑动窗口的终止位置。</p>\n<p>在本题中实现滑动窗口，主要确定如下三点：</p>\n<ul>\n<li>窗口内是什么？</li>\n<li>如何移动窗口的起始位置？</li>\n<li>如何移动窗口的结束位置？</li>\n</ul>\n<p>窗口就是 满足其和 ≥ s 的长度最小的 连续 子数组。</p>\n<p>窗口的起始位置如何移动：如果当前窗口的值大于s了，窗口就要向前移动了（也就是该缩小了）。</p>\n<p>窗口的结束位置如何移动：窗口的结束位置就是遍历数组的指针，也就是for循环里的索引。</p>\n<p>解题的关键在于 窗口的起始位置如何移动。</p>\n<p><strong>滑动窗口的精妙之处在于根据当前子序列和大小的情况，不断调节子序列的起始位置。从而将O(n^2)暴力解法降为O(n)。</strong></p>\n<p>代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int minSubArrayLen(int target, int* nums, int numsSize)&#123;</span><br><span class=\"line\">    int result = INT32_MAX;</span><br><span class=\"line\">    int i = 0;//滑动窗口起始位置</span><br><span class=\"line\">    int sum = 0;//滑动窗口内元素总和</span><br><span class=\"line\">    int len = 0;//滑动窗口的长度</span><br><span class=\"line\">    for(int j=0; j&lt;numsSize; j++)&#123;</span><br><span class=\"line\">        sum += nums[j];//累加并与target比较</span><br><span class=\"line\">        while(sum &gt;= target)&#123;//不能用IF</span><br><span class=\"line\">            len = j-i+1;</span><br><span class=\"line\">            result = result &lt; len ? result : len;</span><br><span class=\"line\">            sum -= nums[i++];//滑动窗口向后移动减去初始位置的值</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return result &lt; INT32_MAX ? result : 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/",
            "url": "https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/",
            "title": "数组_移除元素",
            "date_published": "2022-12-08T01:31:54.000Z",
            "content_html": "<h1 id=\"移除元素\"><a href=\"#移除元素\" class=\"headerlink\" title=\"移除元素\"></a>移除元素</h1><h2 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h2><p>LEETCODE 27.移除元素</p>\n<h2 id=\"暴力算法\"><a href=\"#暴力算法\" class=\"headerlink\" title=\"暴力算法\"></a>暴力算法</h2><p>这个题目暴力的解法就是两层for循环，一个for循环遍历数组元素 ，第二个for循环更新数组。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int removeElement(int* nums, int numsSize, int val)&#123;</span><br><span class=\"line\">    int i,j;</span><br><span class=\"line\">    int n = numsSize;</span><br><span class=\"line\">    for(i=0; i&lt;numsSize; i++)&#123;</span><br><span class=\"line\">        if(nums[i] == val)&#123;</span><br><span class=\"line\">            for(j=i+1; j&lt;numsSize; j++)&#123;</span><br><span class=\"line\">                nums[j-1] == nums[j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        i--;//每次去除VAL后，数组下标都会前移</span><br><span class=\"line\">        n--;//长度也在减小</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    printf(&quot;%d&quot;,n);</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"双指针法\"><a href=\"#双指针法\" class=\"headerlink\" title=\"双指针法\"></a>双指针法</h2><p>双指针法（快慢指针法）： <strong>通过一个快指针和慢指针在一个for循环下完成两个for循环的工作。</strong></p>\n<p>定义快慢指针</p>\n<ul>\n<li>快指针：寻找新数组的元素 ，新数组就是不含有目标元素的数组</li>\n<li>慢指针：指向更新 新数组下标的位置</li>\n</ul>\n<p>优点：<br>减少复杂度，优化代码。</p>\n<p>代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int removeElement(int* nums, int numsSize, int val)&#123;</span><br><span class=\"line\">    int fast = 0;</span><br><span class=\"line\">    int slow = 0;</span><br><span class=\"line\">    for(; fast&lt;numsSize; fast++)&#123;</span><br><span class=\"line\">        if(nums[fast] != val)&#123;//如果元素不是VAL，下标为slow的元素等于快指针处的元素</span><br><span class=\"line\">            nums[slow++] = nums[fast];</span><br><span class=\"line\">        &#125;//如果相等则跳过，此时slow未递增；快指针依旧在往前进</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return slow;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/07/%E6%95%B0%E7%BB%84-%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/",
            "url": "https://mangpumo.github.io/2022/12/07/%E6%95%B0%E7%BB%84-%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/",
            "title": "数组_二分查找",
            "date_published": "2022-12-07T15:37:29.000Z",
            "content_html": "<h1 id=\"二分查找\"><a href=\"#二分查找\" class=\"headerlink\" title=\"二分查找\"></a>二分查找</h1><h2 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h2><p>LEETCODE 704.二分查找</p>\n<h2 id=\"二分第一种写法\"><a href=\"#二分第一种写法\" class=\"headerlink\" title=\"二分第一种写法\"></a>二分第一种写法</h2><p>第一种写法，我们定义 target 是在一个在左闭右闭的区间里，<strong>也就是[left, right]</strong> （<strong>这个很重要非常重要</strong>）。<br>区间的定义这就决定了二分法的代码应该如何写，<strong>因为定义*target</strong>在**[left, right]<strong>区间</strong>，所以有如下两点：</p>\n<ul>\n<li>while (left &lt;&#x3D; right) 要使用 &lt;&#x3D; ，因为left &#x3D;&#x3D; right是有意义的，所以使用 &lt;&#x3D;</li>\n<li>if (nums[middle] &gt; target) right 要赋值为 middle - 1，因为当前这个nums[middle]一定不是target，那么接下来要查找的左区间结束下标位置就是 middle - 1</li>\n</ul>\n<p><strong>代码如下：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int search(int* nums, int numsSize, int target)&#123;</span><br><span class=\"line\">    int left = 0;</span><br><span class=\"line\">    int right = numsSize-1;</span><br><span class=\"line\">    //当left==right，区间[left, right]依然有效，所以用 &lt;=</span><br><span class=\"line\">    while(left &lt;= right)&#123;</span><br><span class=\"line\">    \t//防止两个int相加造成溢出，等同于相加除2</span><br><span class=\"line\">        int middle = left+(right-left)/2;</span><br><span class=\"line\">        </span><br><span class=\"line\">        if(nums[middle] &gt; target)&#123;</span><br><span class=\"line\">            right = middle-1;//middle一定不是要找的数，所以找他前面一位</span><br><span class=\"line\">        &#125;else if(nums[middle] &lt; target)&#123;</span><br><span class=\"line\">            left = middle+1;//同上</span><br><span class=\"line\">        &#125;else&#123;//nums[middle] == target</span><br><span class=\"line\">            return middle;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;   //未找到下标，返回-1</span><br><span class=\"line\">        return -1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"二分第二种写法\"><a href=\"#二分第二种写法\" class=\"headerlink\" title=\"二分第二种写法\"></a>二分第二种写法</h2><p>如果说定义 target 是在一个在左闭右开的区间里，也就是[left, right) ，那么二分法的边界处理方式则截然不同。</p>\n<p>有如下两点：</p>\n<ul>\n<li>while (left &lt; right)，这里使用 &lt; ,因为left &#x3D;&#x3D; right在区间[left, right)是没有意义的</li>\n<li>if (nums[middle] &gt; target) right 更新为 middle，因为当前nums[middle]不等于target，去左区间继续寻找，而寻找区间是左闭右开区间，所以right更新为middle，即：下一个查询区间不会去比较nums[middle]</li>\n</ul>\n<p>在数组：1,2,3,4,7,9,10中查找元素2，如图所示：<strong>（注意和方法一的区别）</strong></p>\n<p><strong>代码如下：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int search(int* nums, int numsSize, int target)&#123;</span><br><span class=\"line\">    int left = 0;</span><br><span class=\"line\">    int right = numsSize;//看不同</span><br><span class=\"line\">    while(left &lt; right)&#123;//定义target在左闭右开的区间里，即：[left, right)</span><br><span class=\"line\">    \t//==时无意义，会越界</span><br><span class=\"line\">        int middle = left+(right-left)/2;</span><br><span class=\"line\">        </span><br><span class=\"line\">        if(nums[middle] &gt; target)&#123;</span><br><span class=\"line\">            right = middle;//开区间，不会取到middle</span><br><span class=\"line\">        &#125;else if(nums[middle] &lt; target)&#123;</span><br><span class=\"line\">            left = middle+1;//前闭，所以会取到middle+1</span><br><span class=\"line\">        &#125;else&#123;// nums[middle] == target</span><br><span class=\"line\">            return middle;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;\t//未找到下标，返回-1</span><br><span class=\"line\">        return -1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/07/%E6%9D%82%E8%B0%88-%E7%A9%BA%E9%97%B4%E6%8D%A2%E6%97%B6%E9%97%B4/",
            "url": "https://mangpumo.github.io/2022/12/07/%E6%9D%82%E8%B0%88-%E7%A9%BA%E9%97%B4%E6%8D%A2%E6%97%B6%E9%97%B4/",
            "title": "杂谈_空间换时间",
            "date_published": "2022-12-07T14:23:08.000Z",
            "content_html": "<h1 id=\"空间换时间样例\"><a href=\"#空间换时间样例\" class=\"headerlink\" title=\"空间换时间样例\"></a>空间换时间样例</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>比较懒，不想写太多，就整一个样例，统计字母串里出现次数最多的字母</p>\n<h2 id=\"优化前\"><a href=\"#优化前\" class=\"headerlink\" title=\"优化前\"></a>优化前</h2><p>两层循环遍历字母串数组，统计出现最多次数字母的次数；<br>暴力算法就是两层循环枚举出现次数最多的字母；<br>显然时间复杂度太高，运算时间过长非常容易超时；<br>所以这里我们用空间换时间使用一个统计次数的数组，只需要遍历一次就可以了，时间复杂度只用O(n)</p>\n<p><strong>代码如下</strong></p>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**找一串字母出现次数最多的字母**/</span><br><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint max=0;</span><br><span class=\"line\">\tchar ans;</span><br><span class=\"line\">\tint record[26] = &#123;0&#125;;</span><br><span class=\"line\">\tchar arr[1000];</span><br><span class=\"line\">\tgets(arr);</span><br><span class=\"line\">\tint n = strlen(arr);</span><br><span class=\"line\">\tfor(int i=0; i&lt;n; i++)&#123;</span><br><span class=\"line\">\t\trecord[arr[i]-&#x27;a&#x27;]++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfor(int i=0; i&lt;26; i++)&#123;</span><br><span class=\"line\">\t\tif(record[i] &gt; max)&#123;</span><br><span class=\"line\">\t\t\tmax = record[i];</span><br><span class=\"line\">\t\t\tans = i+&#x27;a&#x27;;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tprintf(&quot;%c %d\\n&quot;,ans,max);</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/06/XTUOJ-1114%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%86%E5%BA%8F/",
            "url": "https://mangpumo.github.io/2022/12/06/XTUOJ-1114%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%86%E5%BA%8F/",
            "title": "XTUOJ_1114字符串逆序",
            "date_published": "2022-12-06T15:28:04.000Z",
            "content_html": "<h1 id=\"字符串逆序\"><a href=\"#字符串逆序\" class=\"headerlink\" title=\"字符串逆序\"></a>字符串逆序</h1><h2 id=\"Description\"><a href=\"#Description\" class=\"headerlink\" title=\"Description\"></a>Description</h2><p>给你一个字符串，请将其第K个字符开始的长度为L的子串进行逆序。</p>\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>有多组样例，第一行是一个整数，表示有多少个样例。每个样例占两行，第一行是个字符串，字符串全部由英文小写字符组成，长度不超过200。第二行是两个整数K和L，K从1开始计数，K+L-1不会超过字符串长度。</p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>每行输出一个字符串逆序以后的字符串结果。</p>\n<h2 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">abcabc</span><br><span class=\"line\">1 2</span><br><span class=\"line\">abcabc</span><br><span class=\"line\">2 5</span><br></pre></td></tr></table></figure>\n<h2 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bacabc</span><br><span class=\"line\">acbacb</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int n;</span><br><span class=\"line\">    char str[203];</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;n);</span><br><span class=\"line\">    while(n--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        scanf(&quot; %s&quot;,&amp;str);</span><br><span class=\"line\">        int k,l;</span><br><span class=\"line\">        scanf(&quot;%d %d&quot;,&amp;k,&amp;l);</span><br><span class=\"line\">        int len = strlen(str);</span><br><span class=\"line\">        int i;</span><br><span class=\"line\">        for(i=0;i&lt;k-1;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;%c&quot;,str[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for(i=k+l-2;i&gt;=k-1;i--)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;%c&quot;,str[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for(i=k+l-1;i&lt;len;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;%c&quot;,str[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;\\n&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/06/XTUOJ-1109%E5%85%B1%E5%90%8C%E7%9A%84%E5%89%8D%E7%BC%80/",
            "url": "https://mangpumo.github.io/2022/12/06/XTUOJ-1109%E5%85%B1%E5%90%8C%E7%9A%84%E5%89%8D%E7%BC%80/",
            "title": "XTUOJ_1109共同的前缀",
            "date_published": "2022-12-06T15:20:26.000Z",
            "content_html": "<h1 id=\"共同的前缀\"><a href=\"#共同的前缀\" class=\"headerlink\" title=\"共同的前缀\"></a>共同的前缀</h1><h2 id=\"Description\"><a href=\"#Description\" class=\"headerlink\" title=\"Description\"></a>Description</h2><p>给你K个字符串，请求出它们的最长公共前缀。 输入 第一行是一个整数N，表示测试样例的个数。 每个测试样例的第一行是一个整数K（2 &lt;&#x3D; k &lt;&#x3D; 20），表示有多少个字符串；以后每行是一个字符串，每个字符串的长度不超过200个字符。 输出 每行输出一个样例的结果。先输出“Case #: ”，其中’#’为样例的序号（从1开始），冒号为英文冒号，后接一个空格；然后是对应样例的结果。如果没有公共前缀，则无需输出前缀，但Case信息仍需要输出。</p>\n<h2 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">ACD</span><br><span class=\"line\">ACDEF</span><br><span class=\"line\">ACDFE</span><br><span class=\"line\">2</span><br><span class=\"line\">ABC</span><br><span class=\"line\">BCD</span><br></pre></td></tr></table></figure>\n<h2 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Case 1: ACD</span><br><span class=\"line\">Case 2: </span><br></pre></td></tr></table></figure>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;stdio.h&gt;</span><br><span class=\"line\">#include&lt;string.h&gt;</span><br><span class=\"line\">int main() </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int top;</span><br><span class=\"line\">    scanf(&quot;%d&quot;, &amp;top);</span><br><span class=\"line\">    char original[202] = &#123; 0 &#125;;</span><br><span class=\"line\">    char alphabet[202] = &#123; 0 &#125;;</span><br><span class=\"line\">    char same[202] = &#123; 0 &#125;;</span><br><span class=\"line\">    int cnt = 1;</span><br><span class=\"line\">    while (top--) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int length;</span><br><span class=\"line\">        scanf(&quot;%d&quot;, &amp;length);</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        scanf(&quot;%s&quot;, &amp;original, 200);</span><br><span class=\"line\">        </span><br><span class=\"line\">        length -= 2;</span><br><span class=\"line\">        int resemble = 200;</span><br><span class=\"line\">        scanf(&quot;%s&quot;, &amp;alphabet, 200);</span><br><span class=\"line\">        for (int i = 0; i &lt; 200; i++) </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if (original[i] != alphabet[i]) </span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                resemble = i;</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else </span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                same[i] = alphabet[i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        memset(alphabet, 0, sizeof(char));</span><br><span class=\"line\">        while (length--) </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            scanf(&quot;%s&quot;, &amp;alphabet, 200);</span><br><span class=\"line\">            for (int i = 0; i &lt;= resemble; i++) &#123;</span><br><span class=\"line\">                if (same[i] != alphabet[i]) </span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    resemble = i;</span><br><span class=\"line\">                    break;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            memset(alphabet, 0, sizeof(char));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;Case %d: &quot;, cnt++);</span><br><span class=\"line\">        for (int i = 0; i &lt; resemble; i++) </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(same[i] != 0)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">            printf(&quot;%c&quot;, same[i]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;\\n&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/06/XTUOJ-1108A-B/",
            "url": "https://mangpumo.github.io/2022/12/06/XTUOJ-1108A-B/",
            "title": "XTUOJ_1108A+B",
            "date_published": "2022-12-06T15:16:18.000Z",
            "content_html": "<h1 id=\"a-b\"><a href=\"#a-b\" class=\"headerlink\" title=\"a+b\"></a>a+b</h1><h2 id=\"Description\"><a href=\"#Description\" class=\"headerlink\" title=\"Description\"></a>Description</h2><p>请计算a+b，但a和b是按不同的进制给出的。进制最小为2进制，最大为62进制，其中使用A-Z依次表示10到35，a-z表示36-61。请写出a+b的结果，结果按十进制输出。 输入 第一行是一个整数N，表示有多少个测试样例，以后每行是一个样例，每行是4个部分，分别为a的值，a的进制，b的值，b的进制。其中值都是用一个字符串表示，进制都是一个整数。4个部分之间用一个空格隔开，保证输入的合法，a、b和a+b的值都在-2^31到2^31-1之间。 输出 每行输出一个样例的结果。</p>\n<h2 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">1000 2 1F 16</span><br><span class=\"line\">-1 10 20 3</span><br></pre></td></tr></table></figure>\n<h2 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">39</span><br><span class=\"line\">5</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">int main() </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int n,a,i,min = 201,j,temp,zdy = 1,num;</span><br><span class=\"line\">    char str[22][202];</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;n);</span><br><span class=\"line\">    while(n--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        min = 201;</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;a);</span><br><span class=\"line\">        num = 0;</span><br><span class=\"line\">        for(i = 0;i &lt; a;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            scanf(&quot;%s&quot;,str[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;Case %d: &quot;,zdy);</span><br><span class=\"line\">        zdy++;</span><br><span class=\"line\">        for(i=0;i&lt;a;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">               if(strlen(str[i])&lt; min)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                min = strlen(str[i]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for(j = 0;j &lt; min;j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            for(i = 0;i &lt; a-1;i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                if(str[i][j]==str[i+1][j])</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    continue;</span><br><span class=\"line\">                &#125; </span><br><span class=\"line\">                else</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    num = 1;</span><br><span class=\"line\">                    break;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            if(num==0)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                   printf(&quot;%c&quot;,str[0][j]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;\\n&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/02/XTUOJ-1105%E5%88%86%E6%95%B0%E5%8A%A0%E5%87%8F%E6%B3%95/",
            "url": "https://mangpumo.github.io/2022/12/02/XTUOJ-1105%E5%88%86%E6%95%B0%E5%8A%A0%E5%87%8F%E6%B3%95/",
            "title": "XTUOJ_1105分数加减法",
            "date_published": "2022-12-02T04:39:39.000Z",
            "content_html": "<h1 id=\"分数加减法\"><a href=\"#分数加减法\" class=\"headerlink\" title=\"分数加减法\"></a>分数加减法</h1><h2 id=\"Description\"><a href=\"#Description\" class=\"headerlink\" title=\"Description\"></a>Description</h2><p>给你两个分数，请计算两者和及差。 输入 第一行是一个整数K，表示样例的个数。以后每行一个样例，每行4个正整数，a、b、c、d，即计算分数a&#x2F;b与c&#x2F;d的和、差。4个整数都不超过10,000。 输出 每行输出一个样例的结果，先输出和，后输出差。如果结果的值为整数，那么只需要输出整数，如果结果的值为分数，需要输出x&#x2F;y的形式，并保证x,y互质。</p>\n<h2 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br><span class=\"line\">1 2 1 2</span><br><span class=\"line\">2 3 1 3</span><br><span class=\"line\">1 8 5 8</span><br></pre></td></tr></table></figure>\n<h2 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 0</span><br><span class=\"line\">1 1/3</span><br><span class=\"line\">3/4 -1/2</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">int gcd(int a,int b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if(a%b == 0)</span><br><span class=\"line\">        return b;</span><br><span class=\"line\">    else</span><br><span class=\"line\">        return gcd(b,a%b);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int K;</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;K);</span><br><span class=\"line\">    while(K--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int a1,a2,b1,b2;</span><br><span class=\"line\">        int fm=0;</span><br><span class=\"line\">        int k=1;</span><br><span class=\"line\">        int gys=0;</span><br><span class=\"line\">        int fzh=0,fzc=0,m,n;</span><br><span class=\"line\">        scanf(&quot;%d %d %d %d&quot;,&amp;a1,&amp;a2,&amp;b1,&amp;b2);</span><br><span class=\"line\">        fm = a2*b2;//通分</span><br><span class=\"line\">        fzh = a1*b2+b1*a2;</span><br><span class=\"line\">        fzc = a1*b2-b1*a2;</span><br><span class=\"line\">        if(fzh%fm == 0)</span><br><span class=\"line\">        &#123;//整数</span><br><span class=\"line\">            printf(&quot;%d &quot;,fzh/fm);    </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;//约分</span><br><span class=\"line\">            n = fzh;</span><br><span class=\"line\">            m = fm;</span><br><span class=\"line\">            gys = gcd(n,m);</span><br><span class=\"line\">            fzh /= gys;</span><br><span class=\"line\">            fm /= gys;</span><br><span class=\"line\">            printf(&quot;%d/%d &quot;,fzh,fm);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(fzc &lt; 0)</span><br><span class=\"line\">        &#123;//方便公约数</span><br><span class=\"line\">            k = -1;</span><br><span class=\"line\">            fzc = -fzc;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        fm = a2*b2;//在上一步已经变化了，这里需要重新赋值</span><br><span class=\"line\">        if(fzc%fm == 0)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            fzc = k*fzc;</span><br><span class=\"line\">            printf(&quot;%d\\n&quot;,fzc/fm);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            n = fzc;</span><br><span class=\"line\">            m = fm;</span><br><span class=\"line\">            gys = gcd(n,m);</span><br><span class=\"line\">            fzc = k*fzc;</span><br><span class=\"line\">            fzc /= gys;</span><br><span class=\"line\">            fm /= gys;</span><br><span class=\"line\">            printf(&quot;%d/%d\\n&quot;,fzc,fm);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/26/XTUOJ-1331%E5%AF%86%E7%A0%81/",
            "url": "https://mangpumo.github.io/2022/11/26/XTUOJ-1331%E5%AF%86%E7%A0%81/",
            "title": "XTUOJ_1331密码",
            "date_published": "2022-11-26T01:49:49.000Z",
            "content_html": "<h1 id=\"Password\"><a href=\"#Password\" class=\"headerlink\" title=\"Password\"></a>Password</h1><h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>Eric喜欢使用数字1,2,3,4作为密码，而且他有个怪癖，相邻数字不能相同，且相差不能超过2。当然只用数字做密码，会比较弱，Eric想知道当长度为n时，这样的密码有多少种？</p>\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>第一行是一个整数T(1≤T≤45),表示样例的个数。 每行一个样例，为整数n(1≤T≤45)。</p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>每行输出一个样例的结果。</p>\n<h2 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5</span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td></tr></table></figure>\n<h2 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4</span><br><span class=\"line\">10</span><br><span class=\"line\">26</span><br><span class=\"line\">66</span><br><span class=\"line\">170</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h.&gt;</span><br><span class=\"line\">__int64 arr[46];</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    arr[1] = 4;</span><br><span class=\"line\">    arr[2] = 10;</span><br><span class=\"line\">    __int64 a=2,b=3;</span><br><span class=\"line\">    for(int i=3;i&lt;=45;i++)</span><br><span class=\"line\">    &#123;    //打表，</span><br><span class=\"line\">    __int64 temp1,temp2;</span><br><span class=\"line\">    temp1 = a;</span><br><span class=\"line\">    temp2 = b;</span><br><span class=\"line\">    arr[i] = temp2*2*2+(temp1*2+temp2)*2;</span><br><span class=\"line\">    a = temp2*2;</span><br><span class=\"line\">    b = temp1*2+temp2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    int K,m;</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;K);</span><br><span class=\"line\">    while(K--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;m);//不要乱加空格</span><br><span class=\"line\">        printf(&quot;%I64d\\n&quot;,arr[m]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/26/XTUOJ-1194Recipient/",
            "url": "https://mangpumo.github.io/2022/11/26/XTUOJ-1194Recipient/",
            "title": "XTUOJ_1194Recipient",
            "date_published": "2022-11-26T01:43:11.000Z",
            "content_html": "<h1 id=\"Recipient\"><a href=\"#Recipient\" class=\"headerlink\" title=\"Recipient\"></a>Recipient</h1><h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>快递小哥每天都辛苦的送快递，今天他需要送N份快递给N个收件人，第i份快递需要送给第i个收件人。 请问其中发生恰好K个送错了的情况数是多少？</p>\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>存在多样例。 每行输入两个整数N和K，1≤N≤1000,0≤K≤N。 如果两个都为0，则表示输入结束，这个样例不需要处理。</p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>每行输出一个样例的结果，因为数值会比较大，所有结果需要对10^9+7取模。</p>\n<h2 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 1</span><br><span class=\"line\">2 1</span><br><span class=\"line\">3 2</span><br><span class=\"line\">1000 1000</span><br><span class=\"line\">0 0</span><br></pre></td></tr></table></figure>\n<h2 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0</span><br><span class=\"line\">0</span><br><span class=\"line\">3</span><br><span class=\"line\">37043040</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">const int mo = 1000000007;</span><br><span class=\"line\">//#define ll __int64</span><br><span class=\"line\">__int64 d[1001];</span><br><span class=\"line\">__int64 c[1001][1001];</span><br><span class=\"line\">//务必注意数据类型</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    //求错排</span><br><span class=\"line\">    d[2] = 1;</span><br><span class=\"line\">    int i,j;</span><br><span class=\"line\">    for(i=3; i&lt;1001; i++)</span><br><span class=\"line\">    &#123;//芝士一个公式</span><br><span class=\"line\">        d[i] = (i-1)*(d[i-1]+d[i-2])%mo;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //求组合数</span><br><span class=\"line\">    for(i=1; i&lt;1001; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        c[i][0] = c[i][i] = 1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for(i=2; i&lt;1001;i++)</span><br><span class=\"line\">        for(j=1; j&lt;i; j++)</span><br><span class=\"line\">            c[i][j] = (c[i-1][j-1]+c[i-1][j])%mo;</span><br><span class=\"line\">            //芝士公式，杨辉三角</span><br><span class=\"line\">    int N,K;</span><br><span class=\"line\">    __int64 ans;//注意数据类型</span><br><span class=\"line\">    while(scanf(&quot;%d %d&quot;,&amp;N,&amp;K) != EOF&amp;&amp;N+K != 0)</span><br><span class=\"line\">    &#123;//N和K都为0退出</span><br><span class=\"line\">        if(K == 0)//if(!K)</span><br><span class=\"line\">            printf(&quot;1\\n&quot;);//特殊情况特殊考虑</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ans = (d[K]*c[N][K])%mo;</span><br><span class=\"line\">            printf(&quot;%I64d\\n&quot;,ans);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/26/XTUOJ-1238BinaryString/",
            "url": "https://mangpumo.github.io/2022/11/26/XTUOJ-1238BinaryString/",
            "title": "XTUOJ_1238BinaryString",
            "date_published": "2022-11-26T01:34:54.000Z",
            "content_html": "<h1 id=\"Binary-String\"><a href=\"#Binary-String\" class=\"headerlink\" title=\"Binary String\"></a>Binary String</h1><h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>求n位01串含连续至少2个1的串的个数。</p>\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>第一行是一个整数K（K≤10000），表示样例的个数。 每行样例是一个整数n(1≤1000000)。</p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>每行输出一个样例的结果，因为数目可能很大，请对10^9+7取模。</p>\n<h2 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5</span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">1000000</span><br></pre></td></tr></table></figure>\n<h2 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0</span><br><span class=\"line\">1</span><br><span class=\"line\">3</span><br><span class=\"line\">8</span><br><span class=\"line\">782550144</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">const int mo = 1000000007;</span><br><span class=\"line\">int a[1000001];</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int K;</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;K);</span><br><span class=\"line\">    a[1] = 0;</span><br><span class=\"line\">    a[2] = 1;</span><br><span class=\"line\">    int i,k=1;</span><br><span class=\"line\">    for(i=3; i&lt;=1000000; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        k *= 2;//规律</span><br><span class=\"line\">        if(k&gt;mo)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            k %= mo;//数据可能很大，注意取模</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        a[i] = ((a[i-1]+a[i-2])%mo+k)%mo;</span><br><span class=\"line\">    &#125;    //随时注意取模</span><br><span class=\"line\">    while(K--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int n;</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;n);</span><br><span class=\"line\">        printf(&quot;%d\\n&quot;,a[n]);//下标对应的</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/26/XTUOJ-1270%E6%95%B0%E4%BD%8D%E4%B8%8D%E5%90%8C%E7%9A%84%E6%95%B0/",
            "url": "https://mangpumo.github.io/2022/11/26/XTUOJ-1270%E6%95%B0%E4%BD%8D%E4%B8%8D%E5%90%8C%E7%9A%84%E6%95%B0/",
            "title": "XTUOJ_1270数位不同的数",
            "date_published": "2022-11-26T01:27:55.000Z",
            "content_html": "<h1 id=\"数位不同的数\"><a href=\"#数位不同的数\" class=\"headerlink\" title=\"数位不同的数\"></a>数位不同的数</h1><h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>数位不同的数是指所有数位上的数码都不一样的数，比如“123”三个数码1,2,3，都不一样，所以是数位不同的数；但是“1232”中有两个相同的数码2，所以不是。请写一个程序，计算第几个符合条件的数是什么？</p>\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>每行输入一个整数n(1≤n≤8877691)。</p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>每行输出一个整数，为对应样例的结果。</p>\n<h2 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">10</span><br><span class=\"line\">100</span><br><span class=\"line\">8877691</span><br></pre></td></tr></table></figure>\n<h2 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0</span><br><span class=\"line\">9</span><br><span class=\"line\">120</span><br><span class=\"line\">9876543210</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h.&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">typedef __int64 ll;</span><br><span class=\"line\">ll sq[8877700];</span><br><span class=\"line\">int mark[10];</span><br><span class=\"line\">int temp[32];//答案暂存器</span><br><span class=\"line\">int count=2;//表[1]为0</span><br><span class=\"line\">//dfs首位为0会直接跳过，但是01存在。</span><br><span class=\"line\">void dfs(int deep,int maxdeep)//深度优先搜索</span><br><span class=\"line\">&#123;//经常用于搜索可行解</span><br><span class=\"line\">    if(deep == maxdeep)</span><br><span class=\"line\">    &#123;//当深度到最深时存储答案并跳出</span><br><span class=\"line\">        ll output = 0;</span><br><span class=\"line\">        for(int i=0; i&lt;deep; i++)</span><br><span class=\"line\">        &#123;//temp存放每一位数字</span><br><span class=\"line\">            output *= 10;</span><br><span class=\"line\">            output += temp[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sq[count] = output;</span><br><span class=\"line\">        count++;</span><br><span class=\"line\">        return;//返回函数调用处</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for(int i=0; i&lt;=9; i++)</span><br><span class=\"line\">    &#123;//判断数字是否被用过</span><br><span class=\"line\">        if(mark[i] != 1)</span><br><span class=\"line\">        &#123;//不等于1，说明没被用过</span><br><span class=\"line\">            if(deep == 0&amp;&amp;i ==0)</span><br><span class=\"line\">            &#123;//首位为0直接跳过</span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            mark[i] = 1;//标记该数字已经被用过</span><br><span class=\"line\">            temp[deep] = i;//存储目标数字的这一位</span><br><span class=\"line\">            dfs(deep+1,maxdeep);//继续深度搜索</span><br><span class=\"line\">            mark[i] = 0;//用过后擦除，使判断继续</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/26/XTUOJ-12570%E5%92%8C1/",
            "url": "https://mangpumo.github.io/2022/11/26/XTUOJ-12570%E5%92%8C1/",
            "title": "XTUOJ_12570和1",
            "date_published": "2022-11-26T01:23:45.000Z",
            "content_html": "<h1 id=\"0和1\"><a href=\"#0和1\" class=\"headerlink\" title=\"0和1\"></a>0和1</h1><h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>一个01字符串，长度是n，其中1比0多m个，请问不同的排列方案数有多少个？</p>\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>第一行是一个整数K，表示样例的个数。 以后每行两个整数n和m，1≤n≤33,0≤m≤n。</p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>每行输出一个样例的结果。</p>\n<h2 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4</span><br><span class=\"line\">2 0</span><br><span class=\"line\">2 1</span><br><span class=\"line\">3 0</span><br><span class=\"line\">3 1</span><br></pre></td></tr></table></figure>\n<h2 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">0</span><br><span class=\"line\">0</span><br><span class=\"line\">3</span><br></pre></td></tr></table></figure>\n<h2 id=\"线索\"><a href=\"#线索\" class=\"headerlink\" title=\"线索\"></a>线索</h2><p>第一个样例为”01”和”10”；第二、三个样例不存在这样的串；第四个样例为”011”,”101”,”110”</p>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;math.h&gt;</span><br><span class=\"line\">//组合数公式：C(n,m) = C(n-1,m-1)+C(n,m-1)</span><br><span class=\"line\">//C(0,i)=C(i,i)=0</span><br><span class=\"line\">//阶乘：C(n,m) = m!/(n!*(m-n)!)</span><br><span class=\"line\">double fact(int a)//求阶乘函数</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if(a == 0)</span><br><span class=\"line\">        return 1;</span><br><span class=\"line\">    else</span><br><span class=\"line\">        return a*fact(a-1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int K;</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;K);</span><br><span class=\"line\">    while(K--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int n,m,n1,m1;</span><br><span class=\"line\">        double ans = 0;</span><br><span class=\"line\">        scanf(&quot;%d %d&quot;,&amp;n,&amp;m);//1比0多m个，</span><br><span class=\"line\">        //0有(m+n)/2个，1有(n-m)/2个；</span><br><span class=\"line\">        n1 = (m+n)/2;</span><br><span class=\"line\">        m1 = (n-m)/2;</span><br><span class=\"line\">        if((n1+m1) == n)//判断存不存在这样的串</span><br><span class=\"line\">        &#123;//阶乘公式：C(n,m) = m!/(n!*(m-n)!)</span><br><span class=\"line\">            ans = fact(n)/(fact(n1)*fact(m1));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;%.0lf\\n&quot;,ans);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/26/XTUOJ-1090%E7%BB%84%E5%90%88%E6%95%B0/",
            "url": "https://mangpumo.github.io/2022/11/26/XTUOJ-1090%E7%BB%84%E5%90%88%E6%95%B0/",
            "title": "XTUOJ_1090组合数",
            "date_published": "2022-11-26T01:17:55.000Z",
            "content_html": "<h1 id=\"组合数\"><a href=\"#组合数\" class=\"headerlink\" title=\"组合数\"></a>组合数</h1><h2 id=\"Description\"><a href=\"#Description\" class=\"headerlink\" title=\"Description\"></a>Description</h2><p>2^n&#x3D;C(n,0)+C(n,1)+…+C(n,n)。其中^表示幂，C(n,x)表示组合数，即C(n,x)&#x3D;n!&#x2F;（(n-x)!x!）。现在给你n（0&lt;&#x3D;n&lt;&#x3D;33），要你输出2^n的组合数之和的表达式</p>\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>每行一个整数n，如果n为负数则输入结束。</p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>每行输出一个表达式，表达式格式形似为2^n&#x3D;C(n,0)+C(n,1)+…+C(n,n)。</p>\n<h2 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h2><p>2</p>\n<p>3</p>\n<p>-1</p>\n<h2 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h2><p>2^2&#x3D;1+2+1</p>\n<p>2^3&#x3D;1+3+3+1</p>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int n;</span><br><span class=\"line\">    int i,j;</span><br><span class=\"line\">    int tri[40][40];</span><br><span class=\"line\">    memset(tri,0,sizeof(tri));//务必初始化，否则结果乱码。</span><br><span class=\"line\">    tri[0][0] = 1;</span><br><span class=\"line\">    for(i=1;i&lt;=33;i++)</span><br><span class=\"line\">    &#123;//杨辉三角打表算组合数。</span><br><span class=\"line\">        tri[i][0] = 1;</span><br><span class=\"line\">        tri[i][i] = 1;</span><br><span class=\"line\">        for(j=1;j&lt;=i;j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            tri[i][j] = tri[i-1][j]+tri[i-1][j-1]; //杨辉三角规律</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    while(scanf(&quot;%d&quot;,&amp;n) != EOF &amp;&amp; n&gt;=0)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        printf(&quot;2^%d=1&quot;,n);//为了输出+1，提前输出一个1</span><br><span class=\"line\">        for(j=1;j&lt;=n;j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;+%d&quot;,tri[n][j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;\\n&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/26/XTUOJ-1297Homework/",
            "url": "https://mangpumo.github.io/2022/11/26/XTUOJ-1297Homework/",
            "title": "XTUOJ_1297Homework",
            "date_published": "2022-11-26T01:10:28.000Z",
            "content_html": "<h1 id=\"Homework\"><a href=\"#Homework\" class=\"headerlink\" title=\"Homework\"></a>Homework</h1><h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>鉴于很多同学Ctrl+A,Ctrl+C,Ctrl+V的问题，Eric想重新计算一下作业成绩，成绩计算的规则如下：</p>\n<p>1.每道题按正确提交的先后顺序给分，第1-12名32，13-24名16分，25-48名8分，49-96名4分，97-192名2分，其余1分。<br>2.学生所有题目的分数累加和为其积分。<br>3.作业成绩&#x3D;round(100+log(1+(本人积分−最高积分)&#x2F;最高积分)×10)，其中round为四舍五入取整，log以自然对数为底。<br>Eric已经通过查询数据库得到每个人每道题的排名情况，请写一个程序帮Eric算一下所有人的作业成绩。  </p>\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>输入包含若干行，每行是三个部分，题目号，学号，排名。<br>学生人数不超过500，题目数量不超过200。</p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>输出学号和成绩，按成绩逆序，学号，并按作业成绩逆序，学号正序排列显示。</p>\n<h2 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1054 2015551111 1</span><br><span class=\"line\">1054 2015551101 2</span><br><span class=\"line\">1054 2015551119 3</span><br><span class=\"line\">1054 2015551115 4</span><br><span class=\"line\">1054 2015551110 5</span><br><span class=\"line\">1054 2015551114 6</span><br><span class=\"line\">1054 2015551128 7</span><br><span class=\"line\">1054 2015551118 8</span><br><span class=\"line\">1054 2015551102 9</span><br><span class=\"line\">1054 2015551130 10</span><br><span class=\"line\">1054 2015551139 11</span><br><span class=\"line\">1054 2015551135 12</span><br><span class=\"line\">1054 2015551120 13</span><br><span class=\"line\">1054 2015551129 14</span><br><span class=\"line\">1054 2015551104 15</span><br><span class=\"line\">1054 2015551112 16</span><br><span class=\"line\">1054 2015551116 17</span><br><span class=\"line\">1054 2015551138 18</span><br><span class=\"line\">1054 2015551103 19</span><br><span class=\"line\">1054 2015551131 20</span><br><span class=\"line\">1054 2015551132 21</span><br><span class=\"line\">1054 2015551106 22</span><br><span class=\"line\">1054 2015551136 23</span><br><span class=\"line\">1054 2015551124 24</span><br><span class=\"line\">1054 2015551126 25</span><br><span class=\"line\">1054 2015551113 26</span><br><span class=\"line\">1054 2015551109 27</span><br><span class=\"line\">1054 2015551117 28</span><br><span class=\"line\">1054 2015551125 29</span><br><span class=\"line\">1054 2015551127 30</span><br><span class=\"line\">1054 2015551123 31</span><br><span class=\"line\">1054 2015551133 32</span><br><span class=\"line\">1054 2015551134 33</span><br><span class=\"line\">1054 2015551121 34</span><br><span class=\"line\">1054 2015551122 35</span><br><span class=\"line\">1054 2015551137 36</span><br></pre></td></tr></table></figure>\n<h2 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2015551101 100</span><br><span class=\"line\">2015551102 100</span><br><span class=\"line\">2015551110 100</span><br><span class=\"line\">2015551111 100</span><br><span class=\"line\">2015551114 100</span><br><span class=\"line\">2015551115 100</span><br><span class=\"line\">2015551118 100</span><br><span class=\"line\">2015551119 100</span><br><span class=\"line\">2015551128 100</span><br><span class=\"line\">2015551130 100</span><br><span class=\"line\">2015551135 100</span><br><span class=\"line\">2015551139 100</span><br><span class=\"line\">2015551103 93</span><br><span class=\"line\">2015551104 93</span><br><span class=\"line\">2015551106 93</span><br><span class=\"line\">2015551112 93</span><br><span class=\"line\">2015551116 93</span><br><span class=\"line\">2015551120 93</span><br><span class=\"line\">2015551124 93</span><br><span class=\"line\">2015551129 93</span><br><span class=\"line\">2015551131 93</span><br><span class=\"line\">2015551132 93</span><br><span class=\"line\">2015551136 93</span><br><span class=\"line\">2015551138 93</span><br><span class=\"line\">2015551109 86</span><br><span class=\"line\">2015551113 86</span><br><span class=\"line\">2015551117 86</span><br><span class=\"line\">2015551121 86</span><br><span class=\"line\">2015551122 86</span><br><span class=\"line\">2015551123 86</span><br><span class=\"line\">2015551125 86</span><br><span class=\"line\">2015551126 86</span><br><span class=\"line\">2015551127 86</span><br><span class=\"line\">2015551133 86</span><br><span class=\"line\">2015551134 86</span><br><span class=\"line\">2015551137 86</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;math.h&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">__int64 a[501];</span><br><span class=\"line\">int b[501];</span><br><span class=\"line\">//数组a存学号，数组b存排名，通过下标联系</span><br><span class=\"line\">int trans(int x)</span><br><span class=\"line\">&#123;//积分转换函数</span><br><span class=\"line\">    if(x&gt;=1&amp;&amp;x&lt;=12)</span><br><span class=\"line\">        x = 32;</span><br><span class=\"line\">    else if(x&gt;=13&amp;&amp;x&lt;=24)</span><br><span class=\"line\">        x = 16;</span><br><span class=\"line\">    else if(x&gt;=25&amp;&amp;x&lt;=48)</span><br><span class=\"line\">        x = 8;</span><br><span class=\"line\">    else if(x&gt;=49&amp;&amp;x&lt;=96)</span><br><span class=\"line\">        x = 4;</span><br><span class=\"line\">    else if(x&gt;=97&amp;&amp;x&lt;=192)</span><br><span class=\"line\">        x = 2;</span><br><span class=\"line\">    else if(x&gt;=193)</span><br><span class=\"line\">        x = 1;</span><br><span class=\"line\">    return x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int swap(int x,int y)</span><br><span class=\"line\">&#123;//交换位置函数</span><br><span class=\"line\">    int temp;</span><br><span class=\"line\">    temp = a[x];</span><br><span class=\"line\">    a[x] = a[y];</span><br><span class=\"line\">    a[y] = temp;</span><br><span class=\"line\">    </span><br><span class=\"line\">    temp = b[x];</span><br><span class=\"line\">    b[x] = b[y];</span><br><span class=\"line\">    b[y] = temp;</span><br><span class=\"line\">    </span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    memset(a,0,sizeof(a));</span><br><span class=\"line\">    memset(b,0,sizeof(b));</span><br><span class=\"line\">    int n;//题号</span><br><span class=\"line\">    int rank;//排名</span><br><span class=\"line\">    int flag = 1;//学号</span><br><span class=\"line\">    int i,j,k;</span><br><span class=\"line\">    </span><br><span class=\"line\">    while(scanf(&quot;%d %I64d %d&quot;,&amp;n,&amp;a[flag],&amp;rank) != EOF)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        for(i=0; i&lt;flag; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(a[i] == a[flag])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //排名转换为积分</span><br><span class=\"line\">        b[i] += trans(rank);</span><br><span class=\"line\">        if(i == flag)</span><br><span class=\"line\">            flag++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    int num,judge=1;</span><br><span class=\"line\">    num = flag-1;</span><br><span class=\"line\">    while(judge)</span><br><span class=\"line\">    &#123;//冒泡将积分排序</span><br><span class=\"line\">        judge = 0;</span><br><span class=\"line\">        for(i=1;i&lt;num;i++)//注意i的初始值</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(b[i]&lt;b[i+1])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                swap(i,i+1);</span><br><span class=\"line\">                judge = 1;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    double q,w;</span><br><span class=\"line\">    q = b[1];</span><br><span class=\"line\">    for(i=1; i&lt;=num; i++)//没有=会变得不幸，（最后一位会只有积分值）</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        w = log(b[i]/q)*10+100.5;</span><br><span class=\"line\">        b[i] = w;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for(i = 1; i&lt;num; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        k = i;</span><br><span class=\"line\">        while(b[i] == b[i+1])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        judge = 1;</span><br><span class=\"line\">        while(judge)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            judge = 0;</span><br><span class=\"line\">            for(j=k;j&lt;i;j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                if(a[j]&gt;a[j+1])</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    swap(j,j+1);</span><br><span class=\"line\">                    judge = 1;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for(i=1;i&lt;=num;i++)</span><br><span class=\"line\">        printf(&quot;%I64d %d\\n&quot;,a[i],b[i]);</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/26/XTUOJ-1365Rotate/",
            "url": "https://mangpumo.github.io/2022/11/26/XTUOJ-1365Rotate/",
            "title": "XTUOJ_1365Rotate",
            "date_published": "2022-11-26T01:06:25.000Z",
            "content_html": "<h1 id=\"Rotate\"><a href=\"#Rotate\" class=\"headerlink\" title=\"Rotate\"></a>Rotate</h1><h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>一个4×4的矩阵，我们可以把矩阵看成内外两圈，我们可以把外圈按顺时钟或者逆时钟转动，每次转动90度。 我们想得到一个2×2的子矩阵，使得这个子矩阵4个元素的累加和最大。请问最大子矩阵的元素累加和是多少？</p>\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>第一行是一个整数T(1≤T≤1000)，表示样例的个数。 每个样例占4行,每行4个整数,所有元素在[1,1000]范围内。</p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>每行输出一个样例的结果。</p>\n<h2 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">1 2 3 4</span><br><span class=\"line\">5 6 7 8</span><br><span class=\"line\">9 10 11 12</span><br><span class=\"line\">13 14 15 16</span><br><span class=\"line\">1 1 2 2</span><br><span class=\"line\">3 3 4 4</span><br><span class=\"line\">2 2 1 1</span><br><span class=\"line\">4 4 3 3</span><br></pre></td></tr></table></figure>\n<h2 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">54</span><br><span class=\"line\">14</span><br></pre></td></tr></table></figure>\n<h2 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h2><p>第一个样例，最大子矩阵为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">11 12</span><br><span class=\"line\">15 16</span><br></pre></td></tr></table></figure>\n<p>第二个样例，顺时钟旋转两次，得到最大子矩阵为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3 4 </span><br><span class=\"line\">3 4 </span><br></pre></td></tr></table></figure>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int T;</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;T);</span><br><span class=\"line\">    int a[16];</span><br><span class=\"line\">    int b[4][4];</span><br><span class=\"line\">    int max;</span><br><span class=\"line\">    int i,j,m;</span><br><span class=\"line\">    </span><br><span class=\"line\">    while(T--)//输入4X4矩阵</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        for(i=0;i&lt;4;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            for(j=0;j&lt;4;j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                scanf(&quot;%d&quot;,&amp;b[i][j]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        m = 4;//旋转次数，转动90°</span><br><span class=\"line\">        max = b[0][1]+b[0][0]+b[1][0]+b[1][1];//初始化，=0也可</span><br><span class=\"line\">        while(m--)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            for(i=0;i&lt;3;i++)//遍历矩阵寻找最大2X2子矩阵</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                for(j=0;j&lt;3;j++)//注意不要大于4，会越界</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    if(b[i][j]+b[i][j+1]+b[i+1][j]+b[i+1][j+1] &gt; max)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        max = b[i][j]+b[i][j+1]+b[i+1][j]+b[i+1][j+1];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            if(m == 0)//一圈后退出</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            for(i=0;i&lt;4;i++)//暂存原矩阵最外圈</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                a[i] = b[0][i];</span><br><span class=\"line\">                a[i+4] = b[3][i];</span><br><span class=\"line\">                a[i+8] = b[i][0];</span><br><span class=\"line\">                a[i+12] = b[i][3];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            for(i=0;i&lt;4;i++)//旋转后的结果存入</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                b[i][3] = a[i];</span><br><span class=\"line\">                b[i][0] = a[i+4];</span><br><span class=\"line\">                b[0][3-i] = a[i+8];</span><br><span class=\"line\">                b[3][3-i] = a[i+12];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;%d\\n&quot;,max);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/26/XTUOJ-1327%E5%AD%97%E7%AC%A6%E7%9F%A9%E9%98%B5/",
            "url": "https://mangpumo.github.io/2022/11/26/XTUOJ-1327%E5%AD%97%E7%AC%A6%E7%9F%A9%E9%98%B5/",
            "title": "XTUOJ_1327字符矩阵",
            "date_published": "2022-11-26T01:03:16.000Z",
            "content_html": "<h1 id=\"字符矩阵\"><a href=\"#字符矩阵\" class=\"headerlink\" title=\"字符矩阵\"></a>字符矩阵</h1><h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>按照示例的规律输出字符矩阵。 比如输入字母D时，输出字符矩阵如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ABCDCBA</span><br><span class=\"line\">BBCDCBB</span><br><span class=\"line\">CCCDCCC</span><br><span class=\"line\">DDDDDDD</span><br><span class=\"line\">CCCDCCC</span><br><span class=\"line\">BBCDCBB</span><br><span class=\"line\">ABCDCBA</span><br></pre></td></tr></table></figure>\n<p>字符矩阵行首、尾都无空格。</p>\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>每行一个大写英文字母，如果字符为#，表示输入结束，不需要处理。</p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>依次输出对应的字符矩阵</p>\n<h2 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A</span><br><span class=\"line\">B</span><br><span class=\"line\">C</span><br><span class=\"line\">#</span><br></pre></td></tr></table></figure>\n<h2 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A</span><br><span class=\"line\">ABA</span><br><span class=\"line\">BBB</span><br><span class=\"line\">ABA</span><br><span class=\"line\">ABCBA</span><br><span class=\"line\">BBCBB</span><br><span class=\"line\">CCCCC</span><br><span class=\"line\">BBCBB</span><br><span class=\"line\">ABCBA</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;math.h&gt;</span><br><span class=\"line\">int min(int a,int b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if(a&gt;=b)</span><br><span class=\"line\">        return b;</span><br><span class=\"line\">    else</span><br><span class=\"line\">        return a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    char m;</span><br><span class=\"line\">    char cnt[55][55];</span><br><span class=\"line\">    while(scanf(&quot;%c&quot;,&amp;m)!=EOF&amp;&amp;m!=&#x27;#&#x27;)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int n= m-&#x27;A&#x27;+1;</span><br><span class=\"line\">        int i,j;</span><br><span class=\"line\">        for(i=0;i&lt;2*n-1;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            for(j=0;j&lt;2*n-1;j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                cnt[i][j] = m-min(abs(n-i-1),abs(n-j-1));//利用n-i-1与行的关系以及绝对值的利用进行输出6666</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for(i=0;i&lt;2*n-1;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            for(j=0;j&lt;2*n-1;j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot;%c&quot;,cnt[i][j]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            printf(&quot;\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/26/XTUOJ-1326Diagram/",
            "url": "https://mangpumo.github.io/2022/11/26/XTUOJ-1326Diagram/",
            "title": "XTUOJ_1326Diagram",
            "date_published": "2022-11-26T00:57:01.000Z",
            "content_html": "<h1 id=\"Diagram\"><a href=\"#Diagram\" class=\"headerlink\" title=\"Diagram\"></a>Diagram</h1><h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>给你一个字符串，请统计各个字符出现的个数，并使用字符打印一幅统计图表。</p>\n<p>图表的格式是</p>\n<p>1.x轴是字符，y轴是字符出现个数<br>2.x轴的字符为字符串中出现过的字符，并按字典顺序排列<br>3.y轴中的出现次数使用’<em>‘表示。为了让图表不至于太长，一个’</em>‘表示的数量要尽可能的大。<br>4.每行的行末不允许多余的空格。  </p>\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>存在多个测试用例，处理到文件末尾。<br>每行一个只含英文大写字母的字符串，长度不超过1000。  </p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>每行输出一个样例的结果，每个结果之后有一个空行。</p>\n<h2 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AABBCC</span><br><span class=\"line\">AAAABBBBCC</span><br><span class=\"line\">AABBBBDDDE</span><br></pre></td></tr></table></figure>\n<h2 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">***</span><br><span class=\"line\">ABC</span><br><span class=\"line\"></span><br><span class=\"line\">**</span><br><span class=\"line\">***</span><br><span class=\"line\">ABC</span><br><span class=\"line\"></span><br><span class=\"line\"> *</span><br><span class=\"line\"> **</span><br><span class=\"line\">***</span><br><span class=\"line\">****</span><br><span class=\"line\">ABDE</span><br></pre></td></tr></table></figure>\n<h2 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h2><p>第一个样例，ABC都是出现2次，所以我们可以用一个星号表示出现2次。<br>第二个样例的第一行坐标C的位置是行末，没有空格，是回车。ABC分别出现4，4，2次，所以使用一个星号表示出现2次<br>第三个样例没有C字符，所有没有C字符的统计信息。第1,2行的A字符位置是空格。  </p>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">int gnum(int a,int b)//求最大公因数 </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if(b == 0)</span><br><span class=\"line\">        return a;</span><br><span class=\"line\">    else</span><br><span class=\"line\">        return gnum(b,a%b);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    char qzx[1009];//存入输入的字符串 </span><br><span class=\"line\">    int i,j,n,m,max;</span><br><span class=\"line\">    while(scanf(&quot;%s&quot;,qzx) != EOF)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        //printf(&quot;1&quot;);</span><br><span class=\"line\">        int letter[27]=&#123;0&#125;;</span><br><span class=\"line\">        for(i=0;qzx[i] != &#x27;\\0&#x27;;i++)//求总数量 </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //printf(&quot;1&quot;);</span><br><span class=\"line\">            letter[qzx[i]-65]++;//相应字母的数量（字典序） </span><br><span class=\"line\">            n = letter[qzx[i]-65];//初始化 </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for(i=0;i&lt;26;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(letter[i] == &#x27;\\0&#x27;)//有的字母未出现 </span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            n = gnum(letter[i],n);//判断总的公因数 </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for(i=0;i&lt;26;i++)</span><br><span class=\"line\">            letter[i] = letter[i]/n;//不要取余！！！！！！ </span><br><span class=\"line\">        max = letter[0];</span><br><span class=\"line\">        for(i=0;i&lt;26;i++)//找出数量最多的一个字母，代表高度 </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(letter[i]&gt;max)</span><br><span class=\"line\">                max = letter[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for(i=max;i&gt;0;i--)//控制层数 </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            m = 0;</span><br><span class=\"line\">            for(j=0;j&lt;26&amp;&amp;m!=26;j++)//输出每一行的空格和星号 </span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                if(letter[j] == &#x27;\\0&#x27;) //遇到不在字符串的字母就跳过 </span><br><span class=\"line\">                    continue;</span><br><span class=\"line\">                else if(letter[j] &gt;= i)//大于等于数量最多的那个字母（也就是该层会输出星号） </span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    printf(&quot;*&quot;);</span><br><span class=\"line\">                    /*printf(&quot;1&quot;);*/</span><br><span class=\"line\">                    </span><br><span class=\"line\">                    for(m=j+1;m&lt;26;m++)//防止行尾多余空格的出现，否则PE </span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        if(letter[m]&lt;i)</span><br><span class=\"line\">                            continue;</span><br><span class=\"line\">                        else</span><br><span class=\"line\">                            break;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    </span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                else//如果没有输出空格 </span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    printf(&quot; &quot;);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            printf(&quot;\\n&quot;);//进入下一行 </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for(i=0;i&lt;26;i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                if(letter[i] == &#x27;\\0&#x27;)</span><br><span class=\"line\">                    continue;</span><br><span class=\"line\">                else</span><br><span class=\"line\">                    printf(&quot;%c&quot;,i+65);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        printf(&quot;\\n\\n&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/26/XTUOJ-1271Color/",
            "url": "https://mangpumo.github.io/2022/11/26/XTUOJ-1271Color/",
            "title": "XTUOJ_1271Color",
            "date_published": "2022-11-26T00:53:15.000Z",
            "content_html": "<h1 id=\"Color\"><a href=\"#Color\" class=\"headerlink\" title=\"Color\"></a>Color</h1><h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>Alice在玩一个游戏，她在一个m×n的格子里，随机涂黑k个格子。然后她每次可以把一行或者一列的格子染成红色，但是这一行中不能有黑色的格子。 请问她最多能把多少个格子涂成红色？</p>\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>第一行是一个整数T(T≤100)，表示样例的个数。 每个样例的第一行是m(1≤m≤100),n(1≤n≤100),k(0≤k≤m×n)。 以后的k行,每行两个整数x(1≤x≤m),y(1≤y≤n)，表示(x,y)为黑色格子。</p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>每行输出一个样例的结果。</p>\n<h2 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">3 4 2</span><br><span class=\"line\">1 1</span><br><span class=\"line\">3 3</span><br></pre></td></tr></table></figure>\n<h2 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">8</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int T;</span><br><span class=\"line\">    int a[101],b[101];</span><br><span class=\"line\">    //memset(a,0,sizeof(a));</span><br><span class=\"line\">    //memset(b,0,sizeof(b));</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;T);</span><br><span class=\"line\">    while(T--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        memset(a,0,sizeof(a));</span><br><span class=\"line\">        memset(b,0,sizeof(b));</span><br><span class=\"line\">        int m,n,k;</span><br><span class=\"line\">        int i,j,aa,bb;</span><br><span class=\"line\">        scanf(&quot;%d %d %d&quot;,&amp;m,&amp;n,&amp;k);//存数据</span><br><span class=\"line\">        for(i=0;i&lt;k;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            scanf(&quot;%d %d&quot;,&amp;aa,&amp;bb);</span><br><span class=\"line\">             a[aa] = 1;</span><br><span class=\"line\">             b[bb] = 1;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        int countx=0,county=0;</span><br><span class=\"line\">        for(i=1;i&lt;=m;i++)//没有黑色的行</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(a[i]==0)</span><br><span class=\"line\">                countx++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        int s;</span><br><span class=\"line\">        s = countx*n;</span><br><span class=\"line\">        for(i=1;i&lt;=n;i++)//没有黑色的列</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(b[i]==0)</span><br><span class=\"line\">                county++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        s = s+county*m-countx*county;//减去交叉地带</span><br><span class=\"line\">        printf(&quot;%d\\n&quot;,s);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        }
    ]
}