{
    "version": "https://jsonfeed.org/version/1",
    "title": null,
    "subtitle": "翩若浮云着霓裳，落幕鬓边皆染霜",
    "icon": "https://mangpumo.github.io/images/favicon.ico",
    "description": "欢迎来到 Mang Pumo 的个人博客!",
    "home_page_url": "https://MangPumo.github.io",
    "items": [
        {
            "id": "https://mangpumo.github.io/2022/12/11/XTUOJ-1276Average/",
            "url": "https://mangpumo.github.io/2022/12/11/XTUOJ-1276Average/",
            "title": "XTUOJ_1276Average",
            "date_published": "2022-12-10T16:05:29.000Z",
            "content_html": "<h1 id=\"Average\"><a href=\"#Average\" class=\"headerlink\" title=\"Average\"></a>Average</h1><h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>Alice与Bob出去吃晚饭，吃完饭Alice出了n元，Bob出了m元。 请问如果两人平摊吃饭的钱，谁应该给谁多少钱？</p>\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>第一行是一个整数T(1≤T≤1000)，表示样例的个数。 以后每行一个样例，为两个整数n,m(1≤n,m≤100)。</p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>每行一个样例的结果。<br>如果Alice需要给Bob钱，输出 Alice x; 如果Bob需要给Alice钱，输出 Bob x; 如果不需要给钱，输出 None。</p>\n<h2 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3 </span><br><span class=\"line\">5 8 </span><br><span class=\"line\">5 3 </span><br><span class=\"line\">5 5</span><br></pre></td></tr></table></figure>\n<h2 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Alice 1.5 </span><br><span class=\"line\">Bob 1 </span><br><span class=\"line\">None</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int T;</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;T);</span><br><span class=\"line\">    while(T--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        double n,m;</span><br><span class=\"line\">        double cha;</span><br><span class=\"line\">        scanf(&quot;%lf %lf&quot;,&amp;n,&amp;m);</span><br><span class=\"line\">        if(n &gt; m)&#123;</span><br><span class=\"line\">            cha = (n-m)/2;</span><br><span class=\"line\">            if(cha == (int)cha)&#123;</span><br><span class=\"line\">                printf(&quot;Bob %.0lf\\n&quot;,cha);</span><br><span class=\"line\">            &#125;else&#123;</span><br><span class=\"line\">                printf(&quot;Bob %.1lf\\n&quot;,cha);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;else if(m &gt;n)&#123;</span><br><span class=\"line\">            cha = (m-n)/2;</span><br><span class=\"line\">            if(cha == (int )cha)&#123;</span><br><span class=\"line\">                printf(&quot;Alice %.0lf\\n&quot;,cha);</span><br><span class=\"line\">            &#125;else&#123;</span><br><span class=\"line\">                printf(&quot;Alice %.1lf\\n&quot;,cha);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;else&#123;</span><br><span class=\"line\">            printf(&quot;None\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/11/XTUOJ-1277TriTriangle/",
            "url": "https://mangpumo.github.io/2022/12/11/XTUOJ-1277TriTriangle/",
            "title": "XTUOJ_1277TriTriangle",
            "date_published": "2022-12-10T16:01:51.000Z",
            "content_html": "<h1 id=\"Tri-Triangle\"><a href=\"#Tri-Triangle\" class=\"headerlink\" title=\"Tri-Triangle\"></a>Tri-Triangle</h1><h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>给定一个字母，请输出其对应的字母三角形（最后一行行首，每行末无空格）。 比如输入E，输出</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">         A</span><br><span class=\"line\">        ABA</span><br><span class=\"line\">       ABCBA </span><br><span class=\"line\">      ABCDCBA</span><br><span class=\"line\">     ABCDEDCBA</span><br><span class=\"line\">    A         A</span><br><span class=\"line\">   ABA       ABA </span><br><span class=\"line\">  ABCBA     ABCBA </span><br><span class=\"line\"> ABCDCBA   ABCDCBA</span><br><span class=\"line\">ABCDEDCBA ABCDEDCBA</span><br></pre></td></tr></table></figure>\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>存在多个样例，每行输入一个大写字母。</p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>依次输出每个字符对应的字符三角形。</p>\n<h2 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A</span><br><span class=\"line\">B</span><br><span class=\"line\">C</span><br></pre></td></tr></table></figure>\n<h2 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> A</span><br><span class=\"line\">A A</span><br><span class=\"line\">   A</span><br><span class=\"line\">  ABA</span><br><span class=\"line\"> A   A</span><br><span class=\"line\">ABA ABA</span><br><span class=\"line\">     A</span><br><span class=\"line\">    ABA</span><br><span class=\"line\">   ABCBA</span><br><span class=\"line\">  A     A</span><br><span class=\"line\"> ABA   ABA </span><br><span class=\"line\">ABCBA ABCBA</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    char N;</span><br><span class=\"line\">    while(scanf(&quot;%c&quot;,&amp;N) != EOF)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int i,j;</span><br><span class=\"line\">        for(i=0; i&lt;N-&#x27;A&#x27;+1; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            for(j=0; j&lt;2*(N-&#x27;A&#x27;+1)-i-1; j++)</span><br><span class=\"line\">                printf(&quot; &quot;);</span><br><span class=\"line\">            for(j=0; j&lt;i; j++)</span><br><span class=\"line\">                printf(&quot;%c&quot;,&#x27;A&#x27;+j);</span><br><span class=\"line\">            for(; j&gt;=0; j--)</span><br><span class=\"line\">                printf(&quot;%c&quot;,&#x27;A&#x27;+j);</span><br><span class=\"line\">            printf(&quot;\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for(i=0; i&lt;N-&#x27;A&#x27;+1; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            for(j=0; j&lt;N-&#x27;A&#x27;-i; j++)</span><br><span class=\"line\">                printf(&quot; &quot;);</span><br><span class=\"line\">            for(j=0; j&lt;i; j++)</span><br><span class=\"line\">                printf(&quot;%c&quot;,&#x27;A&#x27;+j);</span><br><span class=\"line\">            for(; j&gt;=0; j--)</span><br><span class=\"line\">                printf(&quot;%c&quot;,&#x27;A&#x27;+j);</span><br><span class=\"line\">            for(j=0; j&lt;2*(N-&#x27;A&#x27;+1)-2*i-1; j++)</span><br><span class=\"line\">                printf(&quot; &quot;);</span><br><span class=\"line\">            for(j=0; j&lt;i; j++)</span><br><span class=\"line\">                printf(&quot;%c&quot;,&#x27;A&#x27;+j);</span><br><span class=\"line\">            for(; j&gt;=0; j--)</span><br><span class=\"line\">                printf(&quot;%c&quot;,&#x27;A&#x27;+j);</span><br><span class=\"line\">            printf(&quot;\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/10/XTUOJ-1278ArithmeticSequence/",
            "url": "https://mangpumo.github.io/2022/12/10/XTUOJ-1278ArithmeticSequence/",
            "title": "XTUOJ_1278ArithmeticSequence",
            "date_published": "2022-12-10T15:54:47.000Z",
            "content_html": "<h1 id=\"Arithmetic-Sequence\"><a href=\"#Arithmetic-Sequence\" class=\"headerlink\" title=\"Arithmetic Sequence\"></a>Arithmetic Sequence</h1><h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>给一个整数数列，请判断是否为等差数列。</p>\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>第一行是一个整数T(1≤T≤100)，表示样例的个数。 每个样例第一行是一个整数N(3≤N≤10000)，表示数列元素的个数。 第二行是N个整数，每个整数处于[1,1000000000]之间。</p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>如果数列构成等差数列，输出”Yes”;否则，输出”No”。</p>\n<h2 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br><span class=\"line\">3</span><br><span class=\"line\">1 2 3</span><br><span class=\"line\">3</span><br><span class=\"line\">1 2 4</span><br><span class=\"line\">5</span><br><span class=\"line\">1 3 5 7 9</span><br></pre></td></tr></table></figure>\n<h2 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Yes</span><br><span class=\"line\">No</span><br><span class=\"line\">Yes</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int T;</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;T);</span><br><span class=\"line\">    while(T--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int N;</span><br><span class=\"line\">        int flag = 1;</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;N);</span><br><span class=\"line\">        __int64 a[N];</span><br><span class=\"line\">        int i,j;</span><br><span class=\"line\">        for(i=0; i&lt;N; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            scanf(&quot;%I64d&quot;,&amp;a[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for(i=0,j=1;i+1&lt;N-1,j+1&lt;N;i++,j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(a[j]-a[i] == a[j+1]-a[i+1])&#123;</span><br><span class=\"line\">                flag = 1;</span><br><span class=\"line\">            &#125;else&#123;</span><br><span class=\"line\">                flag = 0;</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        /*</span><br><span class=\"line\">        int cha = a[1]-a[0];</span><br><span class=\"line\">        </span><br><span class=\"line\">        for(i=1; i&lt;N-1; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(a[i]-a[i-1] == cha)&#123;</span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            &#125;else&#123;</span><br><span class=\"line\">                flag = 0;</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        */</span><br><span class=\"line\">        if(flag == 1)&#123;</span><br><span class=\"line\">            printf(&quot;Yes\\n&quot;);</span><br><span class=\"line\">        &#125;else&#123;</span><br><span class=\"line\">            printf(&quot;No\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/10/XTUOJ-1279DualPrime/",
            "url": "https://mangpumo.github.io/2022/12/10/XTUOJ-1279DualPrime/",
            "title": "XTUOJ_1279DualPrime",
            "date_published": "2022-12-10T15:49:51.000Z",
            "content_html": "<h1 id=\"Dual-Prime\"><a href=\"#Dual-Prime\" class=\"headerlink\" title=\"Dual Prime\"></a>Dual Prime</h1><h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>如果一个合数x&#x3D;p⋅q,p,q是素数且p≠q，我们称x是双素数。 现给你一个区间[a,b]，求区间内的的双素数个数。</p>\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>第一行是一个整数T(1≤T≤30000)，为样例的数目。 以后每行一个样例，为两个整数a,b(1≤a≤b≤10^6)</p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>依次每行输出一个样例的结果。</p>\n<h2 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br><span class=\"line\">1 10</span><br><span class=\"line\">1 100</span><br><span class=\"line\">1 1000000</span><br></pre></td></tr></table></figure>\n<h2 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">30</span><br><span class=\"line\">209867</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">int a[1000005];</span><br><span class=\"line\">int b[1000005];</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int T;</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;T);</span><br><span class=\"line\">    int i,j;</span><br><span class=\"line\">    memset(a,0,sizeof(a));</span><br><span class=\"line\">    memset(b,0,sizeof(b));</span><br><span class=\"line\">    for(i=2; i&lt;1000005; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if(!a[i])&#123;</span><br><span class=\"line\">            for(j=i+i; j&lt;1000005; j=j+i)</span><br><span class=\"line\">                a[j] = 1;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for(i=2; i*i&lt;1000001;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        for(j=i+1; j&lt;=1000002/i;j++)</span><br><span class=\"line\">            b[i*j] = (!a[i] &amp;&amp; !a[j]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for(i=1; i&lt;1000001; i++)</span><br><span class=\"line\">        b[i] += b[i-1];</span><br><span class=\"line\">    while(T--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int x,y;</span><br><span class=\"line\">        scanf(&quot;%d %d&quot;,&amp;x,&amp;y);</span><br><span class=\"line\">        printf(&quot;%d\\n&quot;,b[y]-b[x-1]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/10/XTUOJ-1280StringHash/",
            "url": "https://mangpumo.github.io/2022/12/10/XTUOJ-1280StringHash/",
            "title": "XTUOJ_1280StringHash",
            "date_published": "2022-12-10T15:46:56.000Z",
            "content_html": "<h1 id=\"String-Hash\"><a href=\"#String-Hash\" class=\"headerlink\" title=\"String Hash\"></a>String Hash</h1><h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>把字符串进行Hash，来判断字符串是否相等是一种很常见的技术。 对一个只含英文小写字母字符串进行Hash，一种比较简单的方法是把字符串看成一个26进制的数，a<del>z分别表示0</del>25，获得这个值后对某个素数p取模。但是因为a是0，所以”abc”和”bc”的Hash值肯定是一样的，为了解决这个问题，我们假定在字符串前加入字符b（即26进制数最高位为1）比如p&#x3D;11，字符串”abc”,相当于26进制数”1012”，所以对应的十进制数为17604，所以哈希值为4。<br>我们假定p&#x3D;1000000007，请将给定的字符串给出对应的hash值。</p>\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>存在多个样例。每行一个只含英文小写字母的字符串，长度不超过1000个字符。</p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>每行输出一个样例的结果</p>\n<h2 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">abc</span><br><span class=\"line\">bc</span><br><span class=\"line\">abcdefghijklmnopqrstuvwxyz</span><br></pre></td></tr></table></figure>\n<h2 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">17604</span><br><span class=\"line\">704</span><br><span class=\"line\">115471061</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">#include &lt;math.h&gt;</span><br><span class=\"line\">__int64  p = 1000000007;</span><br><span class=\"line\">char a[1005];</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while(scanf(&quot;%s&quot;,a) != EOF)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        __int64 sum=1;//你TM能不能不要忘了初始值啊</span><br><span class=\"line\">        int n = strlen(a);</span><br><span class=\"line\">        for(int i=0; i&lt;n; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            sum *= 26;</span><br><span class=\"line\">            a[i] = a[i]-&#x27;a&#x27;;</span><br><span class=\"line\">            sum += a[i];</span><br><span class=\"line\">            sum %= p;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;%I64d\\n&quot;,sum%p);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/10/XTUOJ-1281CuteString/",
            "url": "https://mangpumo.github.io/2022/12/10/XTUOJ-1281CuteString/",
            "title": "XTUOJ_1281CuteString",
            "date_published": "2022-12-10T15:43:00.000Z",
            "content_html": "<h1 id=\"Cute-String\"><a href=\"#Cute-String\" class=\"headerlink\" title=\"Cute String\"></a>Cute String</h1><h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>Alice的记忆力不太好，如果一个句子中含的单词（每个单词之间用一个空格隔开）数量超过10，或者句子中字母种类（不区分大小写）超过10个，她就会记不住。现在给你若干个句子，请写个程序判断一下Alice是否能记住这些句子。</p>\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>存在多个样例。<br>每行输入一个字符串，表示句子。字符串长度不超过200，只含英文字母和空格。<br>输入数据保证每个单词之间只有一个空格，行末没有空格。  </p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>对于每个样例，能记住，输出“Yes”，否则输出“No”。</p>\n<h2 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Alice is a smart girl</span><br><span class=\"line\">but she is bad in memory</span><br><span class=\"line\">a b c d e f g h i j</span><br><span class=\"line\">A B C D E F G H I J K</span><br></pre></td></tr></table></figure>\n<h2 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Yes</span><br><span class=\"line\">No</span><br><span class=\"line\">Yes</span><br><span class=\"line\">No</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">char eng[202];//存输入的字符串</span><br><span class=\"line\">int count[30];//存字母种类</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while(gets(eng) != NULL)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int count[30] = &#123;0&#125;;</span><br><span class=\"line\">        int cnt = 0,flag = 0,i;</span><br><span class=\"line\">        int len = strlen(eng);</span><br><span class=\"line\">        for(i=0; i&lt;len; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(eng[i] == &#x27; &#x27;)&#123;//can can 空格（单词数量）</span><br><span class=\"line\">                cnt++;</span><br><span class=\"line\">                eng[i] = 0;//空格的不要计入字母的计数里</span><br><span class=\"line\">            &#125;else if(eng[i] &gt;= &#x27;A&#x27; &amp;&amp; eng[i] &lt;= &#x27;Z&#x27;)&#123;</span><br><span class=\"line\">                eng[i] = eng[i]+32;//大写字母转小写</span><br><span class=\"line\">            &#125;    </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(cnt &gt;= 10)&#123;//空格数量代表单词数量</span><br><span class=\"line\">            printf(&quot;No\\n&quot;);</span><br><span class=\"line\">        &#125;else&#123;</span><br><span class=\"line\">            for(i=0; i&lt;len; i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                if(eng[i])&#123;//不等于0，也就是不是空格</span><br><span class=\"line\">                    count[eng[i]-&#x27;a&#x27;]++;//小写字母</span><br><span class=\"line\">                &#125;else&#123;</span><br><span class=\"line\">                    continue;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            for(i=0; i&lt;30; i++)</span><br><span class=\"line\">            &#123;//can can 有几个字母</span><br><span class=\"line\">                if(count[i])&#123;</span><br><span class=\"line\">                    flag++;</span><br><span class=\"line\">                &#125;else&#123;</span><br><span class=\"line\">                    continue;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                if(flag&gt;10)&#123;</span><br><span class=\"line\">                    printf(&quot;No\\n&quot;);</span><br><span class=\"line\">                    break;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            if(flag &lt;= 10)&#123;</span><br><span class=\"line\">                printf(&quot;Yes\\n&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/10/XTUOJ-1282HarmonicPorgression/",
            "url": "https://mangpumo.github.io/2022/12/10/XTUOJ-1282HarmonicPorgression/",
            "title": "XTUOJ_1282HarmonicPorgression",
            "date_published": "2022-12-10T15:26:07.000Z",
            "content_html": "<h1 id=\"Harmonic-Porgression\"><a href=\"#Harmonic-Porgression\" class=\"headerlink\" title=\"Harmonic Porgression\"></a>Harmonic Porgression</h1><h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>自己去看</p>\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>第一行是一个整数T(1≤T≤1100)，表示样例的个数。 每个样例占一行，为两个整数a,b(2≤a≤b≤100,b−a≤10)</p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>每行输出一个样例的结果，格式为“分子&#x2F;分母”</p>\n<h2 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br><span class=\"line\">2 2</span><br><span class=\"line\">2 3</span><br><span class=\"line\">3 6</span><br></pre></td></tr></table></figure>\n<h2 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1/2</span><br><span class=\"line\">5/6</span><br><span class=\"line\">19/20</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;stdio.h&gt;</span><br><span class=\"line\">long long int gcd(long long int a,long long int b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if(a%b==0)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    a%=b;</span><br><span class=\"line\">    return gcd(b,a);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int i,j,K,a,b;</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;K);</span><br><span class=\"line\">    while(K--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        long long int fz,fm,zdy;</span><br><span class=\"line\">        scanf(&quot;%d %d&quot;,&amp;a,&amp;b);</span><br><span class=\"line\">        fz=1,fm=a;</span><br><span class=\"line\">        for(i=a;i&lt;=b-1;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            fz=fz*(i+1)+fm;</span><br><span class=\"line\">            fm=fm*(i+1);</span><br><span class=\"line\">            zdy=gcd(fz,fm);</span><br><span class=\"line\">            fz/=zdy;</span><br><span class=\"line\">            fm/=zdy;  </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;%I64d/%I64d\\n&quot;,fz,fm);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/10/XTUOJ-1283GoodNumber/",
            "url": "https://mangpumo.github.io/2022/12/10/XTUOJ-1283GoodNumber/",
            "title": "XTUOJ_1283GoodNumber",
            "date_published": "2022-12-10T15:20:17.000Z",
            "content_html": "<h1 id=\"Good-Number\"><a href=\"#Good-Number\" class=\"headerlink\" title=\"Good Number\"></a>Good Number</h1><h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>如果一个数的（无前导0）二进制表示中数码1的个数比数码0的个数多，我们称其为”好数”。 求n位无前导0的二进制数中好数的个数。</p>\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>每行输入一个整数n(1≤n≤64)</p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>每行输出一个样例的结果。</p>\n<h2 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">64</span><br></pre></td></tr></table></figure>\n<h2 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">4611686018427387904</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">__int64 num[65][65] = &#123;0&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    for(int i=0; i&lt;65; i++)&#123;</span><br><span class=\"line\">        num[0][i] = 1;</span><br><span class=\"line\">        num[i][i] = 1;</span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">    for(int i=1; i&lt;65; i++)&#123;</span><br><span class=\"line\">        for(int j=1; j&lt;i; j++)&#123;</span><br><span class=\"line\">            num[j][i] = num[j-1][i-1] + num[j][i-1];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">        int n;</span><br><span class=\"line\">        while(scanf(&quot;%d&quot;,&amp;n) != EOF)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            __int64 sum = 0;</span><br><span class=\"line\">            int m = n/2;</span><br><span class=\"line\">            /*s</span><br><span class=\"line\">            if(n%2 == 0)  m = n/2</span><br><span class=\"line\">            else if(n%2 == 1)  m = n/2+1</span><br><span class=\"line\">            */</span><br><span class=\"line\">            for(int i=0; i&lt;=n-m-1; i++)&#123;</span><br><span class=\"line\">                sum += num[m+i][n-1];</span><br><span class=\"line\">            &#125;          </span><br><span class=\"line\">            printf(&quot;%I64d\\n&quot;,sum);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/09/%E5%93%88%E5%B8%8C%E8%A1%A8-%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86/",
            "url": "https://mangpumo.github.io/2022/12/09/%E5%93%88%E5%B8%8C%E8%A1%A8-%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86/",
            "title": "哈希表_两个数组的交集",
            "date_published": "2022-12-09T04:10:20.000Z",
            "content_html": "<h1 id=\"两个数组的交集\"><a href=\"#两个数组的交集\" class=\"headerlink\" title=\"两个数组的交集\"></a>两个数组的交集</h1><h2 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h2><p>LEETCODE 349.两个数组的交集</p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>没啥好说的….<br>就继续刷吧….</p>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * Note: The returned array must be malloced, assume caller calls free().</span><br><span class=\"line\"> */</span><br><span class=\"line\">int* intersection(int* nums1, int nums1Size, int* nums2, int nums2Size, int* returnSize)&#123;</span><br><span class=\"line\">    int num1Cnt[1000] = &#123;0&#125;;</span><br><span class=\"line\">    int lessSize = nums1Size &gt; nums2Size ? nums2Size : nums1Size;</span><br><span class=\"line\">    int * result = (int *) calloc(lessSize, sizeof(int));</span><br><span class=\"line\">    int resultIndex = 0;</span><br><span class=\"line\"></span><br><span class=\"line\">    int i;</span><br><span class=\"line\">    for(i=0; i&lt;nums1Size; i++)&#123;</span><br><span class=\"line\">        //因为范围有界定，所以使用数组，出现一次就在这个数字的位置加1</span><br><span class=\"line\">        num1Cnt[nums1[i]]++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for(i=0; i&lt;nums2Size; i++)&#123;</span><br><span class=\"line\">        if(num1Cnt[nums2[i]] &gt; 0)&#123;</span><br><span class=\"line\">            //如果在2里也出现了1中的数字（不管几次），就结果数组++；</span><br><span class=\"line\">            result[resultIndex] = nums2[i];</span><br><span class=\"line\">            resultIndex++;</span><br><span class=\"line\">            //防止重复数字，去重</span><br><span class=\"line\">            num1Cnt[nums2[i]] = 0;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //这里我也看不懂，大概就是LEETCODE的核心代码提交的方法把。。。</span><br><span class=\"line\">    * returnSize = resultIndex;</span><br><span class=\"line\">    return result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/08/%E5%93%88%E5%B8%8C%E8%A1%A8-%E6%9C%89%E6%95%88%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D/",
            "url": "https://mangpumo.github.io/2022/12/08/%E5%93%88%E5%B8%8C%E8%A1%A8-%E6%9C%89%E6%95%88%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D/",
            "title": "哈希表_有效的字母异位",
            "date_published": "2022-12-08T15:32:43.000Z",
            "content_html": "<h1 id=\"有效的字母异位\"><a href=\"#有效的字母异位\" class=\"headerlink\" title=\"有效的字母异位\"></a>有效的字母异位</h1><h2 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h2><p>LEETCODE 242.有效的字母异位</p>\n<h2 id=\"通过的代码\"><a href=\"#通过的代码\" class=\"headerlink\" title=\"通过的代码\"></a>通过的代码</h2><p>算法：哈希表</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bool isAnagram(char * s, char * t)&#123;</span><br><span class=\"line\">    int i, x[26] = &#123; 0 &#125;, y[26] = &#123; 0 &#125;;</span><br><span class=\"line\">\tfor (i = 0; s[i] != &#x27;\\0&#x27;; i++)\t</span><br><span class=\"line\">        x[s[i] - &#x27;a&#x27;]++;\t//建立 s 的字符表 x</span><br><span class=\"line\">\tfor (i = 0; t[i] != &#x27;\\0&#x27;; i++)\t</span><br><span class=\"line\">        y[t[i] - &#x27;a&#x27;]++;\t//建立 t 的字符表 y</span><br><span class=\"line\">\tfor (i = 0; i &lt; 26; i++)\t\t\t\t\t\t\t//比较两字符表是否相同</span><br><span class=\"line\">\t\tif (x[i] != y[i])\t</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">    return true;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bool isAnagram(char * s, char * t)&#123;</span><br><span class=\"line\">    int s1 = strlen(s);</span><br><span class=\"line\">    int t1 = strlen(t);</span><br><span class=\"line\">    int record[26] = &#123;0&#125;;</span><br><span class=\"line\">    if(s1 != t1)&#123;</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;else&#123;</span><br><span class=\"line\">        for(int i=0; i&lt;s1; i++)&#123;</span><br><span class=\"line\">            record[s[i]-&#x27;a&#x27;]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        for(int i=0; i&lt;t1; i++)&#123;</span><br><span class=\"line\">            record[t[i]-&#x27;a&#x27;]--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        for(int i=0; i&lt;26; i++)&#123;</span><br><span class=\"line\">            if(record[i])</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return true;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"未通过样例\"><a href=\"#未通过样例\" class=\"headerlink\" title=\"未通过样例\"></a>未通过样例</h2><p>希望大佬帮我DEBUG一下！！感谢<br>联系方式：</p>\n<p>QQ 363790477</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bool isAnagram(char * s, char * t)&#123;</span><br><span class=\"line\">    int s1 = sizeof(s);</span><br><span class=\"line\">    int t1 = sizeof(t);</span><br><span class=\"line\">    int record[26] = &#123;0&#125;;</span><br><span class=\"line\">    if(s1 != t1)&#123;</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for(int i=0; s[i] != &#x27;\\0&#x27;; i++)&#123;</span><br><span class=\"line\">        record[s[i]-&#x27;a&#x27;]++;</span><br><span class=\"line\">        record[t[i]-&#x27;a&#x27;]--;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for(int i=0; i&lt;26; i++)&#123;</span><br><span class=\"line\">        if(record[i] != 0)</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return true;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84%E7%AE%97%E6%B3%95%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0ING%EF%BC%89/",
            "url": "https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84%E7%AE%97%E6%B3%95%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0ING%EF%BC%89/",
            "title": "数组算法（持续更新ING）",
            "date_published": "2022-12-08T13:49:19.000Z",
            "content_html": "<h1 id=\"数组算法\"><a href=\"#数组算法\" class=\"headerlink\" title=\"数组算法\"></a>数组算法</h1><h2 id=\"二分法\"><a href=\"#二分法\" class=\"headerlink\" title=\"二分法\"></a>二分法</h2><h2 id=\"双指针法\"><a href=\"#双指针法\" class=\"headerlink\" title=\"双指针法\"></a>双指针法</h2><h3 id=\"快慢指针法\"><a href=\"#快慢指针法\" class=\"headerlink\" title=\"快慢指针法\"></a>快慢指针法</h3><h2 id=\"滑动窗口\"><a href=\"#滑动窗口\" class=\"headerlink\" title=\"滑动窗口\"></a>滑动窗口</h2><h2 id=\"模拟\"><a href=\"#模拟\" class=\"headerlink\" title=\"模拟\"></a>模拟</h2>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5II/",
            "url": "https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5II/",
            "title": "数组_螺旋矩阵II",
            "date_published": "2022-12-08T13:42:37.000Z",
            "content_html": "<h1 id=\"螺旋矩阵II\"><a href=\"#螺旋矩阵II\" class=\"headerlink\" title=\"螺旋矩阵II\"></a>螺旋矩阵II</h1><h2 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h2><p>LEETCODE 59.螺旋矩阵II</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>没有算法，模拟，看对代码和下标的掌握程度。</p>\n<h2 id=\"LEETCODE-过体代码（COPY的，还是看不懂他的数组返回方式）\"><a href=\"#LEETCODE-过体代码（COPY的，还是看不懂他的数组返回方式）\" class=\"headerlink\" title=\"LEETCODE 过体代码（COPY的，还是看不懂他的数组返回方式）\"></a>LEETCODE 过体代码（COPY的，还是看不懂他的数组返回方式）</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * Return an array of arrays of size *returnSize.</span><br><span class=\"line\"> * The sizes of the arrays are returned as *returnColumnSizes array.</span><br><span class=\"line\"> * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().</span><br><span class=\"line\"> */</span><br><span class=\"line\">int** generateMatrix(int n, int* returnSize, int** returnColumnSizes)&#123;</span><br><span class=\"line\">    //初始化返回的结果数组的大小</span><br><span class=\"line\">    *returnSize = n;</span><br><span class=\"line\">    *returnColumnSizes = (int*)malloc(sizeof(int) * n);</span><br><span class=\"line\">    //初始化返回结果数组ans</span><br><span class=\"line\">    int** ans = (int**)malloc(sizeof(int*) * n);</span><br><span class=\"line\">    int i;</span><br><span class=\"line\">    for(i = 0; i &lt; n; i++) &#123;</span><br><span class=\"line\">        ans[i] = (int*)malloc(sizeof(int) * n);</span><br><span class=\"line\">        (*returnColumnSizes)[i] = n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    //设置每次循环的起始位置</span><br><span class=\"line\">    int startX = 0;</span><br><span class=\"line\">    int startY = 0;</span><br><span class=\"line\">    //设置二维数组的中间值，若n为奇数。需要最后在中间填入数字</span><br><span class=\"line\">    int mid = n / 2;</span><br><span class=\"line\">    //循环圈数</span><br><span class=\"line\">    int loop = n / 2;</span><br><span class=\"line\">    //偏移数</span><br><span class=\"line\">    int offset = 1;</span><br><span class=\"line\">    //当前要添加的元素</span><br><span class=\"line\">    int count = 1;</span><br><span class=\"line\"></span><br><span class=\"line\">    while(loop) &#123;</span><br><span class=\"line\">        int i = startX;</span><br><span class=\"line\">        int j = startY;</span><br><span class=\"line\">        //模拟上侧从左到右</span><br><span class=\"line\">        for(; j &lt; startY + n - offset; j++) &#123;</span><br><span class=\"line\">            ans[startX][j] = count++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //模拟右侧从上到下</span><br><span class=\"line\">        for(; i &lt; startX + n - offset; i++) &#123;</span><br><span class=\"line\">            ans[i][j] = count++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //模拟下侧从右到左</span><br><span class=\"line\">        for(; j &gt; startY; j--) &#123;</span><br><span class=\"line\">            ans[i][j] = count++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //模拟左侧从下到上</span><br><span class=\"line\">        for(; i &gt; startX; i--) &#123;</span><br><span class=\"line\">            ans[i][j] = count++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //偏移值每次加2</span><br><span class=\"line\">        offset+=2;</span><br><span class=\"line\">        //遍历起始位置每次+1</span><br><span class=\"line\">        startX++;</span><br><span class=\"line\">        startY++;</span><br><span class=\"line\">        loop--;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //若n为奇数需要单独给矩阵中间赋值</span><br><span class=\"line\">    if(n%2)</span><br><span class=\"line\">        ans[mid][mid] = count;</span><br><span class=\"line\"></span><br><span class=\"line\">    return ans;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"GCC编译的代码\"><a href=\"#GCC编译的代码\" class=\"headerlink\" title=\"GCC编译的代码\"></a>GCC编译的代码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint n;</span><br><span class=\"line\">\tscanf(&quot;%d&quot;,&amp;n);</span><br><span class=\"line\">\tint a[n][n];//数组</span><br><span class=\"line\">\tint startx = 0,starty = 0;//每一圈循环的开始位置</span><br><span class=\"line\">\tint offset = 1;//控制边界长度</span><br><span class=\"line\">\tint mid = n/2;//确定数组中间值的位置</span><br><span class=\"line\">\tint loop = n/2;//确定循环次数</span><br><span class=\"line\">\tint count = 1;//每次需要填充的数字</span><br><span class=\"line\">\tint i,j;</span><br><span class=\"line\">\twhile(loop--)&#123;</span><br><span class=\"line\">\t\ti = startx;</span><br><span class=\"line\">\t\tj = starty;</span><br><span class=\"line\">\t\t//从上层从左到右</span><br><span class=\"line\">\t\tfor(j = starty; j &lt; n+starty-offset; j++)&#123;</span><br><span class=\"line\">\t\t\ta[i][j] = count++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t//从右侧从上到下</span><br><span class=\"line\">\t\tfor(i = startx; i &lt; n+startx-offset; i++)&#123;</span><br><span class=\"line\">\t\t\ta[i][j] = count++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t//从下层从右到左</span><br><span class=\"line\">\t\tfor(; j &gt; starty; j--)&#123;</span><br><span class=\"line\">\t\t\ta[i][j] = count++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t//从左侧从下到上</span><br><span class=\"line\">\t\tfor(; i &gt; startx; i--)&#123;</span><br><span class=\"line\">\t\t\ta[i][j] = count++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t//如果是奇数，需要把中间补上</span><br><span class=\"line\">\t\tif(n%2 == 1)&#123;</span><br><span class=\"line\">\t\t\ta[mid][mid] = count++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\toffset += 2;</span><br><span class=\"line\">\t\tstartx++;</span><br><span class=\"line\">\t\tstarty++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t//打印出来看一下</span><br><span class=\"line\">\tfor(i=0; i&lt;n; i++)&#123;</span><br><span class=\"line\">\t\tfor(j=0; j&lt;n; j++)&#123;</span><br><span class=\"line\">\t\t\tprintf(&quot;%d &quot;,a[i][j]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tprintf(&quot;\\n&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE/",
            "url": "https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE/",
            "title": "数组_搜索插入位置",
            "date_published": "2022-12-08T03:10:32.000Z",
            "content_html": "<h1 id=\"搜索插入位置\"><a href=\"#搜索插入位置\" class=\"headerlink\" title=\"搜索插入位置\"></a>搜索插入位置</h1><h2 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h2><p>LEETCODE 35.搜索插入位置</p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>不想多说，暴力不一定时间复杂度低，二分不一定更高效。</p>\n<h2 id=\"暴力法\"><a href=\"#暴力法\" class=\"headerlink\" title=\"暴力法\"></a>暴力法</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int searchInsert(int* nums, int numsSize, int target)&#123;</span><br><span class=\"line\">    for(int i=0; i&lt;numsSize; i++)&#123;</span><br><span class=\"line\">\t\t//谁说暴力不好用的？</span><br><span class=\"line\">        if(nums[i] &gt;= target)&#123;</span><br><span class=\"line\">            return i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return numsSize;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"二分法（闭区间）\"><a href=\"#二分法（闭区间）\" class=\"headerlink\" title=\"二分法（闭区间）\"></a>二分法（闭区间）</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int searchInsert(int* nums, int numsSize, int target)&#123;</span><br><span class=\"line\">    int left = 0;</span><br><span class=\"line\">    int right = numsSize - 1;</span><br><span class=\"line\">    int middle;</span><br><span class=\"line\">    while(left &lt;= right)&#123;</span><br><span class=\"line\">        middle = left + (right-left)/2;</span><br><span class=\"line\">\t\t//与之前一样的</span><br><span class=\"line\">        if(nums[middle] &lt; target)&#123;</span><br><span class=\"line\">            left = middle + 1;</span><br><span class=\"line\">        &#125; else if (nums[middle] &gt; target)&#123;</span><br><span class=\"line\">            right = middle - 1;</span><br><span class=\"line\">        &#125; else if (nums[middle] == target)&#123;</span><br><span class=\"line\">            return middle;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return right+1;</span><br><span class=\"line\">\t//如果没有就在查找区间末加上一个</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9/",
            "url": "https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9/",
            "title": "数组_有序数组的平方",
            "date_published": "2022-12-08T02:23:05.000Z",
            "content_html": "<h1 id=\"有序数组的平方\"><a href=\"#有序数组的平方\" class=\"headerlink\" title=\"有序数组的平方\"></a>有序数组的平方</h1><h2 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h2><p>LEETCODE 977.有序数组的平方</p>\n<h2 id=\"双指针法\"><a href=\"#双指针法\" class=\"headerlink\" title=\"双指针法\"></a>双指针法</h2><p>因为不太明白它是如何提交数组的，所以在这里copy了别人的代码，仅供参考。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int* sortedSquares(int* nums, int numsSize, int* returnSize)&#123;</span><br><span class=\"line\">    //返回的数组大小就是原数组大小</span><br><span class=\"line\">    *returnSize = numsSize;</span><br><span class=\"line\">    //创建两个指针，right指向数组最后一位元素，left指向数组第一位元素</span><br><span class=\"line\">    int right = numsSize - 1;</span><br><span class=\"line\">    int left = 0;</span><br><span class=\"line\"></span><br><span class=\"line\">    //最后要返回的结果数组</span><br><span class=\"line\">    int* ans = (int*)malloc(sizeof(int) * numsSize);</span><br><span class=\"line\">    int index;</span><br><span class=\"line\">    for(index = numsSize - 1; index &gt;= 0; index--) &#123;</span><br><span class=\"line\">        //左指针指向元素的平方</span><br><span class=\"line\">        int lSquare = nums[left] * nums[left];</span><br><span class=\"line\">        //右指针指向元素的平方</span><br><span class=\"line\">        int rSquare = nums[right] * nums[right];</span><br><span class=\"line\">        //若左指针指向元素平方比右指针指向元素平方大，将左指针指向元素平方放入结果数组。左指针右移一位</span><br><span class=\"line\">        if(lSquare &gt; rSquare) &#123;</span><br><span class=\"line\">            ans[index] = lSquare;</span><br><span class=\"line\">            left++;</span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">        //若右指针指向元素平方比左指针指向元素平方大，将右指针指向元素平方放入结果数组。右指针左移一位</span><br><span class=\"line\">        else &#123;</span><br><span class=\"line\">            ans[index] = rSquare;</span><br><span class=\"line\">            right--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //返回结果数组</span><br><span class=\"line\">    return ans;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/",
            "url": "https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/",
            "title": "数组_长度最小的子数组",
            "date_published": "2022-12-08T01:34:12.000Z",
            "content_html": "<h1 id=\"长度最小的数组\"><a href=\"#长度最小的数组\" class=\"headerlink\" title=\"长度最小的数组\"></a>长度最小的数组</h1><h2 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h2><p>LEETCODE 209.长度最小的数组</p>\n<h2 id=\"暴力算法\"><a href=\"#暴力算法\" class=\"headerlink\" title=\"暴力算法\"></a>暴力算法</h2><p>这道题目暴力解法当然是 两个for循环，然后不断的寻找符合条件的子序列.</p>\n<p>代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int minSubArrayLen(int target, int* nums, int numsSize)&#123;</span><br><span class=\"line\">    int result = INT32_MAX;</span><br><span class=\"line\">    int sum = 0;</span><br><span class=\"line\">    int len = 0;</span><br><span class=\"line\">    for(int i=0; i&lt;numsSize; i++)&#123;</span><br><span class=\"line\">        sum = 0;</span><br><span class=\"line\">        for(int j=i; j&lt;numsSize; j++)&#123;</span><br><span class=\"line\">            sum += nums[j];</span><br><span class=\"line\">            if(sum &gt;= target)&#123;</span><br><span class=\"line\">                len = j-i+1;</span><br><span class=\"line\">                result = result &lt; len ? result : len;</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return result &lt; INT32_MAX ? result : 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"滑动窗口\"><a href=\"#滑动窗口\" class=\"headerlink\" title=\"滑动窗口\"></a>滑动窗口</h2><p>接下来就开始介绍数组操作中另一个重要的方法：<strong>滑动窗口</strong>。</p>\n<p>所谓滑动窗口，就是<strong>不断的调节子序列的起始位置和终止位置</strong>，从而得出我们要想的结果。</p>\n<p>在暴力解法中，是一个for循环滑动窗口的起始位置，一个for循环为滑动窗口的终止位置，用两个for循环 完成了一个不断搜索区间的过程。</p>\n<p>那么滑动窗口如何用一个for循环来完成这个操作呢。</p>\n<p>首先要思考 如果用一个for循环，那么应该表示 滑动窗口的起始位置，还是终止位置。</p>\n<p>如果只用一个for循环来表示 滑动窗口的起始位置，那么如何遍历剩下的终止位置？</p>\n<p>此时难免再次陷入 暴力解法的怪圈。</p>\n<p>所以 只用一个for循环，那么这个循环的索引，一定是表示 滑动窗口的终止位置。</p>\n<p>在本题中实现滑动窗口，主要确定如下三点：</p>\n<ul>\n<li>窗口内是什么？</li>\n<li>如何移动窗口的起始位置？</li>\n<li>如何移动窗口的结束位置？</li>\n</ul>\n<p>窗口就是 满足其和 ≥ s 的长度最小的 连续 子数组。</p>\n<p>窗口的起始位置如何移动：如果当前窗口的值大于s了，窗口就要向前移动了（也就是该缩小了）。</p>\n<p>窗口的结束位置如何移动：窗口的结束位置就是遍历数组的指针，也就是for循环里的索引。</p>\n<p>解题的关键在于 窗口的起始位置如何移动。</p>\n<p><strong>滑动窗口的精妙之处在于根据当前子序列和大小的情况，不断调节子序列的起始位置。从而将O(n^2)暴力解法降为O(n)。</strong></p>\n<p>代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int minSubArrayLen(int target, int* nums, int numsSize)&#123;</span><br><span class=\"line\">    int result = INT32_MAX;</span><br><span class=\"line\">    int i = 0;//滑动窗口起始位置</span><br><span class=\"line\">    int sum = 0;//滑动窗口内元素总和</span><br><span class=\"line\">    int len = 0;//滑动窗口的长度</span><br><span class=\"line\">    for(int j=0; j&lt;numsSize; j++)&#123;</span><br><span class=\"line\">        sum += nums[j];//累加并与target比较</span><br><span class=\"line\">        while(sum &gt;= target)&#123;//不能用IF</span><br><span class=\"line\">            len = j-i+1;</span><br><span class=\"line\">            result = result &lt; len ? result : len;</span><br><span class=\"line\">            sum -= nums[i++];//滑动窗口向后移动减去初始位置的值</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return result &lt; INT32_MAX ? result : 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/",
            "url": "https://mangpumo.github.io/2022/12/08/%E6%95%B0%E7%BB%84-%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/",
            "title": "数组_移除元素",
            "date_published": "2022-12-08T01:31:54.000Z",
            "content_html": "<h1 id=\"移除元素\"><a href=\"#移除元素\" class=\"headerlink\" title=\"移除元素\"></a>移除元素</h1><h2 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h2><p>LEETCODE 27.移除元素</p>\n<h2 id=\"暴力算法\"><a href=\"#暴力算法\" class=\"headerlink\" title=\"暴力算法\"></a>暴力算法</h2><p>这个题目暴力的解法就是两层for循环，一个for循环遍历数组元素 ，第二个for循环更新数组。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int removeElement(int* nums, int numsSize, int val)&#123;</span><br><span class=\"line\">    int i,j;</span><br><span class=\"line\">    int n = numsSize;</span><br><span class=\"line\">    for(i=0; i&lt;numsSize; i++)&#123;</span><br><span class=\"line\">        if(nums[i] == val)&#123;</span><br><span class=\"line\">            for(j=i+1; j&lt;numsSize; j++)&#123;</span><br><span class=\"line\">                nums[j-1] == nums[j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        i--;//每次去除VAL后，数组下标都会前移</span><br><span class=\"line\">        n--;//长度也在减小</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    printf(&quot;%d&quot;,n);</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"双指针法\"><a href=\"#双指针法\" class=\"headerlink\" title=\"双指针法\"></a>双指针法</h2><p>双指针法（快慢指针法）： <strong>通过一个快指针和慢指针在一个for循环下完成两个for循环的工作。</strong></p>\n<p>定义快慢指针</p>\n<ul>\n<li>快指针：寻找新数组的元素 ，新数组就是不含有目标元素的数组</li>\n<li>慢指针：指向更新 新数组下标的位置</li>\n</ul>\n<p>优点：<br>减少复杂度，优化代码。</p>\n<p>代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int removeElement(int* nums, int numsSize, int val)&#123;</span><br><span class=\"line\">    int fast = 0;</span><br><span class=\"line\">    int slow = 0;</span><br><span class=\"line\">    for(; fast&lt;numsSize; fast++)&#123;</span><br><span class=\"line\">        if(nums[fast] != val)&#123;//如果元素不是VAL，下标为slow的元素等于快指针处的元素</span><br><span class=\"line\">            nums[slow++] = nums[fast];</span><br><span class=\"line\">        &#125;//如果相等则跳过，此时slow未递增；快指针依旧在往前进</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return slow;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/07/%E6%95%B0%E7%BB%84-%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/",
            "url": "https://mangpumo.github.io/2022/12/07/%E6%95%B0%E7%BB%84-%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/",
            "title": "数组_二分查找",
            "date_published": "2022-12-07T15:37:29.000Z",
            "content_html": "<h1 id=\"二分查找\"><a href=\"#二分查找\" class=\"headerlink\" title=\"二分查找\"></a>二分查找</h1><h2 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h2><p>LEETCODE 704.二分查找</p>\n<h2 id=\"二分第一种写法\"><a href=\"#二分第一种写法\" class=\"headerlink\" title=\"二分第一种写法\"></a>二分第一种写法</h2><p>第一种写法，我们定义 target 是在一个在左闭右闭的区间里，<strong>也就是[left, right]</strong> （<strong>这个很重要非常重要</strong>）。<br>区间的定义这就决定了二分法的代码应该如何写，<strong>因为定义*target</strong>在**[left, right]<strong>区间</strong>，所以有如下两点：</p>\n<ul>\n<li>while (left &lt;&#x3D; right) 要使用 &lt;&#x3D; ，因为left &#x3D;&#x3D; right是有意义的，所以使用 &lt;&#x3D;</li>\n<li>if (nums[middle] &gt; target) right 要赋值为 middle - 1，因为当前这个nums[middle]一定不是target，那么接下来要查找的左区间结束下标位置就是 middle - 1</li>\n</ul>\n<p><strong>代码如下：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int search(int* nums, int numsSize, int target)&#123;</span><br><span class=\"line\">    int left = 0;</span><br><span class=\"line\">    int right = numsSize-1;</span><br><span class=\"line\">    //当left==right，区间[left, right]依然有效，所以用 &lt;=</span><br><span class=\"line\">    while(left &lt;= right)&#123;</span><br><span class=\"line\">    \t//防止两个int相加造成溢出，等同于相加除2</span><br><span class=\"line\">        int middle = left+(right-left)/2;</span><br><span class=\"line\">        </span><br><span class=\"line\">        if(nums[middle] &gt; target)&#123;</span><br><span class=\"line\">            right = middle-1;//middle一定不是要找的数，所以找他前面一位</span><br><span class=\"line\">        &#125;else if(nums[middle] &lt; target)&#123;</span><br><span class=\"line\">            left = middle+1;//同上</span><br><span class=\"line\">        &#125;else&#123;//nums[middle] == target</span><br><span class=\"line\">            return middle;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;   //未找到下标，返回-1</span><br><span class=\"line\">        return -1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"二分第二种写法\"><a href=\"#二分第二种写法\" class=\"headerlink\" title=\"二分第二种写法\"></a>二分第二种写法</h2><p>如果说定义 target 是在一个在左闭右开的区间里，也就是[left, right) ，那么二分法的边界处理方式则截然不同。</p>\n<p>有如下两点：</p>\n<ul>\n<li>while (left &lt; right)，这里使用 &lt; ,因为left &#x3D;&#x3D; right在区间[left, right)是没有意义的</li>\n<li>if (nums[middle] &gt; target) right 更新为 middle，因为当前nums[middle]不等于target，去左区间继续寻找，而寻找区间是左闭右开区间，所以right更新为middle，即：下一个查询区间不会去比较nums[middle]</li>\n</ul>\n<p>在数组：1,2,3,4,7,9,10中查找元素2，如图所示：<strong>（注意和方法一的区别）</strong></p>\n<p><strong>代码如下：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int search(int* nums, int numsSize, int target)&#123;</span><br><span class=\"line\">    int left = 0;</span><br><span class=\"line\">    int right = numsSize;//看不同</span><br><span class=\"line\">    while(left &lt; right)&#123;//定义target在左闭右开的区间里，即：[left, right)</span><br><span class=\"line\">    \t//==时无意义，会越界</span><br><span class=\"line\">        int middle = left+(right-left)/2;</span><br><span class=\"line\">        </span><br><span class=\"line\">        if(nums[middle] &gt; target)&#123;</span><br><span class=\"line\">            right = middle;//开区间，不会取到middle</span><br><span class=\"line\">        &#125;else if(nums[middle] &lt; target)&#123;</span><br><span class=\"line\">            left = middle+1;//前闭，所以会取到middle+1</span><br><span class=\"line\">        &#125;else&#123;// nums[middle] == target</span><br><span class=\"line\">            return middle;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;\t//未找到下标，返回-1</span><br><span class=\"line\">        return -1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/07/%E6%9D%82%E8%B0%88-%E7%A9%BA%E9%97%B4%E6%8D%A2%E6%97%B6%E9%97%B4/",
            "url": "https://mangpumo.github.io/2022/12/07/%E6%9D%82%E8%B0%88-%E7%A9%BA%E9%97%B4%E6%8D%A2%E6%97%B6%E9%97%B4/",
            "title": "杂谈_空间换时间",
            "date_published": "2022-12-07T14:23:08.000Z",
            "content_html": "<h1 id=\"空间换时间样例\"><a href=\"#空间换时间样例\" class=\"headerlink\" title=\"空间换时间样例\"></a>空间换时间样例</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>比较懒，不想写太多，就整一个样例，统计字母串里出现次数最多的字母</p>\n<h2 id=\"优化前\"><a href=\"#优化前\" class=\"headerlink\" title=\"优化前\"></a>优化前</h2><p>两层循环遍历字母串数组，统计出现最多次数字母的次数；<br>暴力算法就是两层循环枚举出现次数最多的字母；<br>显然时间复杂度太高，运算时间过长非常容易超时；<br>所以这里我们用空间换时间使用一个统计次数的数组，只需要遍历一次就可以了，时间复杂度只用O(n)</p>\n<p><strong>代码如下</strong></p>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**找一串字母出现次数最多的字母**/</span><br><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint max=0;</span><br><span class=\"line\">\tchar ans;</span><br><span class=\"line\">\tint record[26] = &#123;0&#125;;</span><br><span class=\"line\">\tchar arr[1000];</span><br><span class=\"line\">\tgets(arr);</span><br><span class=\"line\">\tint n = strlen(arr);</span><br><span class=\"line\">\tfor(int i=0; i&lt;n; i++)&#123;</span><br><span class=\"line\">\t\trecord[arr[i]-&#x27;a&#x27;]++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfor(int i=0; i&lt;26; i++)&#123;</span><br><span class=\"line\">\t\tif(record[i] &gt; max)&#123;</span><br><span class=\"line\">\t\t\tmax = record[i];</span><br><span class=\"line\">\t\t\tans = i+&#x27;a&#x27;;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tprintf(&quot;%c %d\\n&quot;,ans,max);</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/06/XTUOJ-1114%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%86%E5%BA%8F/",
            "url": "https://mangpumo.github.io/2022/12/06/XTUOJ-1114%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%86%E5%BA%8F/",
            "title": "XTUOJ_1114字符串逆序",
            "date_published": "2022-12-06T15:28:04.000Z",
            "content_html": "<h1 id=\"字符串逆序\"><a href=\"#字符串逆序\" class=\"headerlink\" title=\"字符串逆序\"></a>字符串逆序</h1><h2 id=\"Description\"><a href=\"#Description\" class=\"headerlink\" title=\"Description\"></a>Description</h2><p>给你一个字符串，请将其第K个字符开始的长度为L的子串进行逆序。</p>\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>有多组样例，第一行是一个整数，表示有多少个样例。每个样例占两行，第一行是个字符串，字符串全部由英文小写字符组成，长度不超过200。第二行是两个整数K和L，K从1开始计数，K+L-1不会超过字符串长度。</p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>每行输出一个字符串逆序以后的字符串结果。</p>\n<h2 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">abcabc</span><br><span class=\"line\">1 2</span><br><span class=\"line\">abcabc</span><br><span class=\"line\">2 5</span><br></pre></td></tr></table></figure>\n<h2 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bacabc</span><br><span class=\"line\">acbacb</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int n;</span><br><span class=\"line\">    char str[203];</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;n);</span><br><span class=\"line\">    while(n--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        scanf(&quot; %s&quot;,&amp;str);</span><br><span class=\"line\">        int k,l;</span><br><span class=\"line\">        scanf(&quot;%d %d&quot;,&amp;k,&amp;l);</span><br><span class=\"line\">        int len = strlen(str);</span><br><span class=\"line\">        int i;</span><br><span class=\"line\">        for(i=0;i&lt;k-1;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;%c&quot;,str[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for(i=k+l-2;i&gt;=k-1;i--)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;%c&quot;,str[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for(i=k+l-1;i&lt;len;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;%c&quot;,str[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;\\n&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/12/06/XTUOJ-1109%E5%85%B1%E5%90%8C%E7%9A%84%E5%89%8D%E7%BC%80/",
            "url": "https://mangpumo.github.io/2022/12/06/XTUOJ-1109%E5%85%B1%E5%90%8C%E7%9A%84%E5%89%8D%E7%BC%80/",
            "title": "XTUOJ_1109共同的前缀",
            "date_published": "2022-12-06T15:20:26.000Z",
            "content_html": "<h1 id=\"共同的前缀\"><a href=\"#共同的前缀\" class=\"headerlink\" title=\"共同的前缀\"></a>共同的前缀</h1><h2 id=\"Description\"><a href=\"#Description\" class=\"headerlink\" title=\"Description\"></a>Description</h2><p>给你K个字符串，请求出它们的最长公共前缀。 输入 第一行是一个整数N，表示测试样例的个数。 每个测试样例的第一行是一个整数K（2 &lt;&#x3D; k &lt;&#x3D; 20），表示有多少个字符串；以后每行是一个字符串，每个字符串的长度不超过200个字符。 输出 每行输出一个样例的结果。先输出“Case #: ”，其中’#’为样例的序号（从1开始），冒号为英文冒号，后接一个空格；然后是对应样例的结果。如果没有公共前缀，则无需输出前缀，但Case信息仍需要输出。</p>\n<h2 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">ACD</span><br><span class=\"line\">ACDEF</span><br><span class=\"line\">ACDFE</span><br><span class=\"line\">2</span><br><span class=\"line\">ABC</span><br><span class=\"line\">BCD</span><br></pre></td></tr></table></figure>\n<h2 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Case 1: ACD</span><br><span class=\"line\">Case 2: </span><br></pre></td></tr></table></figure>\n<h2 id=\"参考源码\"><a href=\"#参考源码\" class=\"headerlink\" title=\"参考源码\"></a>参考源码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;stdio.h&gt;</span><br><span class=\"line\">#include&lt;string.h&gt;</span><br><span class=\"line\">int main() </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int top;</span><br><span class=\"line\">    scanf(&quot;%d&quot;, &amp;top);</span><br><span class=\"line\">    char original[202] = &#123; 0 &#125;;</span><br><span class=\"line\">    char alphabet[202] = &#123; 0 &#125;;</span><br><span class=\"line\">    char same[202] = &#123; 0 &#125;;</span><br><span class=\"line\">    int cnt = 1;</span><br><span class=\"line\">    while (top--) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int length;</span><br><span class=\"line\">        scanf(&quot;%d&quot;, &amp;length);</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        scanf(&quot;%s&quot;, &amp;original, 200);</span><br><span class=\"line\">        </span><br><span class=\"line\">        length -= 2;</span><br><span class=\"line\">        int resemble = 200;</span><br><span class=\"line\">        scanf(&quot;%s&quot;, &amp;alphabet, 200);</span><br><span class=\"line\">        for (int i = 0; i &lt; 200; i++) </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if (original[i] != alphabet[i]) </span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                resemble = i;</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else </span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                same[i] = alphabet[i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        memset(alphabet, 0, sizeof(char));</span><br><span class=\"line\">        while (length--) </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            scanf(&quot;%s&quot;, &amp;alphabet, 200);</span><br><span class=\"line\">            for (int i = 0; i &lt;= resemble; i++) &#123;</span><br><span class=\"line\">                if (same[i] != alphabet[i]) </span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    resemble = i;</span><br><span class=\"line\">                    break;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            memset(alphabet, 0, sizeof(char));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;Case %d: &quot;, cnt++);</span><br><span class=\"line\">        for (int i = 0; i &lt; resemble; i++) </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(same[i] != 0)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">            printf(&quot;%c&quot;, same[i]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;\\n&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": []
        }
    ]
}